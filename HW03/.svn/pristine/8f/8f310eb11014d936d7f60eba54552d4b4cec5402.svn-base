package balls;

import java.awt.Color;
import java.awt.Component;

/**
 * The FastSlowBall class extends the ABall class.
 * Breathing balls increase and decrease their 
 * speed over a fixed interval.
 */
public class FastSlowBall extends ABall {
	
	/**
	 * Counts the number of frames that have occurred -
	 * used as a timer for the changing speed.
	 */
	private int frameCounter = 0;
	/**
	 * True while the speed is decreasing, 
	 * false when it is increasing instead.
	 */
	private boolean decrease = false;

	/**
	 * General constructor for FastSlowBalls.
	 * 
	 * @param color		The color of the ball
	 * @param xLoc		The x coordinate of the center of the ball
	 * @param yLoc		The y coordinate of the center of the ball
	 * @param xVel		The magnitude of the x component of the velocity of the ball
	 * @param yVel		The magnitude of the y component of the velocity of the ball
	 * @param radius	The radius of the ball
	 * @param inCanavas	The canvas component that holds the ball
	 */
	public FastSlowBall (Color color, int xLoc, int yLoc, int xVel, int yVel, int radius, Component inCanvas)  {
		super (color, xLoc, yLoc, xVel, yVel, radius, inCanvas) ;
	}
	
	/**
	 * Updates the ball's state by changing its
	 * speed over a fixed interval.
	 */
	@Override
	public void updateState() {
		
		// Define direction of ball
		int xDir = 1;
		if (getXVel() < 0)
		{
			xDir = -1;
		}
		int yDir = 1;
		if (getYVel() < 0) {
			yDir = -1;
		}
		
		// Increment the ball's speed
		if(decrease) {
			this.setXVel(getXVel() - (1 * xDir));
			this.setYVel(getYVel() - (1 * yDir));
		}
		else {
			this.setXVel(getXVel() + (1 * xDir));
			this.setYVel(getYVel() + (1 * yDir));
		}
		
		// Increase the counter
		frameCounter += 1;
		if (frameCounter >= 40) {
			decrease = !decrease;
			frameCounter = 0;
		}
	}
}