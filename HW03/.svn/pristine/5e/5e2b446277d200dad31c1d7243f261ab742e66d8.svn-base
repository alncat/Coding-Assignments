package controller;

import java.awt.Component;
import java.awt.EventQueue;
import java.awt.Graphics;

import model.BallModel;
import strategies.IStrategyFac;
import strategies.IUpdateStrategy;
import view.BallView;
import view.IModelControlAdapter;
import view.IModelUpdateAdapter;

/**
 * MVC Controller for the system
 * @param <TDropListItem>
 */
public class Controller<TDropListItem> {

	// Fields for the adapters to close over (initialized when the Controller is started)
	
	/**
	 * A model for a system of balls.
	 */
	private BallModel model; 
	/**
	 * A view for a system of balls.
	 */
	private BallView view; 
	
	/**
	 * Controller constructor builds the system.
	 */
	public Controller() {
	
		// Order of model / view construction is arbitrary 
	
		// set the model field
		model = new BallModel( new model.IViewControlAdapter() {

			/**
			 * This method gets the canvas from the view's getCanvas method.
			 * @return view's canvas
			 */
			@Override
			public Component getCanvas() {
				return view.getCanvas();
			}

			
			
		} , new model.IViewUpdateAdapter(){

			/**
			 * The method that tells the view to update.
			 */
			@Override
			public void update() {
				view.update();
			}
			
		}); 
		
		// set the view field
		view = new BallView<IStrategyFac>( new IModelControlAdapter<IStrategyFac>(){

			@Override
			public IStrategyFac addStrategey(String classname) {
				return model.makeStrategyFac(classname);
			}

			@Override
			public void makeBall(IStrategyFac selectedItem) {
				model.makeBall(selectedItem.make(), view.getCanvas());
			}

			@Override
			public IStrategyFac combineStrategies(IStrategyFac selecteditem1,
					IStrategyFac selecteditem2) {
				return model.combineStrategyFacs(selecteditem1, selecteditem2);
			}

			@Override
			public void switchStrategy(Object selectedItem) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void makeSwitcherBall() {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void clearBalls() {
				model.clearBalls();
				
			}
			
		},  new IModelUpdateAdapter(){

			@Override
			public void update(Graphics g) {
				// TODO Auto-generated method stub
				
			}
			
		}); 	
	}
	
	/**
	 * Starts the system.
	 */
	public void start() {
		model.start();
		view.start();	
	}
	
	/**
	 * Launches the application.
	 * 
	 * @param args - Arguments given by the system or command line.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {   // Java specs say that the system must be constructed on the GUI event thread.
			public void run() {
				try {
					Controller controller = new Controller();   // instantiate the system
					controller.start();  // start the system
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
}
