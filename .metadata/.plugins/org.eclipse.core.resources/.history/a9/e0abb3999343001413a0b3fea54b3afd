package paint;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.Toolkit;
import java.awt.geom.AffineTransform;
import java.awt.image.ImageObserver;

import balls.Ball;

public class ImagePaintStrategy extends APaintStrategy {

  private ImageObserver imageObs;
  private Image image;
  private double scaleFactor = 1.0;
  private double fillFactor = 1.0;
	public ImagePaintStrategy(AffineTransform at, String fileName, double fillFactor) {
    super(at);
    this.fillFactor = fillFactor;
    try {
      image = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource(fileName));
  }
  catch (Exception e){
      System.err.println("ImagePaintStrategy: Error reading file: "+fileName +"\n"+e);
  }
  }
	public void init(Ball host) {
	  imageObs = host.getCanvas();
	  MediaTracker mt = new MediaTracker(host.getCanvas());
	  mt.addImage(image, 1);
	  try {
	    mt.waitForAll();
	  }
	  catch(Exception e){
	    System.out.println("ImagePaintStrategy.init(): Error waiting for image.  Exception = "+e);
	  }

	  scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0);
	}
	
	  protected AffineTransform localAT = new AffineTransform();

	  public void paintXfrm(Graphics g, Ball host, AffineTransform at){
	 localAT.setToScale(scaleFactor, scaleFactor);
	 localAT.translate(-image.getWidth(imageObs)/2.0, -image.getHeight(imageObs)/2.0);
	 localAT.preConcatenate(at);
	 ((Graphics2D)g).drawImage(image, localAT, imageObs); 
	  }

}
