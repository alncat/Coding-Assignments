package strategies.paint;

import java.awt.Graphics;
import java.awt.geom.AffineTransform;

import factories.CompositeShapeFactory;
import factories.EllipseShapeFactory;


public class CompositePaintStrategy extends AShape {
	AShape [] children = new AShape[2];

	/* (non-Javadoc)
	 * @see shape.AShape#paint(int, int, java.awt.Graphics)
	 * 
	 * creates composition shape of a rectangle and circle
	 * 
	 */
	@Override
	public void paint(int x, int y, Graphics g) {
		// TODO Auto-generated method stub
		EquilTri first = new EquilTri(3,50,60);
		Rect second = new Rect(50,50);
		children[0] = first;
		children[1] = second;
		children[0].paint(50, 100, g);
		children[1].paint(50, 50, g);
	}
	
	public CompositePaintStrategy(){}
	
	/**
	 * Constructor that allows the specification of the location, x-radius and y-radius of the
	 * prototype ellipse. The AffineTransform to use is given.
	 * 
	 * @param at The AffineTransform to use for internal calculations
	 * @param x floating point x-coordinate of center of circle
	 * @param y floating point y-coordinate of center of circle
	 * @param width floating point x-radius of the circle (ellipse)
	 * @param height floating point y-radius of the circle (ellipse)
	 */
	public CompositePaintStrategy(AffineTransform at, double x, double y, double width, double height) {
		super();// at, CompositeShapeFactory.Singleton.makeShape(x, y, width, height)
	}
	
}