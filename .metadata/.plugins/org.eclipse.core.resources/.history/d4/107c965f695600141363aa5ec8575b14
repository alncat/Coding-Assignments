package visitor;

import provided.music.IPhrase;
import provided.music.IPhraseVisitorCmd;
import provided.music.Note;
import provided.player.ISequencePlayerStatus;
import provided.player.SequencePlayer;

public class PhraseVisitorCmd implements IPhraseVisitorCmd {
	private IPhrase theHost;
	private String theId;
	
	public PhraseVisitorCmd( IPhrase HostIn, String idIn){
		theHost = HostIn;
		theId = idIn;
		chop(theHost);
	}
	
	@Override
	public Object apply(String id, IPhrase host, Object... params) {
		// TODO Auto-generated method stub
		
		return null;
	}
	
	public void chop(IPhrase host){
		/*SequencePlayer sp = new SequencePlayer(16, 0);  // 16 = ticks per QUARTER note
		sp.setTicksPerDefaultNote(16);  // 16 = ticks per DEFAULT note
		sp.setTempo(140);   // 140 quarter notes (beats) per minute
		Note g = new Note(); //'G', 0, 0, 1.0, false
		sp.addNote(g, 10);   // 10 = start tick of note.  Tick of next note is returned.
		sp.play(ISequencePlayerStatus.NULL);   // No-op end-of-song cmd supplied.*/
	}

}
