package com.seanharger.chatapp.view;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JTabbedPane;
import javax.swing.JButton;

import com.seanharger.chatapp.view.roompanel.ChatroomPanel;
import com.seanharger.chatapp.view.roompanel.IViewToChatroomAdapter;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class MainFrame extends JFrame {

	private IViewToModelAdapter model;
	private JPanel contentPane;
	private final JTabbedPane tabbedPane = new JTabbedPane(JTabbedPane.TOP);
	private final JPanel panelConnect = new JPanel();
	private final JButton btnNewChatroom = new JButton("New chatroom");
	private final JButton btnJoinChatroom = new JButton("Join chatroom");

	public MainFrame(IViewToModelAdapter model) {
		this.model = model;
		initGUI();

	}

	public void start() {
		this.setVisible(true);
	}

	public ChatroomPanel makeChatroomPanel(String name, IViewToChatroomAdapter chatroom) {
		ChatroomPanel newPanel = new ChatroomPanel(chatroom);
		tabbedPane.add(name, newPanel);
		return newPanel;
	}

	public void removeChatroomPanel(ChatroomPanel panel) {
		tabbedPane.remove(panel);
	}

	public void initGUI() {
		JFrame thisMainFrame = this;

		setTitle("ChatApp");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);

		contentPane.add(tabbedPane, BorderLayout.CENTER);

		contentPane.add(panelConnect, BorderLayout.NORTH);
		btnNewChatroom.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String newRoomName =
						JOptionPane.showInputDialog(thisMainFrame,
								"Enter the name of the chatroom.", "Chatroom Name",
								JOptionPane.QUESTION_MESSAGE);
				if (newRoomName != null && newRoomName.length() > 0) {
					model.createChatroom(newRoomName);
				}
			}


		});

		panelConnect.add(btnNewChatroom);
		btnJoinChatroom.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String ipAddress = 
						JOptionPane.showInputDialog(thisMainFrame,
								"Enter the IP address of the remote user.", "Remote IP Address",
								JOptionPane.QUESTION_MESSAGE);
				if (ipAddress != null && ipAddress.length() > 0) {
					model.joinChatroom(ipAddress);
				}
			}
		});

		panelConnect.add(btnJoinChatroom);
	}



}
