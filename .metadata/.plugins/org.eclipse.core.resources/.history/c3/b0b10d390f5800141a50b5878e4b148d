<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_BI75MFgPEeSTYp88fJMr7g" name="HW062">
    <eAnnotations xmi:id="_BbCV0FgPEeSTYp88fJMr7g" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_BbC84FgPEeSTYp88fJMr7g" source="codegen">
        <details xmi:id="_BbC84VgPEeSTYp88fJMr7g" key="codegenDirectory" value="/HW06/src"/>
        <details xmi:id="_DRruYFgPEeSTYp88fJMr7g" key="AssociatedSourceCode" value="/HW06/src/adapters/IModelToView.java;1266527697/1;/HW06/src/adapters/IViewToModel.java;1134976459/1;/HW06/src/controller/Controller.java;411440786/1;/HW06/src/model/Model.java;2571718313/1;/HW06/src/model/visitors/PlaySongVisitor.java;2822444046/1;/HW06/src/model/visitors/ToStringVisitor.java;2341259298/1;/HW06/src/provided/abcParser/ABCParser.java;3153405954/1;/HW06/src/provided/music/APhraseVisitor.java;1010602946/1;/HW06/src/provided/music/Chord.java;1971309365/1;/HW06/src/provided/music/DecoratorSeqList.java;2350535095/1;/HW06/src/provided/music/FineToggleDecoratorSeqList.java;2903020233/1;/HW06/src/provided/music/Header.java;855643762/1;/HW06/src/provided/music/INote.java;507512117/1;/HW06/src/provided/music/IPhrase.java;1122806289/1;/HW06/src/provided/music/IPhraseVisitor.java;2583970647/1;/HW06/src/provided/music/IPhraseVisitorCmd.java;3144788355/1;/HW06/src/provided/music/ISeqList.java;1752096597/1;/HW06/src/provided/music/MTSeqList.java;797718925/1;/HW06/src/provided/music/NESeqList.java;2982850294/1;/HW06/src/provided/music/Note.java;1713223383/1;/HW06/src/provided/music/NoteCollection.java;2061496451/1;/HW06/src/provided/music/ToggleDecoratorSeqList.java;3430233739/1;/HW06/src/provided/music/Triplet.java;163966482/1;/HW06/src/provided/music/Tuplet.java;799272193/1;/HW06/src/provided/player/ISequencePlayerStatus.java;2951061270/1;/HW06/src/provided/player/SequencePlayer.java;1814505560/1;/HW06/src/provided/player/SequencePlayer2.java;1631007379/1;/HW06/src/provided/token/ATokVisitor.java;2901257995/1;/HW06/src/provided/token/ITokVisitor.java;275599564/1;/HW06/src/provided/token/ITokVisitorCmd.java;4098180758/1;/HW06/src/provided/token/ITokenFactory.java;1037223879/1;/HW06/src/provided/token/Token.java;2670746935/1;/HW06/src/provided/token/TokenFactory.java;1190700287/1;/HW06/src/provided/token/tokenizer/ABCTokenizer.java;2416051212/1;/HW06/src/provided/token/tokenizer/IStringTokenizer.java;2530580852/1;/HW06/src/provided/token/tokenizer/ITokenizer.java;1031763823/1;/HW06/src/provided/token/tokenizer/StringTokenizer.java;3408517212/1;/HW06/src/provided/util/ABCInstrument.java;1182473716/1;/HW06/src/provided/util/ABCUtil.java;817699883/1;/HW06/src/provided/util/KeySignature.java;1164859549/1;/HW06/src/view/View.java;2503431071/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_CJR74FgPEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_CJR74VgPEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_CJR74lgPEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_CJSi8FgPEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_CJSi8VgPEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_CJSi8lgPEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_CJSi81gPEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_CJSi9FgPEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_CJSi9VgPEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_CJTKAFgPEeSTYp88fJMr7g" name="adapters">
      <packagedElement xmi:type="uml:Interface" xmi:id="_CLEroFgPEeSTYp88fJMr7g" name="IModelToView">
        <ownedComment xmi:id="_CSF5oFgPEeSTYp88fJMr7g">
          <body>The Model to View adapter interface.

Contains no methods, can be added in future if needed.</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_CLF5wFgPEeSTYp88fJMr7g" name="IViewToModel">
        <ownedComment xmi:id="_CSF5oVgPEeSTYp88fJMr7g">
          <body>The View to Model adapter interface.</body>
        </ownedComment>
        <ownedOperation xmi:id="_CLGg0FgPEeSTYp88fJMr7g" name="loadFile">
          <ownedComment xmi:id="_CSF5olgPEeSTYp88fJMr7g">
            <body>Loads user-specified music file.
     * 
     * @param fileName
     * @return contents of file</body>
          </ownedComment>
          <ownedParameter xmi:id="_CLGg0VgPEeSTYp88fJMr7g" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CLHH4FgPEeSTYp88fJMr7g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CLHH4VgPEeSTYp88fJMr7g" name="parseFile">
          <ownedComment xmi:id="_CSF5o1gPEeSTYp88fJMr7g">
            <body>Parses previously inputted music file to retrieve its string representation.</body>
          </ownedComment>
          <ownedParameter xmi:id="_CLHH4lgPEeSTYp88fJMr7g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CLHu8FgPEeSTYp88fJMr7g" name="playMusic">
          <ownedComment xmi:id="_CSF5pFgPEeSTYp88fJMr7g">
            <body>Plays music from previously inputted music file.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CJUYIFgPEeSTYp88fJMr7g" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_CJUYIVgPEeSTYp88fJMr7g" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_CPi78FgPEeSTYp88fJMr7g" name="EventQueue"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_C8QQ8lgPEeSTYp88fJMr7g" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_C94ooFgPEeSTYp88fJMr7g" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_C952wVgPEeSTYp88fJMr7g" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_C90-QFgPEeSTYp88fJMr7g" name="BorderLayout"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CJbs4FgPEeSTYp88fJMr7g" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_CPre0FgPEeSTYp88fJMr7g" name="Hashtable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CPsF4FgPEeSTYp88fJMr7g" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CQk2sFgPEeSTYp88fJMr7g" name="Stack"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CRF0EFgPEeSTYp88fJMr7g" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CKRaYFgPEeSTYp88fJMr7g" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_CQRUs1gPEeSTYp88fJMr7g" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CQR7wFgPEeSTYp88fJMr7g" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CQSi0FgPEeSTYp88fJMr7g" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CQSi0lgPEeSTYp88fJMr7g" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CQTJ4FgPEeSTYp88fJMr7g" name="InputStreamReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CQTJ4lgPEeSTYp88fJMr7g" name="Reader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CQTw8VgPEeSTYp88fJMr7g" name="StreamTokenizer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CQmE0FgPEeSTYp88fJMr7g" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_CQmr4FgPEeSTYp88fJMr7g" name="Object"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_C-Fc8FgPEeSTYp88fJMr7g" name="Character"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CJUYIlgPEeSTYp88fJMr7g" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_CPkKEFgPEeSTYp88fJMr7g" name="View">
        <ownedComment xmi:id="_C-cCRFgPEeSTYp88fJMr7g">
          <body>The View for this system.</body>
        </ownedComment>
        <generalization xmi:id="_C-IgQFgPEeSTYp88fJMr7g" general="_C91lUVgPEeSTYp88fJMr7g"/>
        <ownedAttribute xmi:id="_C-UGcVgPEeSTYp88fJMr7g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-UGclgPEeSTYp88fJMr7g" value="6376164136924196333L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_C-UGc1gPEeSTYp88fJMr7g" name="viewToModel" visibility="private" type="_CLF5wFgPEeSTYp88fJMr7g" association="_C-eegVgPEeSTYp88fJMr7g"/>
        <ownedAttribute xmi:id="_C-UtgVgPEeSTYp88fJMr7g" name="contentPane" visibility="private" type="_C92MYFgPEeSTYp88fJMr7g" association="_C-fFkVgPEeSTYp88fJMr7g"/>
        <ownedAttribute xmi:id="_C-Utg1gPEeSTYp88fJMr7g" name="panel" visibility="private" isLeaf="true" type="_C92MYFgPEeSTYp88fJMr7g" isReadOnly="true" association="_C-fFlFgPEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-UthFgPEeSTYp88fJMr7g" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_C-VUkFgPEeSTYp88fJMr7g" name="splitPane" visibility="private" isLeaf="true" type="_C92zcVgPEeSTYp88fJMr7g" isReadOnly="true" association="_C-fsoVgPEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-VUkVgPEeSTYp88fJMr7g" value="new JSplitPane()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_C-VUk1gPEeSTYp88fJMr7g" name="textFieldFile" visibility="private" isLeaf="true" type="_C93agVgPEeSTYp88fJMr7g" isReadOnly="true" association="_C-gTsFgPEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-VUlFgPEeSTYp88fJMr7g" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_C-VUllgPEeSTYp88fJMr7g" name="lblFile" visibility="private" isLeaf="true" type="_C93ag1gPEeSTYp88fJMr7g" isReadOnly="true" association="_C-g6wFgPEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-V7oFgPEeSTYp88fJMr7g" value="new JLabel(&quot;File:&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_C-V7olgPEeSTYp88fJMr7g" name="btnLoad" visibility="private" isLeaf="true" type="_C94BkVgPEeSTYp88fJMr7g" isReadOnly="true" association="_C-klIVgPEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-V7o1gPEeSTYp88fJMr7g" value="new JButton(&quot;Load&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_C-V7pVgPEeSTYp88fJMr7g" name="btnParse" visibility="private" isLeaf="true" type="_C94BkVgPEeSTYp88fJMr7g" isReadOnly="true" association="_C-lMMVgPEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-V7plgPEeSTYp88fJMr7g" value="new JButton(&quot;Parse&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_C-WisVgPEeSTYp88fJMr7g" name="btnPlay" visibility="private" isLeaf="true" type="_C94BkVgPEeSTYp88fJMr7g" isReadOnly="true" association="_C-lzQVgPEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-WislgPEeSTYp88fJMr7g" value="new JButton(&quot;Play&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_C-WitFgPEeSTYp88fJMr7g" name="scrollPaneFileContents" visibility="private" isLeaf="true" type="_C96d0FgPEeSTYp88fJMr7g" isReadOnly="true" association="_C-lzRFgPEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-WitVgPEeSTYp88fJMr7g" value="new JScrollPane()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_C-Wit1gPEeSTYp88fJMr7g" name="scrollPaneParsed" visibility="private" isLeaf="true" type="_C96d0FgPEeSTYp88fJMr7g" isReadOnly="true" association="_C-maUVgPEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-XJwFgPEeSTYp88fJMr7g" value="new JScrollPane()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_C-XJwlgPEeSTYp88fJMr7g" name="textAreaFileContents" visibility="private" isLeaf="true" type="_C9_WUVgPEeSTYp88fJMr7g" isReadOnly="true" association="_C-maVFgPEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-XJw1gPEeSTYp88fJMr7g" value="new JTextArea()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_C-XJxVgPEeSTYp88fJMr7g" name="textAreaIParsed" visibility="private" isLeaf="true" type="_C9_WUVgPEeSTYp88fJMr7g" isReadOnly="true" association="_C-nBYVgPEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-XJxlgPEeSTYp88fJMr7g" value="new JTextArea()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_C-aNEVgPEeSTYp88fJMr7g" name="View" specification="_C8VwgFgPEeSTYp88fJMr7g">
          <ownedParameter xmi:id="_C-aNElgPEeSTYp88fJMr7g" name="viewToModel" type="_CLF5wFgPEeSTYp88fJMr7g"/>
          <ownedParameter xmi:id="_C-aNE1gPEeSTYp88fJMr7g" type="_CPkKEFgPEeSTYp88fJMr7g" direction="return"/>
          <language>java</language>
          <body>this.viewToModel = viewToModel;
     initGUI();
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_C-a0IFgPEeSTYp88fJMr7g" name="start" specification="_C8WXlFgPEeSTYp88fJMr7g">
          <language>java</language>
          <body>setVisible(true); 
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_C-a0IVgPEeSTYp88fJMr7g" name="initGUI" specification="_C8W-oFgPEeSTYp88fJMr7g">
          <language>java</language>
          <body>setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
     setBounds(100, 100, 450, 300);
     contentPane = new JPanel();
     contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
     contentPane.setLayout(new BorderLayout(0, 0));
     setContentPane(contentPane);
     
     contentPane.add(panel, BorderLayout.NORTH);
     
     panel.add(lblFile);
     
     textFieldFile.setToolTipText(&quot;The file to load. Assumed to be in the \&quot;songs\&quot; package with \&quot;.abc\&quot; extension.&quot;);
     textFieldFile.setColumns(10);
     panel.add(textFieldFile);
     
     btnLoad.setToolTipText(&quot;Load the file and create the ABCParser.&quot;);
     btnLoad.addActionListener(new ActionListener() {
         /**
          * Sends input file name to model via adapter and displays the file contents it receives back.
          */
         public void actionPerformed(ActionEvent e) {
             String fileContents = viewToModel.loadFile(textFieldFile.getText());
             textAreaFileContents.setText(fileContents);
             btnParse.setEnabled(true); // once a file is loaded, it can be parsed
         }
     });
     panel.add(btnLoad);
     
     btnParse.addActionListener(new ActionListener() {
         /**
          * Asks adapter for parsed String representation of input file.
          */
         public void actionPerformed(ActionEvent e) {
             textAreaIParsed.setLineWrap(true);
             textAreaIParsed.setWrapStyleWord(true);
             textAreaIParsed.setText(viewToModel.parseFile());
             btnPlay.setEnabled(true); // once a file is parsed, music can be played
         }
     });
     btnParse.setToolTipText(&quot;Parse the file and create the IPhrase structure.&quot;);
     btnParse.setEnabled(false); // button should only be enabled once a music file is loaded
     panel.add(btnParse);
     
     btnPlay.addActionListener(new ActionListener() {
         /**
          * Sends call to adapter to play music from previously-inputted file.
          */
         public void actionPerformed(ActionEvent e) {
             viewToModel.playMusic();
         }
     });
     btnPlay.setToolTipText(&quot;Play the parsed IPhrase data structure.&quot;);
     btnPlay.setEnabled(false); // button should only be enabled once a music file is parsed
     panel.add(btnPlay);
     
     splitPane.setOrientation(JSplitPane.VERTICAL_SPLIT);
     
     contentPane.add(splitPane, BorderLayout.CENTER);
     scrollPaneFileContents.setToolTipText(&quot;The text contents of the file.&quot;);
     scrollPaneFileContents.setViewportBorder(new TitledBorder(null, &quot;File Contents&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, null));
     
     splitPane.setLeftComponent(scrollPaneFileContents);
     
     scrollPaneFileContents.setViewportView(textAreaFileContents);
     scrollPaneParsed.setToolTipText(&quot;The String representation of the IPhrase data structure parsed from the input ABC file.&quot;);
     scrollPaneParsed.setViewportBorder(new TitledBorder(null, &quot;Parsed IPhrase Structure&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, null));
     
     splitPane.setRightComponent(scrollPaneParsed);
     
     scrollPaneParsed.setViewportView(textAreaIParsed);
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_C8VwgFgPEeSTYp88fJMr7g" name="View" method="_C-aNEVgPEeSTYp88fJMr7g">
          <eAnnotations xmi:id="_C8WXklgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_C8WXk1gPEeSTYp88fJMr7g" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_C-cCRVgPEeSTYp88fJMr7g">
            <body>Constructor - creates the frame</body>
          </ownedComment>
          <ownedParameter xmi:id="_C8WXkFgPEeSTYp88fJMr7g" name="viewToModel" type="_CLF5wFgPEeSTYp88fJMr7g"/>
          <ownedParameter xmi:id="_C8WXkVgPEeSTYp88fJMr7g" type="_CPkKEFgPEeSTYp88fJMr7g" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_C8WXlFgPEeSTYp88fJMr7g" name="start" method="_C-a0IFgPEeSTYp88fJMr7g">
          <ownedComment xmi:id="_C-cCRlgPEeSTYp88fJMr7g">
            <body>Starts the already initialized frame, making it visible and ready to
     * interact with the user.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_C8W-oFgPEeSTYp88fJMr7g" name="initGUI" visibility="private" method="_C-a0IVgPEeSTYp88fJMr7g">
          <ownedComment xmi:id="_C-cCR1gPEeSTYp88fJMr7g">
            <body>Initializes the GUI components but does not start the frame.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-eegVgPEeSTYp88fJMr7g" name="" memberEnd="_C-eeglgPEeSTYp88fJMr7g _C-UGc1gPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-eeglgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-eegVgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-fFkVgPEeSTYp88fJMr7g" name="" memberEnd="_C-fFklgPEeSTYp88fJMr7g _C-UtgVgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-fFklgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-fFkVgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-fFlFgPEeSTYp88fJMr7g" name="" memberEnd="_C-fFlVgPEeSTYp88fJMr7g _C-Utg1gPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-fFlVgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-fFlFgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-fsoVgPEeSTYp88fJMr7g" name="" memberEnd="_C-fsolgPEeSTYp88fJMr7g _C-VUkFgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-fsolgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-fsoVgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-gTsFgPEeSTYp88fJMr7g" name="" memberEnd="_C-gTsVgPEeSTYp88fJMr7g _C-VUk1gPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-gTsVgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-gTsFgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-g6wFgPEeSTYp88fJMr7g" name="" memberEnd="_C-g6wVgPEeSTYp88fJMr7g _C-VUllgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-g6wVgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-g6wFgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-klIVgPEeSTYp88fJMr7g" name="" memberEnd="_C-klIlgPEeSTYp88fJMr7g _C-V7olgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-klIlgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-klIVgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-lMMVgPEeSTYp88fJMr7g" name="" memberEnd="_C-lMMlgPEeSTYp88fJMr7g _C-V7pVgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-lMMlgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-lMMVgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-lzQVgPEeSTYp88fJMr7g" name="" memberEnd="_C-lzQlgPEeSTYp88fJMr7g _C-WisVgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-lzQlgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-lzQVgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-lzRFgPEeSTYp88fJMr7g" name="" memberEnd="_C-lzRVgPEeSTYp88fJMr7g _C-WitFgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-lzRVgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-lzRFgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-maUVgPEeSTYp88fJMr7g" name="" memberEnd="_C-maUlgPEeSTYp88fJMr7g _C-Wit1gPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-maUlgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-maUVgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-maVFgPEeSTYp88fJMr7g" name="" memberEnd="_C-maVVgPEeSTYp88fJMr7g _C-XJwlgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-maVVgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-maVFgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_C-nBYVgPEeSTYp88fJMr7g" name="" memberEnd="_C-nBYlgPEeSTYp88fJMr7g _C-XJxVgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_C-nBYlgPEeSTYp88fJMr7g" name="" type="_CPkKEFgPEeSTYp88fJMr7g" association="_C-nBYVgPEeSTYp88fJMr7g"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CJUYI1gPEeSTYp88fJMr7g" name="model">
      <packagedElement xmi:type="uml:Package" xmi:id="_CJVmQFgPEeSTYp88fJMr7g" name="visitors">
        <packagedElement xmi:type="uml:Class" xmi:id="_CLN1kFgPEeSTYp88fJMr7g" name="PlaySongVisitor">
          <ownedComment xmi:id="_CSGgtVgPEeSTYp88fJMr7g">
            <body>Visitor capable of playing the music of a IPhrase host.</body>
          </ownedComment>
          <generalization xmi:id="_CPobgFgPEeSTYp88fJMr7g" general="_CLaC0FgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRNv41gPEeSTYp88fJMr7g" name="playSongVisitor" visibility="private" type="_CLydUFgPEeSTYp88fJMr7g" association="_CSSG4VgPEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRNv5FgPEeSTYp88fJMr7g" value="this"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CROW8VgPEeSTYp88fJMr7g" name="sequencePlayer" visibility="private" type="_CMMtAFgPEeSTYp88fJMr7g" association="_CSSG5FgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRO-AFgPEeSTYp88fJMr7g" name="keySignature" visibility="private" type="_CPmmUFgPEeSTYp88fJMr7g" association="_CSSt8VgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRO-AlgPEeSTYp88fJMr7g" name="lastTick" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRO-A1gPEeSTYp88fJMr7g" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR3QIlgPEeSTYp88fJMr7g" name="PlaySongVisitor" specification="_CLPDsFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR3QI1gPEeSTYp88fJMr7g" type="_CLN1kFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>/*
      * Default
      */
     super(new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             System.err.println(&quot;Unrecognzied element parsed of id &quot; + id);
             return params;
         } 
     });
     
     initSequencePlayer();
     
     /*
      * Default headers - no-op
      */
     String headerString = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;
     for (int i = 0; i &lt; headerString.length(); i++) {
         this.addCmd(&quot;&quot; + headerString.charAt(i), new IPhraseVisitorCmd() {
             @Override
             public Object apply(String id, IPhrase host, Object... params) {
                 return params;
             }
         });
     }
     
     /*
      * L header - set default length of a note
      */
     this.addCmd(&quot;L&quot;, new IPhraseVisitorCmd() { 
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             Header l = (Header) host;
             sequencePlayer.setTicksPerDefaultNote((int) (ABCUtil.Singleton.parseFraction(l.getValue()) * 64));
             return params;
         }
     });
     
     /*
      * K header - set key signature
      */
     this.addCmd(&quot;K&quot;, new IPhraseVisitorCmd() { 
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             Header k = (Header) host;
             keySignature = new KeySignature(k.getValue());
             return params;
         }
     });
     
     /*
      * Q header - set tempo
      */
     this.addCmd(&quot;Q&quot;, new IPhraseVisitorCmd() { 
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             Header q = (Header) host;
             sequencePlayer.setTempo((int) ABCUtil.Singleton.parseTempo(q.getValue(), sequencePlayer.getTicksPerQuarterNote() / sequencePlayer.getTicksPerDefaultNote()));
             return params;
         }
     });
     
     /*
      * Note
      */
     this.addCmd(Note.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             Note note = (Note) host;
             note = keySignature.adjust(note);
             lastTick = sequencePlayer.addNote(note, lastTick);
             return params;
         }
     });
     
     /*
      * Chord - play all notes simulateneously
      */
     this.addCmd(Chord.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             Chord chord = (Chord) host;
             int last = lastTick; // temporary lastTick
             for (Note note : chord.getNotes()) {
                 note = keySignature.adjust(note);
                 last = sequencePlayer.addNote(note, lastTick);
             }
             lastTick = last;
             return params;
         }
     });
     
     /*
      * Triplet - play notes succesively at 2/3 indicated duration
      */
     this.addCmd(Triplet.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             Triplet triplet = (Triplet) host;
             for (Note note : triplet.getNotes()) {
                 note = keySignature.adjust(note);
                 note.setDuration(note.getDuration() * 0.66);
                 lastTick = sequencePlayer.addNote(note, lastTick);
             }
             return params;
         }
     });
     
     /*
      * Empty sequence list - plays music since all IPhrase objects is added to sequencePlayer
      */
     this.addCmd(MTSeqList.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             sequencePlayer.play(ISequencePlayerStatus.NULL);
             return params;
         }
     });
     
     /*
      * Non-empty sequence list
      */
     this.addCmd(NESeqList.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             NESeqList neSeqList = (NESeqList) host;
             neSeqList.getFirst().execute(playSongVisitor);
             neSeqList.getRest().execute(playSongVisitor);
             return params;
         }
     });
     
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR3QJFgPEeSTYp88fJMr7g" name="initSequencePlayer" specification="_CLPDtFgPEeSTYp88fJMr7g">
            <language>java</language>
            <body>sequencePlayer = new SequencePlayer(16, 0);
     sequencePlayer.init(16, 0);
     sequencePlayer.setTicksPerDefaultNote(16);
     sequencePlayer.setTempo(140);
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CLPDsFgPEeSTYp88fJMr7g" name="PlaySongVisitor" method="_CR3QIlgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CLPDsVgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CLPDslgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSGgtlgPEeSTYp88fJMr7g">
              <body>Constructor - loads a default command and commands for various types of IPhrase objects</body>
            </ownedComment>
            <ownedParameter xmi:id="_CLPDs1gPEeSTYp88fJMr7g" type="_CLN1kFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CLPDtFgPEeSTYp88fJMr7g" name="initSequencePlayer" visibility="private" method="_CR3QJFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSGgt1gPEeSTYp88fJMr7g">
              <body>Initializes and configures the Sequence Player to default settings.</body>
            </ownedComment>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CLQ44FgPEeSTYp88fJMr7g" name="ToStringVisitor">
          <ownedComment xmi:id="_CSGguFgPEeSTYp88fJMr7g">
            <body>Visitor capable of parsing IPhrase host for its String representation.</body>
          </ownedComment>
          <generalization xmi:id="_CPobgVgPEeSTYp88fJMr7g" general="_CLaC0FgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRPlEFgPEeSTYp88fJMr7g" name="toStringVisitor" visibility="private" type="_CLydUFgPEeSTYp88fJMr7g" association="_CST8EFgPEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRPlEVgPEeSTYp88fJMr7g" value="this"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR3QJVgPEeSTYp88fJMr7g" name="ToStringVisitor" specification="_CLRf8FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR3QJlgPEeSTYp88fJMr7g" type="_CLQ44FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>/*
      * Default
      */
     super(new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             return host.toString();
         }
     });
     
     /*
      * Empty sequence list
      */
     this.addCmd(MTSeqList.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
            return &quot;}&quot;;
         }
     });
     
     /*
      * Non-empty sequence list
      */
     this.addCmd(NESeqList.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             String s = (String) params[0];
             NESeqList neSeqList = (NESeqList) host;
             return s + (String) neSeqList.getRest().execute(toStringVisitor, &quot;, &quot; + neSeqList.getFirst().toString());
         }
     });
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CLRf8FgPEeSTYp88fJMr7g" name="ToStringVisitor" method="_CR3QJVgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CLRf8VgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CLRf8lgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSGguVgPEeSTYp88fJMr7g">
              <body>Constructor - loads a default command and commands for empty and non-empty sequence lists</body>
            </ownedComment>
            <ownedParameter xmi:id="_CLRf81gPEeSTYp88fJMr7g" type="_CLQ44FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSSG4VgPEeSTYp88fJMr7g" name="" memberEnd="_CSSG4lgPEeSTYp88fJMr7g _CRNv41gPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSSG4lgPEeSTYp88fJMr7g" name="" type="_CLN1kFgPEeSTYp88fJMr7g" association="_CSSG4VgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSSG5FgPEeSTYp88fJMr7g" name="" memberEnd="_CSSG5VgPEeSTYp88fJMr7g _CROW8VgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSSG5VgPEeSTYp88fJMr7g" name="" type="_CLN1kFgPEeSTYp88fJMr7g" association="_CSSG5FgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSSt8VgPEeSTYp88fJMr7g" name="" memberEnd="_CSSt8lgPEeSTYp88fJMr7g _CRO-AFgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSSt8lgPEeSTYp88fJMr7g" name="" type="_CLN1kFgPEeSTYp88fJMr7g" association="_CSSt8VgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CST8EFgPEeSTYp88fJMr7g" name="" memberEnd="_CST8EVgPEeSTYp88fJMr7g _CRPlEFgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CST8EVgPEeSTYp88fJMr7g" name="" type="_CLQ44FgPEeSTYp88fJMr7g" association="_CST8EFgPEeSTYp88fJMr7g"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_CLKyQFgPEeSTYp88fJMr7g" name="Model">
        <ownedComment xmi:id="_CSF5qVgPEeSTYp88fJMr7g">
          <body>The Model for this system.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_CRMhwFgPEeSTYp88fJMr7g" name="modelToView" visibility="private" type="_CLEroFgPEeSTYp88fJMr7g" association="_CSRf0FgPEeSTYp88fJMr7g"/>
        <ownedAttribute xmi:id="_CRNI0lgPEeSTYp88fJMr7g" name="abcParser" visibility="private" type="_CLSHAFgPEeSTYp88fJMr7g" association="_CSRf01gPEeSTYp88fJMr7g"/>
        <ownedAttribute xmi:id="_CRNv4VgPEeSTYp88fJMr7g" name="phrase" visibility="private" type="_CLxPMFgPEeSTYp88fJMr7g" association="_CSRf1lgPEeSTYp88fJMr7g"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR2CA1gPEeSTYp88fJMr7g" name="Model" specification="_CPlYMFgPEeSTYp88fJMr7g">
          <ownedParameter xmi:id="_CR2CBFgPEeSTYp88fJMr7g" name="modelToView" type="_CLEroFgPEeSTYp88fJMr7g"/>
          <ownedParameter xmi:id="_CR2CBVgPEeSTYp88fJMr7g" type="_CLKyQFgPEeSTYp88fJMr7g" direction="return"/>
          <language>java</language>
          <body>this.modelToView = modelToView;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR2pEFgPEeSTYp88fJMr7g" name="loadFile" specification="_CLLZUFgPEeSTYp88fJMr7g">
          <ownedParameter xmi:id="_CR2pEVgPEeSTYp88fJMr7g" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CR2pElgPEeSTYp88fJMr7g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>abcParser = new ABCParser(&quot;/songs/&quot; + fileName + &quot;.abc&quot;);
     return ABCUtil.Singleton.getFileContents(&quot;/songs/&quot; + fileName + &quot;.abc&quot;);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR2pE1gPEeSTYp88fJMr7g" name="parseFile" specification="_CLMAYlgPEeSTYp88fJMr7g">
          <ownedParameter xmi:id="_CR2pFFgPEeSTYp88fJMr7g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>phrase = abcParser.parse();
     return phrase.toString();
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR3QIFgPEeSTYp88fJMr7g" name="playMusic" specification="_CLMAZFgPEeSTYp88fJMr7g">
          <language>java</language>
          <body>phrase.execute(new PlaySongVisitor());
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR3QIVgPEeSTYp88fJMr7g" name="start" specification="_CLMncFgPEeSTYp88fJMr7g">
          <language>java</language>
          <body>NESeqList.setToStringAlgo(new ToStringVisitor());
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_CLLZUFgPEeSTYp88fJMr7g" name="loadFile" method="_CR2pEFgPEeSTYp88fJMr7g">
          <ownedComment xmi:id="_CSGgsVgPEeSTYp88fJMr7g">
            <body>Loads file and returns file contents.
     * 
     * @param fileName
     * @return contents of file</body>
          </ownedComment>
          <ownedParameter xmi:id="_CLMAYFgPEeSTYp88fJMr7g" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CLMAYVgPEeSTYp88fJMr7g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CLMAYlgPEeSTYp88fJMr7g" name="parseFile" method="_CR2pE1gPEeSTYp88fJMr7g">
          <ownedComment xmi:id="_CSGgslgPEeSTYp88fJMr7g">
            <body>Parses IPhrase and returns its String representation.
     * 
     * @return string representation of phrase</body>
          </ownedComment>
          <ownedParameter xmi:id="_CLMAY1gPEeSTYp88fJMr7g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CLMAZFgPEeSTYp88fJMr7g" name="playMusic" method="_CR3QIFgPEeSTYp88fJMr7g">
          <ownedComment xmi:id="_CSGgs1gPEeSTYp88fJMr7g">
            <body>Calls the PlaySongVisitor to play the music encoded in phrase using SequencePlayer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CLMncFgPEeSTYp88fJMr7g" name="start" method="_CR3QIVgPEeSTYp88fJMr7g">
          <ownedComment xmi:id="_CSGgtFgPEeSTYp88fJMr7g">
            <body>Starts the model by installing a ToStringAlgo to NESeqList.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CPlYMFgPEeSTYp88fJMr7g" name="Model" method="_CR2CA1gPEeSTYp88fJMr7g">
          <eAnnotations xmi:id="_CPl_QVgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_CPl_QlgPEeSTYp88fJMr7g" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_CSGgsFgPEeSTYp88fJMr7g">
            <body>Constructor</body>
          </ownedComment>
          <ownedParameter xmi:id="_CPl_QFgPEeSTYp88fJMr7g" name="modelToView" type="_CLEroFgPEeSTYp88fJMr7g"/>
          <ownedParameter xmi:id="_CPl_Q1gPEeSTYp88fJMr7g" type="_CLKyQFgPEeSTYp88fJMr7g" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_CSRf0FgPEeSTYp88fJMr7g" name="" memberEnd="_CSRf0VgPEeSTYp88fJMr7g _CRMhwFgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_CSRf0VgPEeSTYp88fJMr7g" name="" type="_CLKyQFgPEeSTYp88fJMr7g" association="_CSRf0FgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_CSRf01gPEeSTYp88fJMr7g" name="" memberEnd="_CSRf1FgPEeSTYp88fJMr7g _CRNI0lgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_CSRf1FgPEeSTYp88fJMr7g" name="" type="_CLKyQFgPEeSTYp88fJMr7g" association="_CSRf01gPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_CSRf1lgPEeSTYp88fJMr7g" name="" memberEnd="_CSRf11gPEeSTYp88fJMr7g _CRNv4VgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_CSRf11gPEeSTYp88fJMr7g" name="" type="_CLKyQFgPEeSTYp88fJMr7g" association="_CSRf1lgPEeSTYp88fJMr7g"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CJU_MFgPEeSTYp88fJMr7g" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_CLHu8VgPEeSTYp88fJMr7g" name="Controller">
        <ownedComment xmi:id="_CSF5pVgPEeSTYp88fJMr7g">
          <body>*
The Controller initializes the application by creating a context where 
the view and the model can be linked together without ever needing to 
contain references to one another.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_CRLToFgPEeSTYp88fJMr7g" name="model" visibility="private" type="_CLKyQFgPEeSTYp88fJMr7g" association="_CSQ4wVgPEeSTYp88fJMr7g"/>
        <ownedAttribute xmi:id="_CRL6sVgPEeSTYp88fJMr7g" name="view" visibility="private" type="_CPkKEFgPEeSTYp88fJMr7g" association="_CSQ4xFgPEeSTYp88fJMr7g"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR1a8FgPEeSTYp88fJMr7g" name="Controller" specification="_CLI9EFgPEeSTYp88fJMr7g">
          <ownedParameter xmi:id="_CR1a8VgPEeSTYp88fJMr7g" type="_CLHu8VgPEeSTYp88fJMr7g" direction="return"/>
          <language>java</language>
          <body>model = new Model(new IModelToView() {});
     view = new View(new IViewToModel() {
      
         @Override
         public String loadFile(String fileName) {
             return model.loadFile(fileName);
         }
         
         @Override
         public String parseFile() {
             return model.parseFile();
         }
         
         @Override
         public void playMusic() {
             model.playMusic();
         }
         
     });
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR1a8lgPEeSTYp88fJMr7g" name="start" specification="_CLI9FFgPEeSTYp88fJMr7g">
          <language>java</language>
          <body>model.start();
     view.start();
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR2CAFgPEeSTYp88fJMr7g" name="main" specification="_CLJkIFgPEeSTYp88fJMr7g">
          <ownedParameter xmi:id="_CR2CAVgPEeSTYp88fJMr7g" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR2CAlgPEeSTYp88fJMr7g" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() {
         public void run() {
             try {
                 Controller controller = new Controller();
                 controller.start();
             } catch (Exception e) {
                 e.printStackTrace();
             }
         }
     });
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_CLI9EFgPEeSTYp88fJMr7g" name="Controller" method="_CR1a8FgPEeSTYp88fJMr7g">
          <eAnnotations xmi:id="_CLI9EVgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_CLI9ElgPEeSTYp88fJMr7g" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_CSF5plgPEeSTYp88fJMr7g">
            <body>Constructor that builds the system.</body>
          </ownedComment>
          <ownedParameter xmi:id="_CLI9E1gPEeSTYp88fJMr7g" type="_CLHu8VgPEeSTYp88fJMr7g" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CLI9FFgPEeSTYp88fJMr7g" name="start" method="_CR1a8lgPEeSTYp88fJMr7g">
          <ownedComment xmi:id="_CSF5p1gPEeSTYp88fJMr7g">
            <body>Starts the system.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CLJkIFgPEeSTYp88fJMr7g" name="main" isStatic="true" method="_CR2CAFgPEeSTYp88fJMr7g">
          <ownedComment xmi:id="_CSF5qFgPEeSTYp88fJMr7g">
            <body>Launch the application.
     * 
     * @param args</body>
          </ownedComment>
          <ownedParameter xmi:id="_CLJkIVgPEeSTYp88fJMr7g" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CLJkIlgPEeSTYp88fJMr7g" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_CSQ4wVgPEeSTYp88fJMr7g" name="" memberEnd="_CSQ4wlgPEeSTYp88fJMr7g _CRLToFgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_CSQ4wlgPEeSTYp88fJMr7g" name="" type="_CLHu8VgPEeSTYp88fJMr7g" association="_CSQ4wVgPEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_CSQ4xFgPEeSTYp88fJMr7g" name="" memberEnd="_CSQ4xVgPEeSTYp88fJMr7g _CRL6sVgPEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_CSQ4xVgPEeSTYp88fJMr7g" name="" type="_CLHu8VgPEeSTYp88fJMr7g" association="_CSQ4xFgPEeSTYp88fJMr7g"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CJVmQVgPEeSTYp88fJMr7g" name="provided">
      <packagedElement xmi:type="uml:Package" xmi:id="_CJVmQlgPEeSTYp88fJMr7g" name="abcParser">
        <packagedElement xmi:type="uml:Class" xmi:id="_CLSHAFgPEeSTYp88fJMr7g" name="ABCParser">
          <ownedComment xmi:id="_CSGgulgPEeSTYp88fJMr7g">
            <body>Parses an abc file into IPhrase music structures&lt;br/>&#xD;
&#xD;
Usage: &lt;br/>&#xD;
ABCParser parser = new ABCParser(&quot;/data/aMusicFile.abc&quot;); &lt;br/>&#xD;
IPhrase phrase = parser.parse(); &lt;br/>&#xD;
&#xD;
Cases handled:&lt;br/>&#xD;
- single notes with and without accidentals and naturals with regards to measures&lt;br/>&#xD;
- chords&lt;br/>&#xD;
- dotted notes&lt;br/>&#xD;
- grace notes&lt;br/>&#xD;
- repeats, including first and second repeats.&lt;br/>&#xD;
- triplets &lt;br/>&#xD;
- tuplets&lt;br/>&#xD;
- all headers&lt;br/>&#xD;
- quoted text&lt;br/>&#xD;
- D.C. al fine&lt;br/>&#xD;
- EOF (End Of File)&lt;br/>&#xD;
&lt;br/>&#xD;
All other cases ignored.&#xD;
&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRPlE1gPEeSTYp88fJMr7g" name="abcT" visibility="private" type="_CMj5YFgPEeSTYp88fJMr7g" association="_CSUjIVgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRPlFVgPEeSTYp88fJMr7g" name="beginningTarget" visibility="private" type="_CLhXkFgPEeSTYp88fJMr7g" association="_CSVKMVgPEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRPlFlgPEeSTYp88fJMr7g" value="new DecoratorSeqList()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRQMIVgPEeSTYp88fJMr7g" name="jumpTargetStack" visibility="private" type="_CQk2sFgPEeSTYp88fJMr7g" association="_CSVxQVgPEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRQMI1gPEeSTYp88fJMr7g" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRQzMFgPEeSTYp88fJMr7g" name="jumpSecondRepeatStack" visibility="private" type="_CQk2sFgPEeSTYp88fJMr7g" association="_CSWYUVgPEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRQzMlgPEeSTYp88fJMr7g" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRQzNFgPEeSTYp88fJMr7g" name="makeSeqListAlgo" visibility="private" type="_CMZhUFgPEeSTYp88fJMr7g" association="_CSW_YVgPEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRRaQFgPEeSTYp88fJMr7g" value="new ATokVisitor(new ITokVisitorCmd() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Default behavior is to ignore any unrecognized tokens by merely proceeding to the next one.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unhandled Token: &quot; + host);&#xD;&#xA;&#x9;&#x9;&#x9;return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}) {&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRRaQlgPEeSTYp88fJMr7g" name="isGrace" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRRaQ1gPEeSTYp88fJMr7g" value="false"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRRaRVgPEeSTYp88fJMr7g" name="grace_multiplier" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRRaRlgPEeSTYp88fJMr7g" value="0.2"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRSBUVgPEeSTYp88fJMr7g" name="graceDuration" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRSBUlgPEeSTYp88fJMr7g" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRSBVFgPEeSTYp88fJMr7g" name="dottedCorrection" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRSBVVgPEeSTYp88fJMr7g" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRSoYFgPEeSTYp88fJMr7g" name="checkNextNoteAlgo" visibility="private" type="_CMZhUFgPEeSTYp88fJMr7g" association="_CSXmcVgPEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRSoYVgPEeSTYp88fJMr7g" value="new ATokVisitor(&#xD;&#xA;&#x9;&#x9;&#x9;new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No dotted modification detected.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;abcT.putBack(host); // put token back to be reprocessed&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// later&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = 0.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return params[0]; // return duration unchanged.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;}) {&#xD;&#xA;&#x9;&#x9;// Initializer block for internal visitor&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;&lt;&quot;, new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is halved, the next dotted&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0] / 2.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Notes parsed \&quot;&quot; + id&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;\&quot; dotting.  durationCorrection = &quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ dottedCorrection);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;>&quot;, new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is dotted, the next note halved&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = -duration / 2.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;duration -= dottedCorrection;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Notes parsed \&quot;&quot; + id&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;\&quot; dotting.  durationCorrection = &quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ dottedCorrection);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRSoY1gPEeSTYp88fJMr7g" name="accidentalNotes" visibility="private" type="_CL8OUFgPEeSTYp88fJMr7g" association="_CSXmdFgPEeSTYp88fJMr7g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CRSoZFgPEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRSoZVgPEeSTYp88fJMr7g" value="new HashSet&lt;Note>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR33MFgPEeSTYp88fJMr7g" name="popJumpTarget" specification="_CLSuEFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR33MVgPEeSTYp88fJMr7g" type="_CLhXkFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>if (jumpTargetStack.isEmpty())&#xD;
			return beginningTarget;&#xD;
		else&#xD;
			return jumpTargetStack.pop();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR33MlgPEeSTYp88fJMr7g" name="pushJumpTarget" specification="_CPpCkVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR33M1gPEeSTYp88fJMr7g" name="target" type="_CLhXkFgPEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>jumpTargetStack.push(target);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR33NFgPEeSTYp88fJMr7g" name="ABCParser" specification="_CLTVIFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR33NVgPEeSTYp88fJMr7g" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR33NlgPEeSTYp88fJMr7g" type="_CLSHAFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
			abcT = new ABCTokenizer(inputFileName);&#xD;
&#xD;
			// ------ EOF -----------------------------------------------------&#xD;
			ITokVisitorCmd eofCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					return MTSeqList.Singleton;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Note -----------------------------------------------------&#xD;
			ITokVisitorCmd noteCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Note note = makeNote(host);&#xD;
					System.out.println(&quot;Note parsed: &quot; + note);&#xD;
&#xD;
					return new NESeqList(note, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Header-------------------------------------------&#xD;
			// Same command for all headers&#xD;
			ITokVisitorCmd headerCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Header header = new Header(id, host.getLexeme());&#xD;
					System.out.println(&quot;Header parsed: &quot; + header);&#xD;
					return new NESeqList(header, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Chord----------------------------------------------&#xD;
			ITokVisitorCmd chordStartCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				// Internal visitor to get rest of chord&#xD;
				ATokVisitor makeChordAlgo = new ATokVisitor(&#xD;
						new ITokVisitorCmd() {&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								throw new IllegalArgumentException(&#xD;
										&quot;ABCParser.chordCmd: Non-Note token encountered:&quot;&#xD;
												+ host);&#xD;
							}&#xD;
&#xD;
						}) {&#xD;
					// Initializer block for internal visitor&#xD;
					{&#xD;
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								Note note = makeNote(host);&#xD;
								System.out&#xD;
										.println(&quot;Chord parsed Note: &quot; + note);&#xD;
								((Vector&lt;Note>) params[0]).add(note);&#xD;
								return abcT.getNextToken().execute(&#xD;
										makeChordAlgo, params);&#xD;
							}&#xD;
						});&#xD;
&#xD;
						this.addCmd(&quot;]&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								Vector&lt;Note> vNotes = (Vector&lt;Note>) params[0];&#xD;
								Note[] result = new Note[vNotes.size()];&#xD;
								for (int i = 0; i &lt; vNotes.size(); i++)&#xD;
									result[i] = vNotes.get(i);&#xD;
								return result;&#xD;
							}&#xD;
						});&#xD;
&#xD;
					}&#xD;
				};&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Note[] notes = (Note[]) abcT.getNextToken().execute(&#xD;
							makeChordAlgo, new Vector&lt;Note>());&#xD;
					Chord chord = new Chord(notes);&#xD;
					System.out.println(&quot;Chord parsed: &quot; + chord);&#xD;
					return new NESeqList(chord, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Grace Note Start---------------------------------------&#xD;
			ITokVisitorCmd graceStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					System.out.println(&quot;Grace Start parsed.&quot;);&#xD;
					isGrace = true; // Set grace flag on&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Grace Note End--------------------------------------------&#xD;
			ITokVisitorCmd graceEndCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					System.out.println(&quot;Grace End parsed.&quot;);&#xD;
					isGrace = false; // Set grace flag on&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Tuplet----------------------------------------------&#xD;
			ITokVisitorCmd tupletCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				// Internal visitor to get rest of chord&#xD;
				ATokVisitor makeTupletAlgo = new ATokVisitor(&#xD;
						new ITokVisitorCmd() {&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								throw new IllegalArgumentException(&#xD;
										&quot;ABCParser.tupletCmd: Non-Note token encountered: &quot;&#xD;
												+ host);&#xD;
							}&#xD;
&#xD;
						}) {&#xD;
					// Initializer block for internal visitor&#xD;
					{&#xD;
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								int count = (Integer) params[0];&#xD;
								Vector&lt;Note> vNotes = ((Vector&lt;Note>) params[1]);&#xD;
&#xD;
								Note note = makeNote(host);&#xD;
								System.out.println(&quot;Tuplet parsed Note: &quot;&#xD;
										+ note + &quot; count = &quot; + count);&#xD;
								vNotes.add(note);&#xD;
&#xD;
								if (1 == count) {&#xD;
									Note[] result = new Note[vNotes.size()];&#xD;
									for (int i = 0; i &lt; vNotes.size(); i++)&#xD;
										result[i] = vNotes.get(i);&#xD;
									return result;&#xD;
								} else {&#xD;
									return abcT.getNextToken().execute(&#xD;
											makeTupletAlgo, --count, vNotes);&#xD;
								}&#xD;
							}&#xD;
						});&#xD;
&#xD;
					}&#xD;
				};&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					int nNotes = Integer.parseInt(host.getLexeme());&#xD;
&#xD;
					Note[] notes = (Note[]) abcT.getNextToken().execute(&#xD;
							makeTupletAlgo, nNotes, new Vector&lt;Note>());&#xD;
&#xD;
					NoteCollection result;&#xD;
&#xD;
					if (3 == nNotes) {&#xD;
						result = new Triplet(notes[0], notes[1], notes[2]);&#xD;
					} else {&#xD;
						result = new Tuplet(notes);&#xD;
					}&#xD;
					System.out.println(&quot;Tuplet parsed: &quot; + result);&#xD;
					return new NESeqList(result, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Measure bar --------------------------------------------&#xD;
			ITokVisitorCmd measureBarCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					accidentalNotes.clear(); // clear any accidentals&#xD;
					System.out&#xD;
							.println(&quot;Measure bar parsed.  Accidental Notes cleared.&quot;);&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Repeat Start -----------------------------------------&#xD;
			ITokVisitorCmd repeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList repeatStart = new DecoratorSeqList();&#xD;
					pushJumpTarget(repeatStart);&#xD;
					System.out.println(&quot;Repeat Start parsed&quot;);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					repeatStart.setDecoree(result);&#xD;
					return result;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Repeat End -----------------------------------------&#xD;
			ITokVisitorCmd repeatEndCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					ISeqList jumpTarget = popJumpTarget();&#xD;
					System.out.println(&quot;Repeat End parsed&quot;);&#xD;
					if (jumpSecondRepeatStack.isEmpty()) {&#xD;
						return new ToggleDecoratorSeqList(jumpTarget,&#xD;
								(ISeqList) abcT.getNextToken().execute(&#xD;
										makeSeqListAlgo, params));&#xD;
					} else {&#xD;
						abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
						return jumpTarget;&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ First Repeat Start Repeat --------------------------&#xD;
			ITokVisitorCmd firstRepeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = new DecoratorSeqList();&#xD;
					jumpSecondRepeatStack.push(secondRepeatStart);&#xD;
					System.out&#xD;
							.println(&quot;First Repeat Start parsed.  ID = &quot; + id);&#xD;
					return new ToggleDecoratorSeqList((ISeqList) abcT&#xD;
							.getNextToken().execute(makeSeqListAlgo, params),&#xD;
							secondRepeatStart);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Second Repeat Start Repeat --------------------------&#xD;
			ITokVisitorCmd secondRepeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack&#xD;
							.pop();&#xD;
					System.out.println(&quot;Second Repeat Start parsed.  ID = &quot;&#xD;
							+ id);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					secondRepeatStart.setDecoree(result);&#xD;
					return result;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Alt. Second Repeat Start Repeat --------------------------&#xD;
			/**&#xD;
			 * This covers the &quot;:|2&quot; token which includes the repeat.&#xD;
			 */&#xD;
			ITokVisitorCmd secondRepeatStartAltCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack&#xD;
							.pop();&#xD;
					System.out&#xD;
							.println(&quot;Second Repeat Start Alt. parsed.  ID = &quot;&#xD;
									+ id);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					secondRepeatStart.setDecoree(result);&#xD;
					return popJumpTarget();&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Quote processing --------------------------&#xD;
			ITokVisitorCmd quoteCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				FineToggleDecoratorSeqList fineToggle = new FineToggleDecoratorSeqList();&#xD;
&#xD;
				boolean isSwapped = false;&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					if (host.getLexeme().equals(&quot;_fine&quot;)) {&#xD;
&#xD;
						System.out.println(&quot;\&quot;_fine\&quot; parsed&quot;);&#xD;
						fineToggle.setDecoree(0, (ISeqList) abcT.getNextToken()&#xD;
								.execute(makeSeqListAlgo, params));&#xD;
						return fineToggle;&#xD;
					} else if (host.getLexeme().equals(&quot;_D.C al Fine&quot;)) {&#xD;
						if (isSwapped) {&#xD;
							System.out.println(&quot;\&quot;_D.C al Fine\&quot; parsed&quot;);&#xD;
							return new ISeqList() {&#xD;
&#xD;
								@Override&#xD;
								public Object execute(IPhraseVisitor algo,&#xD;
										Object... params) {&#xD;
									fineToggle.setFine();&#xD;
									return beginningTarget&#xD;
											.execute(algo, params);&#xD;
								}&#xD;
							};&#xD;
						} else {&#xD;
							isSwapped = true;&#xD;
							System.out&#xD;
									.println(&quot;\&quot;_D.C al Fine\&quot; parsed, but swapped for next token.&quot;);&#xD;
							return swapToken(host).execute(makeSeqListAlgo,&#xD;
									params);&#xD;
						}&#xD;
					} else {&#xD;
						System.out.println(&quot;Quote parsed - ignored&quot;);&#xD;
						return abcT.getNextToken().execute(makeSeqListAlgo,&#xD;
								params);&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ---- Add Commands to Visitor------------------------------&#xD;
&#xD;
			makeSeqListAlgo.addCmd(&quot;EOF&quot;, eofCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Note&quot;, noteCmd);&#xD;
&#xD;
			String headers = &quot;ABCDEFGHIKLMNOPQRSTWXZ&quot;;&#xD;
			for (int i = 0; i &lt; headers.length(); i++) {&#xD;
				makeSeqListAlgo.addCmd(&quot;&quot; + headers.charAt(i), headerCmd);&#xD;
			}&#xD;
&#xD;
			makeSeqListAlgo.addCmd(&quot;[&quot;, chordStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;{&quot;, graceStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;}&quot;, graceEndCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Tuplet&quot;, tupletCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|&quot;, measureBarCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|:&quot;, repeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;:|&quot;, repeatEndCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|1&quot;, firstRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;[1&quot;, firstRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;[2&quot;, secondRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|2&quot;, secondRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;:|2&quot;, secondRepeatStartAltCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Quote&quot;, quoteCmd);&#xD;
		} catch (Exception e) {&#xD;
			System.err.println(&quot;ABCParser constructor exception: &quot; + e);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR33N1gPEeSTYp88fJMr7g" name="parse" specification="_CLT8M1gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR33OFgPEeSTYp88fJMr7g" type="_CLxPMFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>ISeqList beginning = (ISeqList) abcT.getNextToken().execute(&#xD;
				makeSeqListAlgo, MTSeqList.Singleton);&#xD;
		beginningTarget.setDecoree(beginning);&#xD;
		return beginning;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR4eQFgPEeSTYp88fJMr7g" name="makeNote" specification="_CPppoVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR4eQVgPEeSTYp88fJMr7g" name="host" type="_CMfn81gPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR4eQlgPEeSTYp88fJMr7g" type="_CL8OUFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>char name = 'C';&#xD;
		int octave = 0;&#xD;
		int accidental = 0;&#xD;
		double duration = 1.0;&#xD;
		boolean isNatural = false;&#xD;
&#xD;
		String lex = host.getLexeme();&#xD;
&#xD;
		// get accidental value&#xD;
		int i = 0;&#xD;
		for (; i &lt; lex.length(); i++) {&#xD;
			if (Character.isLetter(lex.charAt(i))) {&#xD;
				break;&#xD;
			}&#xD;
			if (lex.charAt(i) == '^') {&#xD;
				accidental += +1;&#xD;
			} else if (lex.charAt(i) == '_') {&#xD;
				accidental += -1;&#xD;
			} else if (lex.charAt(i) == '=') {&#xD;
				isNatural = true;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (Character.isLowerCase(lex.charAt(i))) {&#xD;
			octave++;&#xD;
		}&#xD;
		name = Character.toUpperCase(lex.charAt(i));&#xD;
		i++;&#xD;
&#xD;
		// get octave value&#xD;
&#xD;
		for (; i &lt; lex.length(); i++) {&#xD;
			if (Character.isDigit(lex.charAt(i)) || '/' == lex.charAt(i)) {&#xD;
				break;&#xD;
			}&#xD;
			if ('\'' == lex.charAt(i))&#xD;
				octave += +1;&#xD;
			else if (',' == lex.charAt(i))&#xD;
				octave += -1;&#xD;
		}&#xD;
&#xD;
		if (i &lt; lex.length()) {&#xD;
			if (Character.isDigit(lex.charAt(i))) {&#xD;
				int idx = lex.substring(i).indexOf('/');&#xD;
				if (-1 == idx) {&#xD;
					duration = Double.parseDouble(lex.substring(i));&#xD;
				} else if (lex.length() > i + idx + 1) {&#xD;
					duration = Double.parseDouble(lex.substring(i, i + idx))&#xD;
							/ Double.parseDouble(lex.substring(i + idx + 1));&#xD;
				} else {&#xD;
					duration = Double.parseDouble(lex.substring(i, i + idx)) / 2.0;&#xD;
				}&#xD;
			} else {&#xD;
				i++;&#xD;
				if (i &lt; lex.length()) {&#xD;
					duration /= Double.parseDouble(lex.substring(i));&#xD;
				} else {&#xD;
					duration /= 2.0; // Slash w/o number is divide by two.&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (isGrace) {&#xD;
			duration *= grace_multiplier;&#xD;
			graceDuration += duration; // sum the duration of the grace notes&#xD;
		} else if (graceDuration > 0.0) {&#xD;
			// Correct the length of the current note to get it back on beat.&#xD;
			duration -= graceDuration;&#xD;
			graceDuration = 0.0;&#xD;
		}&#xD;
&#xD;
		if (dottedCorrection != 0.0) {&#xD;
			duration += dottedCorrection;&#xD;
			dottedCorrection = 0.0;&#xD;
		}&#xD;
&#xD;
		duration = (Double) abcT.getNextToken().execute(checkNextNoteAlgo,&#xD;
				duration);&#xD;
&#xD;
		Note note = new Note(name, octave, accidental, duration, isNatural);&#xD;
&#xD;
		if (!isNatural) // naturals always override prior accidentals in measure&#xD;
			checkAccidentals(note);&#xD;
		return note;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR4eQ1gPEeSTYp88fJMr7g" name="checkAccidentals" specification="_CPpppFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR4eRFgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {&#xD;
			if (n.getName() == note.getName()&#xD;
					&amp;&amp; n.getOctave() == note.getOctave()) {&#xD;
				System.out&#xD;
						.println(note&#xD;
								+ &quot; found in accidentals.  Overriding accidentals and isNatural to &quot;&#xD;
								+ n);&#xD;
				note.setAccidental(n.getAccidental());&#xD;
				note.setIsNatural(n.getIsNatural()); // this will override&#xD;
														// accidentals if true&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
		if (note.getAccidental() != 0 || note.getIsNatural()) {&#xD;
			addAccidental(note);&#xD;
		}&#xD;
		return;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR4eRVgPEeSTYp88fJMr7g" name="addAccidental" specification="_CPqQsVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR4eRlgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>removeAccidental(note); // remove anything like this note&#xD;
		accidentalNotes.add(note); // put this specific note in&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR4eR1gPEeSTYp88fJMr7g" name="removeAccidental" specification="_CPqQs1gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR4eSFgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {&#xD;
			if (n.getName() == note.getName()&#xD;
					&amp;&amp; n.getOctave() == note.getOctave()) {&#xD;
				accidentalNotes.remove(n);&#xD;
				// Check all notes, just to be safe&#xD;
			}&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR4eSVgPEeSTYp88fJMr7g" name="swapToken" specification="_CPqQtVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR4eSlgPEeSTYp88fJMr7g" name="t" type="_CMfn81gPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR4eS1gPEeSTYp88fJMr7g" type="_CMfn81gPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>Token next = abcT.getNextToken();&#xD;
		abcT.putBack(t);&#xD;
		return next;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CLSuEFgPEeSTYp88fJMr7g" name="popJumpTarget" visibility="private" method="_CR33MFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSGgu1gPEeSTYp88fJMr7g">
              <body>Pull off the current jump target from the jump target stack. If the stack&#xD;
	 * is empty, return the proxy for the beginning of the phrase, as this is&#xD;
	 * the default jump target.&#xD;
	 * &#xD;
	 * @return The current jump target or the beginning of the phrase.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CPpCkFgPEeSTYp88fJMr7g" type="_CLhXkFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CLTVIFgPEeSTYp88fJMr7g" name="ABCParser" method="_CR33NFgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CLT8MFgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CLT8MVgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSGgvVgPEeSTYp88fJMr7g">
              <body>Constructs a parser for the given ABC input file.   Does not actually run that parser yet.&#xD;
	 * Prints error message to System.err if there is a problem opening the given file.   The returned &#xD;
	 * parser will be null in the event of an error.&#xD;
	 * @param inputFileName&#xD;
	 *            the name of the input text file</body>
            </ownedComment>
            <ownedParameter xmi:id="_CLTVIVgPEeSTYp88fJMr7g" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CLT8MlgPEeSTYp88fJMr7g" type="_CLSHAFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CLT8M1gPEeSTYp88fJMr7g" name="parse" method="_CR33N1gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSGgvlgPEeSTYp88fJMr7g">
              <body>&#xD;
	 * Run the parser and parse the entire file, returning an IPhrase object that represents the entire piece of music.&#xD;
	 * &#xD;
	 * @return An IPhrase object</body>
            </ownedComment>
            <ownedParameter xmi:id="_CPppoFgPEeSTYp88fJMr7g" type="_CLxPMFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CPpCkVgPEeSTYp88fJMr7g" name="pushJumpTarget" visibility="private" method="_CR33MlgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSGgvFgPEeSTYp88fJMr7g">
              <body>Push the given jump target onto the stack so that it is now the current&#xD;
	 * jump target. This corresponds to the innermost nested repeat.&#xD;
	 * &#xD;
	 * @param target&#xD;
	 *            The new current jump target.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CPpCklgPEeSTYp88fJMr7g" name="target" type="_CLhXkFgPEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CPppoVgPEeSTYp88fJMr7g" name="makeNote" visibility="private" method="_CR4eQFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSGgv1gPEeSTYp88fJMr7g">
              <body>Parse a Note from the given Token&#xD;
	 * &#xD;
	 * @param host&#xD;
	 *            The Note token&#xD;
	 * @return A Note object</body>
            </ownedComment>
            <ownedParameter xmi:id="_CPppolgPEeSTYp88fJMr7g" name="host" type="_CMfn81gPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CPppo1gPEeSTYp88fJMr7g" type="_CL8OUFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CPpppFgPEeSTYp88fJMr7g" name="checkAccidentals" visibility="private" method="_CR4eQ1gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSGgwFgPEeSTYp88fJMr7g">
              <body>Checks to see if the given Note is in the set of accidentals Checks name&#xD;
	 * and octave but not duration or accidental&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            The note to check</body>
            </ownedComment>
            <ownedParameter xmi:id="_CPqQsFgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CPqQsVgPEeSTYp88fJMr7g" name="addAccidental" visibility="private" method="_CR4eRVgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSGgwVgPEeSTYp88fJMr7g">
              <body>Adds a note to the set of accidentals replaces any note with the same&#xD;
	 * name and octave. duration and accidental are ignored.&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            the Note to add.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CPqQslgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CPqQs1gPEeSTYp88fJMr7g" name="removeAccidental" visibility="private" method="_CR4eR1gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSGgwlgPEeSTYp88fJMr7g">
              <body>Removes a note from the set of accidentals Removes any note with the same&#xD;
	 * name and octave. duration and accidental are ignored.&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            the note to remove</body>
            </ownedComment>
            <ownedParameter xmi:id="_CPqQtFgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CPqQtVgPEeSTYp88fJMr7g" name="swapToken" visibility="private" method="_CR4eSVgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSGgw1gPEeSTYp88fJMr7g">
              <body>Swap the given token for the next token in the tokenizer, returning the&#xD;
	 * next token. The given token will be the next token out of the tokenizer.&#xD;
	 * &#xD;
	 * @param t The token to be swapped into the tokenizer&#xD;
	 * @return the token that previously was next in the tokenizer.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CPqQtlgPEeSTYp88fJMr7g" name="t" type="_CMfn81gPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CPqQt1gPEeSTYp88fJMr7g" type="_CMfn81gPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSUjIVgPEeSTYp88fJMr7g" name="" memberEnd="_CSUjIlgPEeSTYp88fJMr7g _CRPlE1gPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSUjIlgPEeSTYp88fJMr7g" name="" type="_CLSHAFgPEeSTYp88fJMr7g" association="_CSUjIVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSVKMVgPEeSTYp88fJMr7g" name="" memberEnd="_CSVKMlgPEeSTYp88fJMr7g _CRPlFVgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSVKMlgPEeSTYp88fJMr7g" name="" type="_CLSHAFgPEeSTYp88fJMr7g" association="_CSVKMVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSVxQVgPEeSTYp88fJMr7g" name="" memberEnd="_CSVxQlgPEeSTYp88fJMr7g _CRQMIVgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSVxQlgPEeSTYp88fJMr7g" name="" type="_CLSHAFgPEeSTYp88fJMr7g" association="_CSVxQVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSWYUVgPEeSTYp88fJMr7g" name="" memberEnd="_CSWYUlgPEeSTYp88fJMr7g _CRQzMFgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSWYUlgPEeSTYp88fJMr7g" name="" type="_CLSHAFgPEeSTYp88fJMr7g" association="_CSWYUVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSW_YVgPEeSTYp88fJMr7g" name="" memberEnd="_CSW_YlgPEeSTYp88fJMr7g _CRQzNFgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSW_YlgPEeSTYp88fJMr7g" name="" type="_CLSHAFgPEeSTYp88fJMr7g" association="_CSW_YVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSXmcVgPEeSTYp88fJMr7g" name="" memberEnd="_CSXmclgPEeSTYp88fJMr7g _CRSoYFgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSXmclgPEeSTYp88fJMr7g" name="" type="_CLSHAFgPEeSTYp88fJMr7g" association="_CSXmcVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSXmdFgPEeSTYp88fJMr7g" name="" memberEnd="_CSXmdVgPEeSTYp88fJMr7g _CRSoY1gPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSXmdVgPEeSTYp88fJMr7g" name="" type="_CLSHAFgPEeSTYp88fJMr7g" association="_CSXmdFgPEeSTYp88fJMr7g"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CJVmQ1gPEeSTYp88fJMr7g" name="music">
        <packagedElement xmi:type="uml:Class" xmi:id="_CLaC0FgPEeSTYp88fJMr7g" name="APhraseVisitor" isAbstract="true">
          <ownedComment xmi:id="_CSGgxFgPEeSTYp88fJMr7g">
            <body>Command-based implementation of IPhraseVisitor that uses IPhraseVisitorCmds stored in a hash table.&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRTPcFgPEeSTYp88fJMr7g" name="defaultCmd" visibility="private" type="_CLzrcFgPEeSTYp88fJMr7g" association="_CSYNgVgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRTPclgPEeSTYp88fJMr7g" name="cmds" visibility="private" type="_CLzrcFgPEeSTYp88fJMr7g" association="_CSY0kVgPEeSTYp88fJMr7g">
            <qualifier xmi:id="_CRT2glgPEeSTYp88fJMr7g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRT2gFgPEeSTYp88fJMr7g" value="new Hashtable&lt;String, IPhraseVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_CPsF4lgPEeSTYp88fJMr7g" client="_CLaC0FgPEeSTYp88fJMr7g" supplier="_CLydUFgPEeSTYp88fJMr7g" contract="_CLydUFgPEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR5FUFgPEeSTYp88fJMr7g" name="APhraseVisitor" specification="_CLap4FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR5FUVgPEeSTYp88fJMr7g" type="_CLaC0FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>defaultCmd = new IPhraseVisitorCmd() {&#xD;
			public Object apply(String idx, IPhrase host, Object... inps) {&#xD;
				throw new IllegalArgumentException(&#xD;
						&quot;APhraseVisitor: Unknown index encountered: &quot; + idx);&#xD;
			}&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR5FUlgPEeSTYp88fJMr7g" name="APhraseVisitor" specification="_CPss8FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR5FU1gPEeSTYp88fJMr7g" name="defaultCmd" type="_CLzrcFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR5FVFgPEeSTYp88fJMr7g" type="_CLaC0FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR5FVVgPEeSTYp88fJMr7g" name="caseAt" specification="_CQmr4lgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR5FVlgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR5FV1gPEeSTYp88fJMr7g" name="host" type="_CLxPMFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR5FWFgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR5FWVgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR5FWlgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {&#xD;
			return cmds.get(id).apply(id, host, params);&#xD;
		} else {&#xD;
			return defaultCmd.apply(id, host, params);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR5sYFgPEeSTYp88fJMr7g" name="addCmd" specification="_CPtUAFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR5sYVgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR5sYlgPEeSTYp88fJMr7g" name="cmd" type="_CLzrcFgPEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>cmds.put(id, cmd);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CLap4FgPEeSTYp88fJMr7g" name="APhraseVisitor" method="_CR5FUFgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CLbQ8FgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CLbQ8VgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSHHwFgPEeSTYp88fJMr7g">
              <body>Constructor that installs a default cmd that throws an IllegalArgumentException on any unknown host.</body>
            </ownedComment>
            <ownedComment xmi:id="_CSHHwVgPEeSTYp88fJMr7g">
              <body>Abstract extended visitor implementation that uses a dictionary of commands to associate commands with host IDs.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CLbQ8lgPEeSTYp88fJMr7g" type="_CLaC0FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CPss8FgPEeSTYp88fJMr7g" name="APhraseVisitor" method="_CR5FUlgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CPss8lgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CPss81gPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSHHwlgPEeSTYp88fJMr7g">
              <body>Constructor that sets the default cmd to the supplied cmd.&#xD;
	 * @param defaultCmd   the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CPss8VgPEeSTYp88fJMr7g" name="defaultCmd" type="_CLzrcFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CPss9FgPEeSTYp88fJMr7g" type="_CLaC0FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CPtUAFgPEeSTYp88fJMr7g" name="addCmd" method="_CR5sYFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHHw1gPEeSTYp88fJMr7g">
              <body>Add the given command to the dictionary, associated with the given id value.&#xD;
	 * @param id The id of the host that will use this command&#xD;
	 * @param cmd The command that will be run when the host calls for it.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CPtUAVgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CPtUAlgPEeSTYp88fJMr7g" name="cmd" type="_CLzrcFgPEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CQmr4lgPEeSTYp88fJMr7g" name="caseAt" method="_CR5FVVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CQmr41gPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQmr5FgPEeSTYp88fJMr7g" name="host" type="_CLxPMFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQnS8FgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQnS81gPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQnS8VgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CLdtMFgPEeSTYp88fJMr7g" name="Chord">
          <ownedComment xmi:id="_CSHHxFgPEeSTYp88fJMr7g">
            <body>A collection of notes that make up a Chord.  All of the notes should&#xD;
be played simultaneously.   The last note defines the length of all the notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_CSHHxVgPEeSTYp88fJMr7g">
            <body>A collection of Notes all played at once</body>
          </ownedComment>
          <generalization xmi:id="_CP0BsFgPEeSTYp88fJMr7g" general="_CMBt4FgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRT2g1gPEeSTYp88fJMr7g" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRUdkFgPEeSTYp88fJMr7g" value="&quot;Chord&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR5sY1gPEeSTYp88fJMr7g" name="Chord" specification="_CPyMgFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR5sZFgPEeSTYp88fJMr7g" name="notes" type="_CL8OUFgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR5sZVgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR5sZlgPEeSTYp88fJMr7g" type="_CLdtMFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>super(notes);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR5sZ1gPEeSTYp88fJMr7g" name="execute" specification="_CQn6AFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR5saFgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR5saVgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR5salgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR5sa1gPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR5sbFgPEeSTYp88fJMr7g" name="toString" specification="_CLe7UFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR5sbVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Chord(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CLe7UFgPEeSTYp88fJMr7g" name="toString" method="_CR5sbFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CLe7UVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CPyMgFgPEeSTYp88fJMr7g" name="Chord" method="_CR5sY1gPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CPyMglgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CPyMg1gPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_CPyMgVgPEeSTYp88fJMr7g" name="notes" type="_CL8OUFgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CPzaoVgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CPzaoFgPEeSTYp88fJMr7g" type="_CLdtMFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CQn6AFgPEeSTYp88fJMr7g" name="execute" method="_CR5sZ1gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CQn6AVgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQn6AlgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQohElgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQohEFgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CLhXkFgPEeSTYp88fJMr7g" name="DecoratorSeqList">
          <ownedComment xmi:id="_CSHHxlgPEeSTYp88fJMr7g">
            <body>An ISeqList that transparently routes the visitor execution to its decoree.  &#xD;
This class is primarily used to provide a placeholder when a the music should flow &#xD;
to a specific point in the sequence but that point has not yet been calculated, as occurs&#xD;
for instance, during the processing of repeats.    When that target point is finally calculated, &#xD;
the decoree can be set and the decorated target will behave identically to the target.&#xD;
This decorator can also be used to dynamically change the flow of the music by changing the target.  &#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_CSHHx1gPEeSTYp88fJMr7g">
            <body>Decorated ISeqList used as a transparent proxy placeholder.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRUdkVgPEeSTYp88fJMr7g" name="decoree" visibility="private" type="_CL05kFgPEeSTYp88fJMr7g" association="_CSZboVgPEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRUdklgPEeSTYp88fJMr7g" value="MTSeqList.Singleton"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_CP0owFgPEeSTYp88fJMr7g" client="_CLhXkFgPEeSTYp88fJMr7g" supplier="_CL05kFgPEeSTYp88fJMr7g" contract="_CL05kFgPEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR6TcFgPEeSTYp88fJMr7g" name="DecoratorSeqList" specification="_CP0owVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR6TcVgPEeSTYp88fJMr7g" name="decoree" type="_CL05kFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR6TclgPEeSTYp88fJMr7g" type="_CLhXkFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>setDecoree(decoree);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR6Tc1gPEeSTYp88fJMr7g" name="setDecoree" specification="_CP1P0FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR6TdFgPEeSTYp88fJMr7g" name="decoree" type="_CL05kFgPEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>this.decoree = decoree;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR6TdVgPEeSTYp88fJMr7g" name="execute" specification="_CQpIIFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR6TdlgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR6Td1gPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR6TeFgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR6TeVgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return decoree.execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CLjMwFgPEeSTYp88fJMr7g" name="DecoratorSeqList">
            <eAnnotations xmi:id="_CLjz0FgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CLjz0VgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_CLka4VgPEeSTYp88fJMr7g" type="_CLhXkFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CP0owVgPEeSTYp88fJMr7g" name="DecoratorSeqList" method="_CR6TcFgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CP0ow1gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CP0oxFgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSHHyFgPEeSTYp88fJMr7g">
              <body>Constructor used to set the decoree to a known value at construction time.&#xD;
	 * @param decoree The decoree phrase sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_CP0owlgPEeSTYp88fJMr7g" name="decoree" type="_CL05kFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CP0oxVgPEeSTYp88fJMr7g" type="_CLhXkFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CP1P0FgPEeSTYp88fJMr7g" name="setDecoree" method="_CR6Tc1gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHHyVgPEeSTYp88fJMr7g">
              <body>Setter methods used to set the decoree.&#xD;
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CP1P0VgPEeSTYp88fJMr7g" name="decoree" type="_CL05kFgPEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CQpIIFgPEeSTYp88fJMr7g" name="execute" method="_CR6TdVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CQpIIVgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQpIIlgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQpvMlgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQpvMFgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CLp6cFgPEeSTYp88fJMr7g" name="FineToggleDecoratorSeqList">
          <ownedComment xmi:id="_CSHHylgPEeSTYp88fJMr7g">
            <body>The class is used to implement &quot;Da Capo al fine&quot; or &quot;D.C. al fine&quot;, &#xD;
which is to repeat from the beginning up to the &quot;fine&quot; marker.&#xD;
&#xD;
this class assumes that only two target decorees are ever used.&#xD;
&#xD;
The is ToggleDecoratorSeqList that can be signaled to switch to the &#xD;
another target.   Be default, the target decoree (#0) remains the same even &#xD;
when it is accessed.  But after setFine() is called, the target decoree&#xD;
is switched to the #1 decoree (the &quot;fine&quot; target, usually an MTSeqList because&#xD;
it is the end of the piece).   After the #1 decoree is used, the target&#xD;
decoree is advanced to the next available decoree, which , for two decorees, &#xD;
would be back to the #0 decoree.  The class returns to default behavior then.&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_CSHHy1gPEeSTYp88fJMr7g">
            <body>ToggleDecoratorSeqList with controllable cycling</body>
          </ownedComment>
          <generalization xmi:id="_CP3FAFgPEeSTYp88fJMr7g" general="_CMDjEFgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRUdlFgPEeSTYp88fJMr7g" name="isFine" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRVEoFgPEeSTYp88fJMr7g" value="false"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR6TelgPEeSTYp88fJMr7g" name="FineToggleDecoratorSeqList" specification="_CLqhgFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR6Te1gPEeSTYp88fJMr7g" type="_CLp6cFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR66gFgPEeSTYp88fJMr7g" name="FineToggleDecoratorSeqList" specification="_CP124FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR66gVgPEeSTYp88fJMr7g" name="decorees" type="_CL05kFgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR66glgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR66g1gPEeSTYp88fJMr7g" type="_CLp6cFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>super(decorees);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR66hFgPEeSTYp88fJMr7g" name="setFine" specification="_CLrIkFgPEeSTYp88fJMr7g">
            <language>java</language>
            <body>this.isFine = true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR66hVgPEeSTYp88fJMr7g" name="execute" specification="_CQqWQFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR66hlgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR66h1gPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR66iFgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR66iVgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>if (isFine) {&#xD;
			isFine = false;&#xD;
			this.setTargetToDecoree(1);&#xD;
			return super.execute(algo, params);&#xD;
		} else&#xD;
			return getTargetDecoree().execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR66ilgPEeSTYp88fJMr7g" name="toString" specification="_CLrvoFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR66i1gPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CLqhgFgPEeSTYp88fJMr7g" name="FineToggleDecoratorSeqList" method="_CR6TelgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CLqhgVgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CLqhglgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSHHzFgPEeSTYp88fJMr7g">
              <body>Instantiates the class with two MTSeqList decorees.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CLqhg1gPEeSTYp88fJMr7g" type="_CLp6cFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CLrIkFgPEeSTYp88fJMr7g" name="setFine" method="_CR66hFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHHzVgPEeSTYp88fJMr7g">
              <body>Sets the system to use the &quot;fine&quot; decorator at the next execution.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_CLrvoFgPEeSTYp88fJMr7g" name="toString" method="_CR66ilgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CLrvoVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CP124FgPEeSTYp88fJMr7g" name="FineToggleDecoratorSeqList" method="_CR66gFgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CP124lgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CP1241gPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_CP124VgPEeSTYp88fJMr7g" name="decorees" type="_CL05kFgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CP2d8lgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CP2d8VgPEeSTYp88fJMr7g" type="_CLp6cFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CQqWQFgPEeSTYp88fJMr7g" name="execute" method="_CR66hVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CQqWQVgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQqWQlgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQq9UlgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQq9UFgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CLtk0FgPEeSTYp88fJMr7g" name="Header">
          <ownedComment xmi:id="_CSHHzlgPEeSTYp88fJMr7g">
            <body>An abc Header.  Headers are identified by a one character &quot;id&quot; and&#xD;
can have an arbitrary string value. &lt;br/>&#xD;
Note that this class represents many different *types* of headers, &#xD;
each with its own id value.</body>
          </ownedComment>
          <ownedComment xmi:id="_CSHHz1gPEeSTYp88fJMr7g">
            <body>A single Header class represents multiple, distinct header hosts.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRVEolgPEeSTYp88fJMr7g" name="_id" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRVrsVgPEeSTYp88fJMr7g" name="_value" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_CP3sEFgPEeSTYp88fJMr7g" client="_CLtk0FgPEeSTYp88fJMr7g" supplier="_CLxPMFgPEeSTYp88fJMr7g" contract="_CLxPMFgPEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR7hkFgPEeSTYp88fJMr7g" name="Header" specification="_CLuL4FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR7hkVgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR7hklgPEeSTYp88fJMr7g" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR7hk1gPEeSTYp88fJMr7g" type="_CLtk0FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>_id = id;&#xD;
		_value = value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR7hlFgPEeSTYp88fJMr7g" name="execute" specification="_CQuAoFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR7hlVgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR7hllgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR7hl1gPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR7hmFgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_id, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR7hmVgPEeSTYp88fJMr7g" name="getID" specification="_CLuy8lgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR7hmlgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR7hm1gPEeSTYp88fJMr7g" name="getValue" specification="_CLuy9FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR7hnFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR7hnVgPEeSTYp88fJMr7g" name="toString" specification="_CLvaAVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR7hnlgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id + &quot;:&quot; + _value;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CLuL4FgPEeSTYp88fJMr7g" name="Header" method="_CR7hkFgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CLuL41gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CLuy8FgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSHH0FgPEeSTYp88fJMr7g">
              <body>Create a header out of an id and value&#xD;
	 * &#xD;
	 * @param id    - one character corresponding to the abc header name&#xD;
	 * @param value - arbitrary string value of the header</body>
            </ownedComment>
            <ownedParameter xmi:id="_CLuL4VgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CLuL4lgPEeSTYp88fJMr7g" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CLuy8VgPEeSTYp88fJMr7g" type="_CLtk0FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CLuy8lgPEeSTYp88fJMr7g" name="getID" method="_CR7hmVgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHH0VgPEeSTYp88fJMr7g">
              <body>Accessor for the id.&#xD;
	 * @return the _id</body>
            </ownedComment>
            <ownedParameter xmi:id="_CLuy81gPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CLuy9FgPEeSTYp88fJMr7g" name="getValue" method="_CR7hm1gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHH0lgPEeSTYp88fJMr7g">
              <body>Accessor for the text value of this header.&#xD;
	 * @return the _value</body>
            </ownedComment>
            <ownedParameter xmi:id="_CLvaAFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CLvaAVgPEeSTYp88fJMr7g" name="toString" method="_CR7hnVgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHH01gPEeSTYp88fJMr7g">
              <body>String representation of this header: &quot;id: text&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_CLvaAlgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQuAoFgPEeSTYp88fJMr7g" name="execute" method="_CR7hlFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CQuAoVgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQuAolgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQuApVgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQuAo1gPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CLwoIFgPEeSTYp88fJMr7g" name="INote">
          <ownedComment xmi:id="_CSHH1FgPEeSTYp88fJMr7g">
            <body>Note interface for Notes and collections of Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_CSHH1VgPEeSTYp88fJMr7g">
            <body>A generalized notion of a note</body>
          </ownedComment>
          <generalization xmi:id="_CP4TIFgPEeSTYp88fJMr7g" general="_CLxPMFgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CLxPMFgPEeSTYp88fJMr7g" name="IPhrase">
          <ownedComment xmi:id="_CSHu0FgPEeSTYp88fJMr7g">
            <body>Top level of a piece of abc music.  The generalized notion of a playable piece of music.</body>
          </ownedComment>
          <ownedComment xmi:id="_CSHu0VgPEeSTYp88fJMr7g">
            <body>Abstract Host&#xD;
Each concrete host calls its associated case on the visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_CQunslgPEeSTYp88fJMr7g" name="execute">
            <ownedParameter xmi:id="_CQuns1gPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQvOwFgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQv10VgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQvOwVgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CLydUFgPEeSTYp88fJMr7g" name="IPhraseVisitor">
          <ownedComment xmi:id="_CSHu0lgPEeSTYp88fJMr7g">
            <body>Interface for a Phrase visitor.</body>
          </ownedComment>
          <ownedComment xmi:id="_CSHu01gPEeSTYp88fJMr7g">
            <body>Abstract extended visitor.&#xD;
Supplies case behavior for every host.</body>
          </ownedComment>
          <ownedOperation xmi:id="_CQwc4FgPEeSTYp88fJMr7g" name="caseAt">
            <ownedParameter xmi:id="_CQwc4VgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQwc4lgPEeSTYp88fJMr7g" name="host" type="_CLxPMFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQwc41gPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQxD8VgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQwc5FgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CLzrcFgPEeSTYp88fJMr7g" name="IPhraseVisitorCmd">
          <ownedComment xmi:id="_CSHu1FgPEeSTYp88fJMr7g">
            <body>The command used by APhraseVisitor that is associated with a host or hosts.&#xD;
@author rixner</body>
          </ownedComment>
          <ownedComment xmi:id="_CSHu1VgPEeSTYp88fJMr7g">
            <body>Abstract command used by APhraseVisitor.  Each command is associated with a particular host(s).</body>
          </ownedComment>
          <ownedOperation xmi:id="_CQxrAFgPEeSTYp88fJMr7g" name="apply">
            <ownedParameter xmi:id="_CQxrAVgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQxrAlgPEeSTYp88fJMr7g" name="host" type="_CLxPMFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQxrA1gPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQySEFgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQxrBFgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CL05kFgPEeSTYp88fJMr7g" name="ISeqList">
          <ownedComment xmi:id="_CSHu1lgPEeSTYp88fJMr7g">
            <body>Interface for sequential lists of IPhrases.</body>
          </ownedComment>
          <ownedComment xmi:id="_CSHu11gPEeSTYp88fJMr7g">
            <body>A list of IPhrases&#xD;
e.g. an ordered sequence of Notes.</body>
          </ownedComment>
          <generalization xmi:id="_CP5hQFgPEeSTYp88fJMr7g" general="_CLxPMFgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CL1goFgPEeSTYp88fJMr7g" name="MTSeqList">
          <ownedComment xmi:id="_CSHu2FgPEeSTYp88fJMr7g">
            <body>An empty sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_CSHu2VgPEeSTYp88fJMr7g">
            <body>An empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRVrs1gPEeSTYp88fJMr7g" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRWSwFgPEeSTYp88fJMr7g" value="&quot;MTSeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRWSwVgPEeSTYp88fJMr7g" name="Singleton" isLeaf="true" isStatic="true" type="_CL1goFgPEeSTYp88fJMr7g" isReadOnly="true" association="_CSZbpFgPEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRWSwlgPEeSTYp88fJMr7g" value="new MTSeqList()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_CP6IUFgPEeSTYp88fJMr7g" client="_CL1goFgPEeSTYp88fJMr7g" supplier="_CL05kFgPEeSTYp88fJMr7g" contract="_CL05kFgPEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR7hn1gPEeSTYp88fJMr7g" name="execute" specification="_CQy5IFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR7hoFgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR7hoVgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR7holgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR7ho1gPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR7hpFgPEeSTYp88fJMr7g" name="toString" specification="_CL2uwFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR7hpVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;{}&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CL1goVgPEeSTYp88fJMr7g" name="MTSeqList" visibility="private">
            <eAnnotations xmi:id="_CL2HsFgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CL2HsVgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_CL2Hs1gPEeSTYp88fJMr7g" type="_CL1goFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CL2uwFgPEeSTYp88fJMr7g" name="toString" method="_CR7hpFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CL2uwVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQy5IFgPEeSTYp88fJMr7g" name="execute" method="_CR7hn1gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CQy5IVgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQy5IlgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQy5JVgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQy5I1gPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CL3V0FgPEeSTYp88fJMr7g" name="NESeqList">
          <ownedComment xmi:id="_CSHu2lgPEeSTYp88fJMr7g">
            <body>A non-empty (&quot;cons&quot;) sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_CSHu21gPEeSTYp88fJMr7g">
            <body>A non-empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRWSw1gPEeSTYp88fJMr7g" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRWSxFgPEeSTYp88fJMr7g" value="&quot;NESeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRWSxVgPEeSTYp88fJMr7g" name="_first" visibility="private" type="_CLxPMFgPEeSTYp88fJMr7g" association="_CSaCsVgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRW50FgPEeSTYp88fJMr7g" name="_rest" visibility="private" type="_CL05kFgPEeSTYp88fJMr7g" association="_CSapwVgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRW50lgPEeSTYp88fJMr7g" name="_toStringAlgo" visibility="private" isStatic="true" type="_CLydUFgPEeSTYp88fJMr7g" association="_CSbQ0FgPEeSTYp88fJMr7g"/>
          <interfaceRealization xmi:id="_CP6vYFgPEeSTYp88fJMr7g" client="_CL3V0FgPEeSTYp88fJMr7g" supplier="_CL05kFgPEeSTYp88fJMr7g" contract="_CL05kFgPEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR8IoFgPEeSTYp88fJMr7g" name="NESeqList" specification="_CP7WcFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR8IoVgPEeSTYp88fJMr7g" name="first" type="_CLxPMFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR8IolgPEeSTYp88fJMr7g" name="rest" type="_CL05kFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR8Io1gPEeSTYp88fJMr7g" type="_CL3V0FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>this._rest = rest;&#xD;
		this._first = first;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR8IpFgPEeSTYp88fJMr7g" name="getFirst" specification="_CL4j8FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR8IpVgPEeSTYp88fJMr7g" type="_CLxPMFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return _first;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR8IplgPEeSTYp88fJMr7g" name="getRest" specification="_CL4j8VgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR8Ip1gPEeSTYp88fJMr7g" type="_CL05kFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return _rest;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR8IqFgPEeSTYp88fJMr7g" name="execute" specification="_CQ1VYFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR8IqVgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR8IqlgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR8Iq1gPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR8IrFgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR8IrVgPEeSTYp88fJMr7g" name="setToStringAlgo" specification="_CP79gFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR8IrlgPEeSTYp88fJMr7g" name="stringAlgo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>_toStringAlgo = stringAlgo;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR8vsFgPEeSTYp88fJMr7g" name="getToStringAlgo" specification="_CL5LAFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR8vsVgPEeSTYp88fJMr7g" type="_CLydUFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return _toStringAlgo;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR8vslgPEeSTYp88fJMr7g" name="toString" specification="_CL5yEFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR8vs1gPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) _rest.execute(_toStringAlgo, &quot;{&quot; + _first.toString());&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CL4j8FgPEeSTYp88fJMr7g" name="getFirst" method="_CR8IpFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHu3VgPEeSTYp88fJMr7g">
              <body>Accessor method for the first element&#xD;
	 * @return the IPhrase that is the first element of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_CP7WdlgPEeSTYp88fJMr7g" type="_CLxPMFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CL4j8VgPEeSTYp88fJMr7g" name="getRest" method="_CR8IplgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHu3lgPEeSTYp88fJMr7g">
              <body>Accessor method for the rest of the lsit&#xD;
	 * @return the rest of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_CP7Wd1gPEeSTYp88fJMr7g" type="_CL05kFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CL5LAFgPEeSTYp88fJMr7g" name="getToStringAlgo" visibility="package" isStatic="true" method="_CR8vsFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHu4FgPEeSTYp88fJMr7g">
              <body>Getter for the _toStringAlgo helper.  Only for use internally inside this package&#xD;
	 * so ToggleDecoratorSeqList and FineToggleDecoratorSeqList can use the same visitor.&#xD;
	 * @return the toStringAlgo helper visitor</body>
            </ownedComment>
            <ownedParameter xmi:id="_CP8kkFgPEeSTYp88fJMr7g" type="_CLydUFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CL5yEFgPEeSTYp88fJMr7g" name="toString" method="_CR8vslgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHu4VgPEeSTYp88fJMr7g">
              <body>Run a visitor over the list to convert it to a String.  &#xD;
	 * Delegates to the rest of the list using the helper algo, with the accumulator &#xD;
	 * (params[0]) set to &quot;{&quot;+_first.toString().  &#xD;
	 * @return &quot;{a, b, c, d}&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_CL5yEVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CP7WcFgPEeSTYp88fJMr7g" name="NESeqList" method="_CR8IoFgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CP7Wc1gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CP7WdFgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSHu3FgPEeSTYp88fJMr7g">
              <body>Cons an IPhrase to a Sequence List.&#xD;
	 * @param first The first element of the sequence&#xD;
	 * @param rest The rest of the sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_CP7WcVgPEeSTYp88fJMr7g" name="first" type="_CLxPMFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CP7WclgPEeSTYp88fJMr7g" name="rest" type="_CL05kFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CP7WdVgPEeSTYp88fJMr7g" type="_CL3V0FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CP79gFgPEeSTYp88fJMr7g" name="setToStringAlgo" isStatic="true" method="_CR8IrVgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHu31gPEeSTYp88fJMr7g">
              <body>Setter for the _toStringAlgo helper.  This non-typical method is provided solely &#xD;
	 * for the purpose of enabling the student to install their toStringAlgo into the &#xD;
	 * read-only provided code.&#xD;
	 * @param stringAlgo The helper algo to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CP79gVgPEeSTYp88fJMr7g" name="stringAlgo" type="_CLydUFgPEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CQ1VYFgPEeSTYp88fJMr7g" name="execute" method="_CR8IqFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CQ1VYVgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQ1VYlgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQ1VZVgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQ1VY1gPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CL8OUFgPEeSTYp88fJMr7g" name="Note">
          <ownedComment xmi:id="_CSHu4lgPEeSTYp88fJMr7g">
            <body>Basic class representing musical Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_CSHu41gPEeSTYp88fJMr7g">
            <body>A playable note or rest.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRW51FgPEeSTYp88fJMr7g" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRXg4FgPEeSTYp88fJMr7g" value="&quot;Note&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRXg4VgPEeSTYp88fJMr7g" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRXg4lgPEeSTYp88fJMr7g" value="'Z'"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRXg41gPEeSTYp88fJMr7g" name="octave">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRXg5FgPEeSTYp88fJMr7g" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRXg5VgPEeSTYp88fJMr7g" name="accidental" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRXg5lgPEeSTYp88fJMr7g" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRXg51gPEeSTYp88fJMr7g" name="duration">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRXg6FgPEeSTYp88fJMr7g" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRYH8FgPEeSTYp88fJMr7g" name="isNatural" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRYH8VgPEeSTYp88fJMr7g" value="false"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_CP9LoFgPEeSTYp88fJMr7g" client="_CL8OUFgPEeSTYp88fJMr7g" supplier="_CLwoIFgPEeSTYp88fJMr7g" contract="_CLwoIFgPEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR8vtFgPEeSTYp88fJMr7g" name="Note" specification="_CL-DgFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR8vtVgPEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR8vtlgPEeSTYp88fJMr7g" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR8vt1gPEeSTYp88fJMr7g" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR8vuFgPEeSTYp88fJMr7g" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR8vuVgPEeSTYp88fJMr7g" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR8vulgPEeSTYp88fJMr7g" type="_CL8OUFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>setName(name);&#xD;
		setOctave(octave);&#xD;
		setAccidental(accidental);&#xD;
		setDuration(duration);&#xD;
		setIsNatural(isNatural);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR8vu1gPEeSTYp88fJMr7g" name="toString" specification="_CL-qkFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR8vvFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String s = &quot;(&quot;;&#xD;
		s += Character.toString(name);&#xD;
		int a = accidental;&#xD;
		if (isNatural) {&#xD;
			s += &quot;n&quot;;&#xD;
		}&#xD;
		while (a &lt; 0) {&#xD;
			s += &quot;b&quot;;&#xD;
			a++;&#xD;
		}&#xD;
		while (a > 0) {&#xD;
			s += &quot;#&quot;;&#xD;
			a--;&#xD;
		}&#xD;
		s += &quot;, &quot; + Integer.toString(octave) + &quot;, &quot;;&#xD;
		s += String.format(&quot;%3.2f&quot;, duration);&#xD;
		s += &quot;)&quot;;&#xD;
&#xD;
		return s;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR8vvVgPEeSTYp88fJMr7g" name="execute" specification="_CQ3KkFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR8vvlgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR8vv1gPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR8vwFgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR8vwVgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR8vwlgPEeSTYp88fJMr7g" name="setName" specification="_CL_RoFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR8vw1gPEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>switch (name) {&#xD;
		case 'a':&#xD;
		case 'A':&#xD;
			this.name = 'A';&#xD;
			break;&#xD;
&#xD;
		case 'b':&#xD;
		case 'B':&#xD;
			this.name = 'B';&#xD;
			break;&#xD;
&#xD;
		case 'c':&#xD;
		case 'C':&#xD;
			this.name = 'C';&#xD;
			break;&#xD;
&#xD;
		case 'd':&#xD;
		case 'D':&#xD;
			this.name = 'D';&#xD;
			break;&#xD;
&#xD;
		case 'e':&#xD;
		case 'E':&#xD;
			this.name = 'E';&#xD;
			break;&#xD;
&#xD;
		case 'f':&#xD;
		case 'F':&#xD;
			this.name = 'F';&#xD;
			break;&#xD;
&#xD;
		case 'g':&#xD;
		case 'G':&#xD;
			this.name = 'G';&#xD;
			break;&#xD;
&#xD;
		default:&#xD;
			this.name = 'Z';&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR9WwFgPEeSTYp88fJMr7g" name="setAccidental" specification="_CL_RolgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR9WwVgPEeSTYp88fJMr7g" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.accidental = accidental;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR9WwlgPEeSTYp88fJMr7g" name="getIsNatural" specification="_CL_RpFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR9Ww1gPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return isNatural;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR9WxFgPEeSTYp88fJMr7g" name="setIsNatural" specification="_CL_4sVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR9WxVgPEeSTYp88fJMr7g" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>this.isNatural = isNatural;&#xD;
		if (isNatural)&#xD;
			accidental = 0;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CL-DgFgPEeSTYp88fJMr7g" name="Note" method="_CR8vtFgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CL-DhlgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CL-Dh1gPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSHu5FgPEeSTYp88fJMr7g">
              <body>Constructor for the class&#xD;
	 * @param name  The name of the note&#xD;
	 * @param octave The octave of the note w.r.t. middle C.  Zero = same octave as middle C.&#xD;
	 * @param accidental accidental setting sharp > 0, flat &lt; 0&#xD;
	 * @param duration duration of note&#xD;
	 * @param isNatural flag to override key signature.  True if note should be natural, overriding key signature.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CL-DgVgPEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CL-DglgPEeSTYp88fJMr7g" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CL-Dg1gPEeSTYp88fJMr7g" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CL-DhFgPEeSTYp88fJMr7g" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CL-DhVgPEeSTYp88fJMr7g" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CL-DiFgPEeSTYp88fJMr7g" type="_CL8OUFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CL-qkFgPEeSTYp88fJMr7g" name="toString" method="_CR8vu1gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHu5VgPEeSTYp88fJMr7g">
              <body>Returns a string representation of the Note  &#xD;
	 * @return &quot;(name, octave, duration)&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_CL-qkVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CL_RoFgPEeSTYp88fJMr7g" name="setName" method="_CR8vwlgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSHu5lgPEeSTYp88fJMr7g">
              <body>Accessor to set the name of the note&#xD;
	 * @param name - the name to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_CL_RoVgPEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CL_RolgPEeSTYp88fJMr7g" name="setAccidental" method="_CR9WwFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSIV4FgPEeSTYp88fJMr7g">
              <body>Accessor to set the accidental value&#xD;
	 * @param accidental - the accidental to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_CL_Ro1gPEeSTYp88fJMr7g" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CL_RpFgPEeSTYp88fJMr7g" name="getIsNatural" method="_CR9WwlgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSIV4VgPEeSTYp88fJMr7g">
              <body>Accessor for isNatural flag&#xD;
	 * @return isNatural flag setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_CL_4sFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CL_4sVgPEeSTYp88fJMr7g" name="setIsNatural" method="_CR9WxFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSIV4lgPEeSTYp88fJMr7g">
              <body>Settor for isNatural flag.  Accidentals will be set to zero if isNatural is true.&#xD;
	 * @param isNatural  New isNatural setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_CL_4slgPEeSTYp88fJMr7g" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQ3KkFgPEeSTYp88fJMr7g" name="execute" method="_CR8vvVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CQ3KkVgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQ3KklgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQ4YsFgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQ3xoFgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CMBt4FgPEeSTYp88fJMr7g" name="NoteCollection" isAbstract="true">
          <ownedComment xmi:id="_CSIV41gPEeSTYp88fJMr7g">
            <body>A collection of multiple notes</body>
          </ownedComment>
          <ownedComment xmi:id="_CSIV5FgPEeSTYp88fJMr7g">
            <body>A collection of Notes</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRYH81gPEeSTYp88fJMr7g" name="notes" visibility="protected" type="_CL8OUFgPEeSTYp88fJMr7g" association="_CSbQ01gPEeSTYp88fJMr7g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CRYH9FgPEeSTYp88fJMr7g" value="*"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_CP_A0FgPEeSTYp88fJMr7g" client="_CMBt4FgPEeSTYp88fJMr7g" supplier="_CLwoIFgPEeSTYp88fJMr7g" contract="_CLwoIFgPEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR9WxlgPEeSTYp88fJMr7g" name="NoteCollection" specification="_CP_A0VgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR9Wx1gPEeSTYp88fJMr7g" name="notes" type="_CL8OUFgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR9WyFgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR9WyVgPEeSTYp88fJMr7g" type="_CMBt4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>this.notes = notes;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR9WylgPEeSTYp88fJMr7g" name="getNotes" specification="_CMCU8FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR9Wy1gPEeSTYp88fJMr7g" type="_CL8OUFgPEeSTYp88fJMr7g" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR9WzFgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>return notes;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CMCU8FgPEeSTYp88fJMr7g" name="getNotes" method="_CR9WylgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSIV5VgPEeSTYp88fJMr7g">
              <body>Accessor for the array of notes in this collection&#xD;
	 * @return the array of notes</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMCU8VgPEeSTYp88fJMr7g" type="_CL8OUFgPEeSTYp88fJMr7g" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CMCU8lgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CP_A0VgPEeSTYp88fJMr7g" name="NoteCollection" method="_CR9WxlgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CP_A01gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CP_A1FgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_CP_A0lgPEeSTYp88fJMr7g" name="notes" type="_CL8OUFgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CP_n4lgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CP_n4VgPEeSTYp88fJMr7g" type="_CMBt4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CMDjEFgPEeSTYp88fJMr7g" name="ToggleDecoratorSeqList">
          <ownedComment xmi:id="_CSIV5lgPEeSTYp88fJMr7g">
            <body>Multiple Decorator ISeqList where the active decoree (the &quot;target&quot;) is&#xD;
toggled (cycled, actually) through all the available decorees.   &#xD;
This is arguably a State Design Pattern where each decoree is &#xD;
considered to be another state of the system.&#xD;
This is used to implement repeats where the first time through, the notes are linked&#xD;
back to a repeat start (decoree #0) but the next time through, the next note is the one&#xD;
after the repeat (decoree #1).&#xD;
&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_CSIV51gPEeSTYp88fJMr7g">
            <body>Decorated ISeqList that transparently cycles through multiple targets (decorees)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRYvAVgPEeSTYp88fJMr7g" name="decorees" visibility="private" type="_CL05kFgPEeSTYp88fJMr7g" association="_CSb34VgPEeSTYp88fJMr7g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CRYvAlgPEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRYvBFgPEeSTYp88fJMr7g" value="{ MTSeqList.Singleton, MTSeqList.Singleton }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRZWEVgPEeSTYp88fJMr7g" name="targetIdx" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRZWElgPEeSTYp88fJMr7g" value="0"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_CP_n5FgPEeSTYp88fJMr7g" client="_CMDjEFgPEeSTYp88fJMr7g" supplier="_CL05kFgPEeSTYp88fJMr7g" contract="_CL05kFgPEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR9WzVgPEeSTYp88fJMr7g" name="ToggleDecoratorSeqList" specification="_CQAO8FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR9WzlgPEeSTYp88fJMr7g" name="decorees" type="_CL05kFgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR9Wz1gPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR9W0FgPEeSTYp88fJMr7g" type="_CMDjEFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>setDecorees(decorees);&#xD;
		setTargetToDecoree(0);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR9W0VgPEeSTYp88fJMr7g" name="setDecorees" specification="_CQA2BFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR9W0lgPEeSTYp88fJMr7g" name="decorees" type="_CL05kFgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR9W01gPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>this.decorees = decorees;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR990FgPEeSTYp88fJMr7g" name="setDecoree" specification="_CQBdE1gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR990VgPEeSTYp88fJMr7g" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR990lgPEeSTYp88fJMr7g" name="decoree" type="_CL05kFgPEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>this.decorees[idx] = decoree;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR9901gPEeSTYp88fJMr7g" name="setTargetToDecoree" specification="_CMExMFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR991FgPEeSTYp88fJMr7g" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.targetIdx = targetIdx;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR991VgPEeSTYp88fJMr7g" name="getTargetDecoree" specification="_CMExMlgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR991lgPEeSTYp88fJMr7g" type="_CL05kFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return decorees[targetIdx];&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR9911gPEeSTYp88fJMr7g" name="execute" specification="_CQ6N4FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR992FgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR992VgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR992lgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR9921gPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>ISeqList target = decorees[targetIdx++];&#xD;
		if (targetIdx >= decorees.length)&#xD;
			targetIdx = 0; // This must be set before the delegate because it may be needed before the recursion returns.&#xD;
		return target.execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR993FgPEeSTYp88fJMr7g" name="toString" specification="_CMExM1gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR993VgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CMDjEVgPEeSTYp88fJMr7g" name="ToggleDecoratorSeqList">
            <eAnnotations xmi:id="_CMEKIFgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CMEKIVgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_CMEKI1gPEeSTYp88fJMr7g" type="_CMDjEFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CMExMFgPEeSTYp88fJMr7g" name="setTargetToDecoree" method="_CR9901gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSIV6VgPEeSTYp88fJMr7g">
              <body>Used to explicitly set the target (active) decoree if needed.&#xD;
	 * @param targetIdx  the index of the target decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMExMVgPEeSTYp88fJMr7g" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMExMlgPEeSTYp88fJMr7g" name="getTargetDecoree" method="_CR991VgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSIV6lgPEeSTYp88fJMr7g">
              <body>Accessor for the current target (active) decoree&#xD;
	 * @return  The current target (active) decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_CQCEIFgPEeSTYp88fJMr7g" type="_CL05kFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CMExM1gPEeSTYp88fJMr7g" name="toString" method="_CR993FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CMFYQFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQAO8FgPEeSTYp88fJMr7g" name="ToggleDecoratorSeqList" method="_CR9WzVgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CQAO8lgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CQAO81gPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_CQAO8VgPEeSTYp88fJMr7g" name="decorees" type="_CL05kFgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQA2AlgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQA2AVgPEeSTYp88fJMr7g" type="_CMDjEFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CQA2BFgPEeSTYp88fJMr7g" name="setDecorees" method="_CR9W0VgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CQA2BVgPEeSTYp88fJMr7g" name="decorees" type="_CL05kFgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQBdEVgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQBdE1gPEeSTYp88fJMr7g" name="setDecoree" method="_CR990FgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSIV6FgPEeSTYp88fJMr7g">
              <body>Setter methods used to set a particular decoree.   &#xD;
	 * The specified index must already exist.&#xD;
	 * @param idx The index of the decoree to replace&#xD;
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CQBdFFgPEeSTYp88fJMr7g" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQBdFVgPEeSTYp88fJMr7g" name="decoree" type="_CL05kFgPEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CQ6N4FgPEeSTYp88fJMr7g" name="execute" method="_CR9911gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CQ6N4VgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQ6N4lgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQ608FgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQ6N41gPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CMHNcFgPEeSTYp88fJMr7g" name="Triplet">
          <ownedComment xmi:id="_CSIV61gPEeSTYp88fJMr7g">
            <body>A musical triplet.  The three notes should be played with 2/3 of their&#xD;
indicated duration.</body>
          </ownedComment>
          <ownedComment xmi:id="_CSIV7FgPEeSTYp88fJMr7g">
            <body>A set of 3 notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_CQDSQFgPEeSTYp88fJMr7g" general="_CMBt4FgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRZWFFgPEeSTYp88fJMr7g" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRZ9IFgPEeSTYp88fJMr7g" value="&quot;Triplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR993lgPEeSTYp88fJMr7g" name="Triplet" specification="_CQCrMFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR9931gPEeSTYp88fJMr7g" name="n1" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR994FgPEeSTYp88fJMr7g" name="n2" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR994VgPEeSTYp88fJMr7g" name="n3" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR994lgPEeSTYp88fJMr7g" type="_CMHNcFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>super(n1, n2, n3);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR9941gPEeSTYp88fJMr7g" name="execute" specification="_CQ7cAFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR995FgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR995VgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR995lgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR9951gPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR996FgPEeSTYp88fJMr7g" name="toString" specification="_CMIbkFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR996VgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Triplet(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CMIbkFgPEeSTYp88fJMr7g" name="toString" method="_CR996FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CMIbkVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQCrMFgPEeSTYp88fJMr7g" name="Triplet" method="_CR993lgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CQCrNFgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CQCrNVgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_CQCrMVgPEeSTYp88fJMr7g" name="n1" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQCrMlgPEeSTYp88fJMr7g" name="n2" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQCrM1gPEeSTYp88fJMr7g" name="n3" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQCrNlgPEeSTYp88fJMr7g" type="_CMHNcFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CQ7cAFgPEeSTYp88fJMr7g" name="execute" method="_CR9941gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CQ7cAVgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQ7cAlgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQ8DEVgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQ7cA1gPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CMKQwFgPEeSTYp88fJMr7g" name="Tuplet">
          <ownedComment xmi:id="_CSIV7VgPEeSTYp88fJMr7g">
            <body>Class that represents a tuplet, a series of notes played in a fraction of their normal total time.&#xD;
The exact fraction depends on the meter and the number of notes in the tuplet.&#xD;
A triplet is a specific type of tuplet.&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_CSIV7lgPEeSTYp88fJMr7g">
            <body>A arbitrary set of notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_CQEgYVgPEeSTYp88fJMr7g" general="_CMBt4FgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRZ9IVgPEeSTYp88fJMr7g" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRZ9IlgPEeSTYp88fJMr7g" value="&quot;Tuplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR-k4FgPEeSTYp88fJMr7g" name="Tuplet" specification="_CQD5UFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR-k4VgPEeSTYp88fJMr7g" name="notes" type="_CL8OUFgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR-k4lgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR-k41gPEeSTYp88fJMr7g" type="_CMKQwFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>super(notes);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR-k5FgPEeSTYp88fJMr7g" name="execute" specification="_CQ8qIFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR-k5VgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR-k5lgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR-k51gPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR-k6FgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR-k6VgPEeSTYp88fJMr7g" name="toString" specification="_CMK30FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR-k6lgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Tuplet(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CMK30FgPEeSTYp88fJMr7g" name="toString" method="_CR-k6VgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CMK30VgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQD5UFgPEeSTYp88fJMr7g" name="Tuplet" method="_CR-k4FgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CQD5UlgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CQD5U1gPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_CQD5UVgPEeSTYp88fJMr7g" name="notes" type="_CL8OUFgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQD5VlgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQD5VVgPEeSTYp88fJMr7g" type="_CMKQwFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CQ8qIFgPEeSTYp88fJMr7g" name="execute" method="_CR-k5FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CQ8qIVgPEeSTYp88fJMr7g" name="algo" type="_CLydUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQ8qIlgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CQ8qJVgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQ8qI1gPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSYNgVgPEeSTYp88fJMr7g" name="" memberEnd="_CSYNglgPEeSTYp88fJMr7g _CRTPcFgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSYNglgPEeSTYp88fJMr7g" name="" type="_CLaC0FgPEeSTYp88fJMr7g" association="_CSYNgVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSY0kVgPEeSTYp88fJMr7g" name="" memberEnd="_CSY0klgPEeSTYp88fJMr7g _CRTPclgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSY0klgPEeSTYp88fJMr7g" name="" type="_CLaC0FgPEeSTYp88fJMr7g" association="_CSY0kVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSZboVgPEeSTYp88fJMr7g" name="" memberEnd="_CSZbolgPEeSTYp88fJMr7g _CRUdkVgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSZbolgPEeSTYp88fJMr7g" name="" type="_CLhXkFgPEeSTYp88fJMr7g" association="_CSZboVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSZbpFgPEeSTYp88fJMr7g" name="" memberEnd="_CSZbpVgPEeSTYp88fJMr7g _CRWSwVgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSZbpVgPEeSTYp88fJMr7g" name="" type="_CL1goFgPEeSTYp88fJMr7g" association="_CSZbpFgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSaCsVgPEeSTYp88fJMr7g" name="" memberEnd="_CSaCslgPEeSTYp88fJMr7g _CRWSxVgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSaCslgPEeSTYp88fJMr7g" name="" type="_CL3V0FgPEeSTYp88fJMr7g" association="_CSaCsVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSapwVgPEeSTYp88fJMr7g" name="" memberEnd="_CSapwlgPEeSTYp88fJMr7g _CRW50FgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSapwlgPEeSTYp88fJMr7g" name="" type="_CL3V0FgPEeSTYp88fJMr7g" association="_CSapwVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSbQ0FgPEeSTYp88fJMr7g" name="" memberEnd="_CSbQ0VgPEeSTYp88fJMr7g _CRW50lgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSbQ0VgPEeSTYp88fJMr7g" name="" type="_CL3V0FgPEeSTYp88fJMr7g" association="_CSbQ0FgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSbQ01gPEeSTYp88fJMr7g" name="" memberEnd="_CSbQ1FgPEeSTYp88fJMr7g _CRYH81gPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSbQ1FgPEeSTYp88fJMr7g" name="" type="_CMBt4FgPEeSTYp88fJMr7g" association="_CSbQ01gPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSb34VgPEeSTYp88fJMr7g" name="" memberEnd="_CSb34lgPEeSTYp88fJMr7g _CRYvAVgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSb34lgPEeSTYp88fJMr7g" name="" type="_CMDjEFgPEeSTYp88fJMr7g" association="_CSb34VgPEeSTYp88fJMr7g"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CJVmRFgPEeSTYp88fJMr7g" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_CM4pgFgPEeSTYp88fJMr7g" name="ABCInstrument">
          <ownedComment xmi:id="_CSKyIVgPEeSTYp88fJMr7g">
            <body>Represents an instrument as a name and an integer value&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRy-sVgPEeSTYp88fJMr7g" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRy-slgPEeSTYp88fJMr7g" name="value" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSErglgPEeSTYp88fJMr7g" name="ABCInstrument" specification="_CM5QkFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSErg1gPEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSErhFgPEeSTYp88fJMr7g" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSErhVgPEeSTYp88fJMr7g" type="_CM4pgFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>this.name = name;&#xD;
		this.value = value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSErhlgPEeSTYp88fJMr7g" name="toString" specification="_CM53oFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSErh1gPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return name + &quot;: &quot; + value;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CM5QkFgPEeSTYp88fJMr7g" name="ABCInstrument" method="_CSErglgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CM5Qk1gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CM5QlFgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_CM5QkVgPEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CM5QklgPEeSTYp88fJMr7g" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CM5QlVgPEeSTYp88fJMr7g" type="_CM4pgFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CM53oFgPEeSTYp88fJMr7g" name="toString" method="_CSErhlgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CM53oVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CM53olgPEeSTYp88fJMr7g" name="ABCUtil">
          <ownedComment xmi:id="_CSKyIlgPEeSTYp88fJMr7g">
            <body>Singleton utility class that has methods for parsing,&#xD;
reading file content and getting the list of instruments.&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRzlwFgPEeSTYp88fJMr7g" name="Singleton" isLeaf="true" isStatic="true" type="_CM53olgPEeSTYp88fJMr7g" isReadOnly="true" association="_CSillFgPEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRzlwVgPEeSTYp88fJMr7g" value="new ABCUtil()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSEriFgPEeSTYp88fJMr7g" name="parseFraction" specification="_CM7FwlgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSEriVgPEeSTYp88fJMr7g" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSErilgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String[] vals = frac.split(&quot;/&quot;);&#xD;
		if (vals.length != 2) {&#xD;
			throw new NumberFormatException(frac + &quot; is not a fraction.&quot;);&#xD;
		}&#xD;
		double num = Double.parseDouble(vals[0]);&#xD;
		double denom = Double.parseDouble(vals[1]);&#xD;
		return num / denom;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSEri1gPEeSTYp88fJMr7g" name="parseTempo" specification="_CM7s0VgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSErjFgPEeSTYp88fJMr7g" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSErjVgPEeSTYp88fJMr7g" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSErjlgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String els[] = tempo.split(&quot;=&quot;);&#xD;
		double bpm = 0;&#xD;
		if (1 == els.length) {&#xD;
			bpm = Double.parseDouble(els[0]) / defaultNotesPerQuarterNote;&#xD;
		} else {&#xD;
			double note = parseFraction(els[0]);&#xD;
			bpm = Double.parseDouble(els[1]) / (0.25 / note);&#xD;
		}&#xD;
		return bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSErj1gPEeSTYp88fJMr7g" name="getFileContents" specification="_CM8T4FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSErkFgPEeSTYp88fJMr7g" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSErkVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String fileContents = &quot;&quot;;&#xD;
&#xD;
		try {&#xD;
			InputStream is = this.getClass().getResource(filename).openStream();&#xD;
&#xD;
			BufferedReader input = new BufferedReader(new InputStreamReader(is));&#xD;
&#xD;
			try {&#xD;
				// use buffering, reading one line at a time&#xD;
				// FileReader always assumes default&#xD;
				// encoding is OK!&#xD;
&#xD;
				String line = null; // not declared within while loop&#xD;
&#xD;
				/*&#xD;
				 * readLine is a bit quirky : it returns the&#xD;
				 * content of a line MINUS the newline. it&#xD;
				 * returns null only for the END of the&#xD;
				 * stream. it returns an empty String if two&#xD;
				 * newlines appear in a row.&#xD;
				 */&#xD;
				while ((line = input.readLine()) != null) {&#xD;
					fileContents += line + &quot;\n&quot;;&#xD;
				}&#xD;
			} finally {&#xD;
				input.close();&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			return &quot;Error loading file: &quot; + filename + &quot;\n&quot; + e + &quot;\n&quot;;&#xD;
		}&#xD;
&#xD;
		return fileContents;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSErklgPEeSTYp88fJMr7g" name="getInstruments" specification="_CM8T41gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSErk1gPEeSTYp88fJMr7g" type="_CM4pgFgPEeSTYp88fJMr7g" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CSErlFgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			Synthesizer synth = MidiSystem.getSynthesizer();&#xD;
			synth.open();&#xD;
			Instrument[] instruments = synth.getAvailableInstruments();&#xD;
			ABCInstrument[] result = new ABCInstrument[instruments.length];&#xD;
			for (int i = 0; i &lt; instruments.length; i++) {&#xD;
				result[i] = new ABCInstrument(instruments[i].getName(),&#xD;
						instruments[i].getPatch().getProgram());&#xD;
			}&#xD;
&#xD;
			synth.close();&#xD;
			return result;&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.err.println(&quot;ABCUtil.getInstruments: &quot; + e);&#xD;
			return null;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CM6esFgPEeSTYp88fJMr7g" name="ABCUtil" visibility="private">
            <eAnnotations xmi:id="_CM6esVgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CM6eslgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_CM7FwVgPEeSTYp88fJMr7g" type="_CM53olgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CM7FwlgPEeSTYp88fJMr7g" name="parseFraction" method="_CSEriFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSKyI1gPEeSTYp88fJMr7g">
              <body>Return the evaluation of a string &quot;a/b&quot;.&#xD;
	 * &#xD;
	 * @param frac - a string containing a fraction&#xD;
	 * @return     - the result of evaluating the fraction</body>
            </ownedComment>
            <ownedParameter xmi:id="_CM7Fw1gPEeSTYp88fJMr7g" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CM7s0FgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CM7s0VgPEeSTYp88fJMr7g" name="parseTempo" method="_CSEri1gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSKyJFgPEeSTYp88fJMr7g">
              <body>Return the tempo given by the input string.  The returned value is in the &#xD;
	 * units of quarter notes per minute.&#xD;
	 * &#xD;
	 * Accepts &quot;bpm&quot; (beats per default note) or &quot;a/b=bpm&quot; (beats per a/b note).&#xD;
	 * &#xD;
	 * @param tempo                      - tempo represented as a string&#xD;
	 * @param defaultNotesPerQuarterNote - default notes per quarter note &#xD;
	 * @return                           - the tempo indicated by the string</body>
            </ownedComment>
            <ownedParameter xmi:id="_CM7s0lgPEeSTYp88fJMr7g" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CM7s01gPEeSTYp88fJMr7g" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CM7s1FgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CM8T4FgPEeSTYp88fJMr7g" name="getFileContents" method="_CSErj1gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSKyJVgPEeSTYp88fJMr7g">
              <body>Returns the contents of a text file, e.g. an abc file, as a single string.&#xD;
	 * @param filename the name of the file with respect to the default package, where &quot;/&quot; refers to the default package, e.g. a file in the &quot;data&quot; package would &quot;/data/myfile.abc&quot;&#xD;
	 * @return the contents of the file</body>
            </ownedComment>
            <ownedParameter xmi:id="_CM8T4VgPEeSTYp88fJMr7g" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CM8T4lgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CM8T41gPEeSTYp88fJMr7g" name="getInstruments" method="_CSErklgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSKyJlgPEeSTYp88fJMr7g">
              <body>Get an array of all the available instruments as ABCInstruments &#xD;
	 * where the instrument's value is the MIDI instrument number&#xD;
	 * &#xD;
	 * @return an array of ABCInstruments</body>
            </ownedComment>
            <ownedParameter xmi:id="_CM8T5FgPEeSTYp88fJMr7g" type="_CM4pgFgPEeSTYp88fJMr7g" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CM8T5VgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CPmmUFgPEeSTYp88fJMr7g" name="KeySignature">
          <ownedComment xmi:id="_C-bbMFgPEeSTYp88fJMr7g">
            <body>Utility class to simplify dealing with key signatures &lt;br/>&#xD;
Usage:&lt;br/>&#xD;
KeySignature keySig = new KeySignature(aKey); // aKey is a string representing a key, e.g. &quot;C&quot;, &quot;Bb&quot;, &quot;Am&quot;&lt;br/>&#xD;
Note adjustedNote = keySig.adjust(originalNote); // returns the Note object, adjusted so that it matches the key,&#xD;
e.g for key of &quot;D&quot;, an &quot;F&quot; --> &quot;F#&quot;.&lt;br/></body>
          </ownedComment>
          <ownedAttribute xmi:id="_C-KVcFgPEeSTYp88fJMr7g" name="_major" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C-K8gFgPEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-K8glgPEeSTYp88fJMr7g" value="{ 0, 2, 2, 1, 2, 2, 2 //, 1&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_C-LjkFgPEeSTYp88fJMr7g" name="_minor" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C-MKoFgPEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-MKolgPEeSTYp88fJMr7g" value="{ // Half steps in a Minor key&#xD;&#xA;&#x9;0, 2, 1, 2, 2, 1, 2 //, 2&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_C-SRQVgPEeSTYp88fJMr7g" name="keymap" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <qualifier xmi:id="_C-S4UlgPEeSTYp88fJMr7g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-S4UFgPEeSTYp88fJMr7g" value="new Hashtable&lt;Character, Integer>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_C-S4U1gPEeSTYp88fJMr7g" name="notes" visibility="private" type="_C8lBEFgPEeSTYp88fJMr7g" association="_C-dQYFgPEeSTYp88fJMr7g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C-S4VFgPEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-TfYVgPEeSTYp88fJMr7g" value="{ new KeyNote('A', 0), new KeyNote('A', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('B', 0), new KeyNote('C', 0), new KeyNote('C', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('D', 0), new KeyNote('D', 1), new KeyNote('E', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('F', 0), new KeyNote('F', 1), new KeyNote('G', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_C-TfY1gPEeSTYp88fJMr7g" name="fs_dsm" visibility="private" type="_C8lBEFgPEeSTYp88fJMr7g" association="_C-d3cVgPEeSTYp88fJMr7g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C-TfZFgPEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_C-TfZlgPEeSTYp88fJMr7g" value="{ new KeyNote('A', 1), new KeyNote('B', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('C', 1), new KeyNote('D', 1), new KeyNote('E', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('F', 1), new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_C-Y-8lgPEeSTYp88fJMr7g" name="KeySignature" specification="_C8m2QFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_C-Y-81gPEeSTYp88fJMr7g" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_C-Y-9FgPEeSTYp88fJMr7g" type="_CPmmUFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>// Get rid of spurious &quot;maj&quot; at the end, if it's there&#xD;
		if (key.endsWith(&quot;maj&quot;)) {&#xD;
			key = key.replace(&quot;maj&quot;, &quot;&quot;);&#xD;
		}&#xD;
&#xD;
		// Special case keys with 6 sharps&#xD;
		if ((key == &quot;F#&quot;) || (key == &quot;D#m&quot;)) {&#xD;
			for (KeyNote n : fs_dsm) {&#xD;
				keymap.put(n.letter, n.accidental);&#xD;
			}&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		char keynote = key.charAt(0);&#xD;
		int cur = -1;&#xD;
&#xD;
		for (int i = 0; i &lt; notes.length; i++) {&#xD;
			if (notes[i].letter == keynote) {&#xD;
				cur = i;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (cur == -1) {&#xD;
			System.out.println(&quot;Invalid key: &quot; + key);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		int[] steps = _major;&#xD;
&#xD;
		int idx = 1;&#xD;
		while (idx &lt; key.length()) {&#xD;
			switch (key.charAt(idx)) {&#xD;
			case '#':&#xD;
				cur += 1;&#xD;
				break;&#xD;
&#xD;
			case 'b':&#xD;
				cur -= 1;&#xD;
				break;&#xD;
&#xD;
			case 'm':&#xD;
				steps = _minor;&#xD;
				break;&#xD;
&#xD;
			default:&#xD;
				System.out.println(&quot;Invalid key: &quot; + key);&#xD;
				return;&#xD;
			}&#xD;
			idx++;&#xD;
		}&#xD;
&#xD;
		if (cur == -1) {&#xD;
			cur = notes.length - 1;&#xD;
		}&#xD;
&#xD;
		for (int i : steps) {&#xD;
			cur += i;&#xD;
			if (cur >= notes.length) {&#xD;
				cur -= notes.length;&#xD;
			}&#xD;
			KeyNote n = notes[cur];&#xD;
			insert(n);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_C-Y-9VgPEeSTYp88fJMr7g" name="convertflat" specification="_C8ndU1gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_C-ZmAFgPEeSTYp88fJMr7g" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_C-ZmAVgPEeSTYp88fJMr7g" type="_C8lBEFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>char next = (char) (n + 1);&#xD;
		if (next == 'H') {&#xD;
			next = 'A';&#xD;
		}&#xD;
		return new KeyNote(next, -1);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_C-ZmAlgPEeSTYp88fJMr7g" name="insert" specification="_C9rNQFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_C-ZmA1gPEeSTYp88fJMr7g" name="n" type="_C8lBEFgPEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>if (!keymap.containsKey(n.letter)) {&#xD;
			keymap.put(n.letter, n.accidental);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		if (n.accidental == 1) {&#xD;
			// Move sharp up to next flat&#xD;
			insert(convertflat(n.letter));&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		if ((n.accidental == 0) || (n.accidental == -1)) {&#xD;
			// Conflict, move higher note up to next flat&#xD;
			int a = keymap.get(n.letter);&#xD;
			a = Math.min(a, n.accidental);&#xD;
			insert(convertflat(n.letter));&#xD;
			keymap.put(n.letter, a);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		// Shouldn't get here&#xD;
		System.out.println(&quot;Should not reach here.&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_C-ZmBFgPEeSTYp88fJMr7g" name="map" specification="_C-GEAVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_C-ZmBVgPEeSTYp88fJMr7g" name="note" type="_C-Fc8FgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_C-ZmBlgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (keymap.containsKey(note)) {&#xD;
			return (int) keymap.get(note);&#xD;
		} else {&#xD;
			return 0;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_C-ZmB1gPEeSTYp88fJMr7g" name="adjust" specification="_C8HHAFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_C-ZmCFgPEeSTYp88fJMr7g" name="n" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_C-ZmCVgPEeSTYp88fJMr7g" type="_CL8OUFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>if (n.getAccidental() != 0 &amp;&amp; !n.getIsNatural()) {&#xD;
			return n; // Accidentals set and is not natural&#xD;
		} else if (n.getIsNatural()) {&#xD;
			return n; // override key signature&#xD;
		} else {&#xD;
			// normal key signature mapping applies&#xD;
			int accidental = map(n.getName());&#xD;
			if (accidental == 0) {&#xD;
				return n; // nothing to change&#xD;
			}&#xD;
			return new Note(n.getName(), n.getOctave(), accidental,&#xD;
					n.getDuration(), false); // must be false isNatural&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_C-aNEFgPEeSTYp88fJMr7g" name="printmap" specification="_C8HuEVgPEeSTYp88fJMr7g">
            <language>java</language>
            <body>System.out.println(keymap);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_C8HHAFgPEeSTYp88fJMr7g" name="adjust" method="_C-ZmB1gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_C-cCQlgPEeSTYp88fJMr7g">
              <body>Takes a note and returns the properly transposed note in this key signature&#xD;
	 *&#xD;
	 * @param n - note to be adjusted&#xD;
	 * @return A new, adjusted Note</body>
            </ownedComment>
            <ownedParameter xmi:id="_C8HHAVgPEeSTYp88fJMr7g" name="n" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_C8HuEFgPEeSTYp88fJMr7g" type="_CL8OUFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_C8HuEVgPEeSTYp88fJMr7g" name="printmap" method="_C-aNEFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_C-cCQ1gPEeSTYp88fJMr7g">
              <body>Print the mapping for this key signature</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_C8m2QFgPEeSTYp88fJMr7g" name="KeySignature" method="_C-Y-8lgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_C8ndUVgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_C8ndUlgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_C-bbM1gPEeSTYp88fJMr7g">
              <body>Generate a &quot;Key&quot; object that enables easy access to the key signature.&#xD;
	 * &#xD;
	 * @param key        - String indicating key (i.e., &quot;C&quot; or &quot;D#m&quot;)</body>
            </ownedComment>
            <ownedParameter xmi:id="_C8m2QVgPEeSTYp88fJMr7g" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_C8ndUFgPEeSTYp88fJMr7g" type="_CPmmUFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_C8ndU1gPEeSTYp88fJMr7g" name="convertflat" visibility="private" method="_C-Y-9VgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_C-bbNFgPEeSTYp88fJMr7g">
              <body>Helper method to convert a note to its equivalent flat version.&#xD;
	 * &#xD;
	 * @param n  - note letter&#xD;
	 * @return   - equivalent flat version of note n</body>
            </ownedComment>
            <ownedParameter xmi:id="_C8oEYFgPEeSTYp88fJMr7g" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_C9oJ8FgPEeSTYp88fJMr7g" type="_C8lBEFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_C9rNQFgPEeSTYp88fJMr7g" name="insert" visibility="private" method="_C-ZmAlgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_C-cCQFgPEeSTYp88fJMr7g">
              <body>Helper method to insert the given note into the keymap.&#xD;
	 * &#xD;
	 * @param n  - note to add to the map</body>
            </ownedComment>
            <ownedParameter xmi:id="_C9yiAFgPEeSTYp88fJMr7g" name="n" type="_C8lBEFgPEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_C-GEAVgPEeSTYp88fJMr7g" name="map" visibility="private" method="_C-ZmBFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_C-cCQVgPEeSTYp88fJMr7g">
              <body>Takes a note (with no accidentals) and returns the accidental for this&#xD;
	 * key signature.&#xD;
	 * &#xD;
	 * @param  note - in [A, B, C, D, E, F, G]&#xD;
	 * @return accidental for the note in this key signature [-1, 0, 1]</body>
            </ownedComment>
            <ownedParameter xmi:id="_C-GEAlgPEeSTYp88fJMr7g" name="note" type="_C-Fc8FgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_C-GrEFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Class" xmi:id="_C8lBEFgPEeSTYp88fJMr7g" name="KeyNote" visibility="private">
            <ownedComment xmi:id="_C-bbMVgPEeSTYp88fJMr7g">
              <body>Utility class to keep track of the position of notes</body>
            </ownedComment>
            <ownedAttribute xmi:id="_C-MxsFgPEeSTYp88fJMr7g" name="letter">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_C-RqMFgPEeSTYp88fJMr7g" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_C-YX4FgPEeSTYp88fJMr7g" name="KeyNote" specification="_C8loIFgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_C-YX4VgPEeSTYp88fJMr7g" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_C-YX4lgPEeSTYp88fJMr7g" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_C-YX41gPEeSTYp88fJMr7g" type="_C8lBEFgPEeSTYp88fJMr7g" direction="return"/>
              <language>java</language>
              <body>this.letter = letter;&#xD;
			this.accidental = accidental;&#xD;
		</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_C-Y-8FgPEeSTYp88fJMr7g" name="toString" specification="_C8mPMFgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_C-Y-8VgPEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;&quot; + letter + accidental;&#xD;
		</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_C8loIFgPEeSTYp88fJMr7g" name="KeyNote" visibility="package" method="_C-YX4FgPEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_C8loI1gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_C8loJFgPEeSTYp88fJMr7g" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_C-bbMlgPEeSTYp88fJMr7g">
                <body>Constructor for the class&#xD;
		 * @param letter  The letter of the note&#xD;
		 * @param accidental  Whether or not the note is accidental:  -1 = flat, 0 = natural, +1 = sharp</body>
              </ownedComment>
              <ownedParameter xmi:id="_C8loIVgPEeSTYp88fJMr7g" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_C8loIlgPEeSTYp88fJMr7g" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_C8loJVgPEeSTYp88fJMr7g" type="_C8lBEFgPEeSTYp88fJMr7g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_C8mPMFgPEeSTYp88fJMr7g" name="toString" method="_C-Y-8FgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_C8mPMVgPEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSillFgPEeSTYp88fJMr7g" name="" memberEnd="_CSillVgPEeSTYp88fJMr7g _CRzlwFgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSillVgPEeSTYp88fJMr7g" name="" type="_CM53olgPEeSTYp88fJMr7g" association="_CSillFgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_C-dQYFgPEeSTYp88fJMr7g" name="" memberEnd="_C-dQYVgPEeSTYp88fJMr7g _C-S4U1gPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_C-dQYVgPEeSTYp88fJMr7g" name="" type="_CPmmUFgPEeSTYp88fJMr7g" association="_C-dQYFgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_C-d3cVgPEeSTYp88fJMr7g" name="" memberEnd="_C-d3clgPEeSTYp88fJMr7g _C-TfY1gPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_C-d3clgPEeSTYp88fJMr7g" name="" type="_CPmmUFgPEeSTYp88fJMr7g" association="_C-d3cVgPEeSTYp88fJMr7g"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CJYpkFgPEeSTYp88fJMr7g" name="player">
        <packagedElement xmi:type="uml:Interface" xmi:id="_CMMF8FgPEeSTYp88fJMr7g" name="ISequencePlayerStatus">
          <ownedComment xmi:id="_CSIV71gPEeSTYp88fJMr7g">
            <body>Command that is used to notify a user that a track has stopped playing.&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CMMF8lgPEeSTYp88fJMr7g" name="NULL" isLeaf="true" isStatic="true" type="_CMMF8FgPEeSTYp88fJMr7g" isReadOnly="true" association="_CSQRsFgPEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CMMF81gPEeSTYp88fJMr7g" value="new ISequencePlayerStatus() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Prints &quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot; to console.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void finished() {&#xD;&#xA;&#x9;&#x9;&#x9;System.out&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_CMMF8VgPEeSTYp88fJMr7g" name="finished">
            <ownedComment xmi:id="_CSIV8FgPEeSTYp88fJMr7g">
              <body>Called when a track stops playing.</body>
            </ownedComment>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CMMtAFgPEeSTYp88fJMr7g" name="SequencePlayer">
          <ownedComment xmi:id="_CSIV8VgPEeSTYp88fJMr7g">
            <body>Sequence Player to create and play MIDI music sequences.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRZ9I1gPEeSTYp88fJMr7g" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRZ9JFgPEeSTYp88fJMr7g" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRakMFgPEeSTYp88fJMr7g" name="_sequence" visibility="private" type="_CQ9RM1gPEeSTYp88fJMr7g" association="_CSb35FgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRakMlgPEeSTYp88fJMr7g" name="_track" visibility="private" type="_CQ94QVgPEeSTYp88fJMr7g" association="_CSce8VgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRakNFgPEeSTYp88fJMr7g" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRbLQVgPEeSTYp88fJMr7g" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRbLQ1gPEeSTYp88fJMr7g" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRbyUVgPEeSTYp88fJMr7g" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRbyU1gPEeSTYp88fJMr7g" name="_sequencer" visibility="private" type="_CQ-fUVgPEeSTYp88fJMr7g" association="_CSdGAVgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRcZYFgPEeSTYp88fJMr7g" name="_synthesizer" visibility="private" type="_CQYCYFgPEeSTYp88fJMr7g" association="_CSdGBFgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRcZYlgPEeSTYp88fJMr7g" name="_offsets" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CRcZY1gPEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRcZZVgPEeSTYp88fJMr7g" value="{ // add these amounts to the base value&#xD;&#xA;&#x9;// A   B  C  D  E  F  G&#xD;&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR-k61gPEeSTYp88fJMr7g" name="SequencePlayer" specification="_CMN7IFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR-k7FgPEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR-k7VgPEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR-k7lgPEeSTYp88fJMr7g" type="_CMMtAFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR-k71gPEeSTYp88fJMr7g" name="init" specification="_CMN7JlgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR-k8FgPEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR-k8VgPEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR-k8lgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;&#xD;
		_instrument = instrument;&#xD;
		_bpm = 0;&#xD;
		_ticksPerDefaultNote = _ticksPerQuarterNote;&#xD;
&#xD;
		_sequencer = null;&#xD;
		_synthesizer = null;&#xD;
		_track = null;&#xD;
&#xD;
		try {&#xD;
			_sequencer = MidiSystem.getSequencer();&#xD;
			_synthesizer = MidiSystem.getSynthesizer();&#xD;
&#xD;
			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);&#xD;
			_track = _sequence.createTrack();&#xD;
&#xD;
			ShortMessage sm = new ShortMessage();&#xD;
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);&#xD;
			_track.add(new MidiEvent(sm, 0));&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out&#xD;
					.println(&quot;MIDI Unavailable, SequencePlayer not initialized.&quot;);&#xD;
			return false;&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI data.&quot;);&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR-k81gPEeSTYp88fJMr7g" name="addNote" specification="_CQFugFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR-k9FgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR-k9VgPEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR-k9lgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_L8FgPEeSTYp88fJMr7g" name="addNote" specification="_CQG8oFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_L8VgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR_L8lgPEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR_L81gPEeSTYp88fJMr7g" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR_L9FgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {&#xD;
			return -1;&#xD;
		}&#xD;
&#xD;
		int duration = (int) Math.round(note.getDuration()&#xD;
				* _ticksPerDefaultNote);&#xD;
		if ('Z' == note.getName()) {&#xD;
			// Rest - just return end tick count&#xD;
			return start + duration;&#xD;
		}&#xD;
&#xD;
		int key = 60; // start at middle C&#xD;
		key += note.getOctave() * 12;&#xD;
		key += _offsets[note.getName() - 'A'];&#xD;
		key += note.getAccidental();&#xD;
&#xD;
		ShortMessage on;&#xD;
		ShortMessage off;&#xD;
		try {&#xD;
			on = new ShortMessage();&#xD;
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);&#xD;
			off = new ShortMessage();&#xD;
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note&#xD;
					+ &quot;, &quot; + start + &quot;).&quot;);&#xD;
			// e.printStackTrace();&#xD;
			return start;&#xD;
		}&#xD;
&#xD;
		_track.add(new MidiEvent(on, start));&#xD;
		_track.add(new MidiEvent(off, start + duration));&#xD;
		return start + duration;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_L9VgPEeSTYp88fJMr7g" name="play" specification="_CQG8pVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_L9lgPEeSTYp88fJMr7g" name="statusCmd" type="_CMMF8FgPEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_CR_L91gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CR_L-FgPEeSTYp88fJMr7g" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			_sequencer.open();&#xD;
			_synthesizer.open();&#xD;
&#xD;
			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());&#xD;
&#xD;
			// Specify the sequence to play, and the tempo to play it at&#xD;
			_sequencer.setSequence(_sequence);&#xD;
			_sequencer.setTempoInBPM(_bpm);&#xD;
&#xD;
			// Let us know when it is done playing&#xD;
			_sequencer.addMetaEventListener(new MetaEventListener() {&#xD;
				public void meta(MetaMessage m) {&#xD;
					// A message of this type is automatically sent&#xD;
					// when we reach the end of the track&#xD;
					if (m.getType() == END_OF_TRACK) {&#xD;
						System.out.println(&quot;Finished Playing&quot;);&#xD;
						stop();&#xD;
						statusCmd.finished();&#xD;
					}&#xD;
				}&#xD;
			});&#xD;
&#xD;
			// And start playing now.&#xD;
			_sequencer.start();&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Unable to play sequence.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_L-VgPEeSTYp88fJMr7g" name="stop" specification="_CMOiMlgPEeSTYp88fJMr7g">
            <language>java</language>
            <body>_sequencer.close();&#xD;
		_synthesizer.close();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_L-lgPEeSTYp88fJMr7g" name="getTicksPerDefaultNote" specification="_CMPJQFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_L-1gPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_L_FgPEeSTYp88fJMr7g" name="setTicksPerDefaultNote" specification="_CMPJQlgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_L_VgPEeSTYp88fJMr7g" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_L_lgPEeSTYp88fJMr7g" name="getTempo" specification="_CMPJRFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_L_1gPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_MAFgPEeSTYp88fJMr7g" name="setTempo" specification="_CMPwUVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_MAVgPEeSTYp88fJMr7g" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_MAlgPEeSTYp88fJMr7g" name="getTicksPerQuarterNote" specification="_CMPwU1gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_MA1gPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CMN7IFgPEeSTYp88fJMr7g" name="SequencePlayer" method="_CR-k61gPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CMN7I1gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CMN7JFgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSIV8lgPEeSTYp88fJMr7g">
              <body>Create a new SequencePlayer to create and play music.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMN7IVgPEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CMN7IlgPEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CMN7JVgPEeSTYp88fJMr7g" type="_CMMtAFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CMN7JlgPEeSTYp88fJMr7g" name="init" method="_CR-k71gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI88FgPEeSTYp88fJMr7g">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument&#xD;
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to &#xD;
	 * initialize the player upon instantiation and can be called again to reinitialize the &#xD;
	 * SequencePlayer.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument&#xD;
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMN7J1gPEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CMOiMFgPEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CMOiMVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMOiMlgPEeSTYp88fJMr7g" name="stop" method="_CR_L-VgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI89FgPEeSTYp88fJMr7g">
              <body>Stop playing music and close resources.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_CMPJQFgPEeSTYp88fJMr7g" name="getTicksPerDefaultNote" method="_CR_L-lgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI89VgPEeSTYp88fJMr7g">
              <body>Accessor to get the current ticks per default note&#xD;
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMPJQVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMPJQlgPEeSTYp88fJMr7g" name="setTicksPerDefaultNote" method="_CR_L_FgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI89lgPEeSTYp88fJMr7g">
              <body>Accessor to set the current ticks per default note&#xD;
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMPJQ1gPEeSTYp88fJMr7g" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMPJRFgPEeSTYp88fJMr7g" name="getTempo" method="_CR_L_lgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI891gPEeSTYp88fJMr7g">
              <body>Accessor for the current tempo&#xD;
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMPwUFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMPwUVgPEeSTYp88fJMr7g" name="setTempo" method="_CR_MAFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI8-FgPEeSTYp88fJMr7g">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,&#xD;
	 * the last tempo set will be used for the whole sequence.&#xD;
	 * &#xD;
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMPwUlgPEeSTYp88fJMr7g" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMPwU1gPEeSTYp88fJMr7g" name="getTicksPerQuarterNote" method="_CR_MAlgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI8-VgPEeSTYp88fJMr7g">
              <body>Accessor for the current number of ticks per quarter note.&#xD;
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMPwVFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQFugFgPEeSTYp88fJMr7g" name="addNote" method="_CR-k81gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI88VgPEeSTYp88fJMr7g">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_CQFugVgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQFuglgPEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQGVkFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQG8oFgPEeSTYp88fJMr7g" name="addNote" method="_CR_L8FgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI88lgPEeSTYp88fJMr7g">
              <body>Add a note to the MIDI sequence.&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @param velocity - the volume (0-127)&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_CQG8oVgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQG8olgPEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQG8o1gPEeSTYp88fJMr7g" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQG8pFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQG8pVgPEeSTYp88fJMr7g" name="play" method="_CR_L9VgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI881gPEeSTYp88fJMr7g">
              <body>Play the created Sequence.&#xD;
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CQG8plgPEeSTYp88fJMr7g" name="statusCmd" type="_CMMF8FgPEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_CQG8p1gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CQG8qFgPEeSTYp88fJMr7g" key="final"/>
              </eAnnotations>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CMSzoFgPEeSTYp88fJMr7g" name="SequencePlayer2">
          <ownedComment xmi:id="_CSI8-lgPEeSTYp88fJMr7g">
            <body>Sequence Player to create and play MIDI music sequences.&#xD;
Differs from SequencePlayer because it has no play() method.   Instead, this class has &#xD;
a factory method that creates an SequencePlayer2.IPlayable object that can be individually &#xD;
and asynchronously started and stopped.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRdAcFgPEeSTYp88fJMr7g" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRdAcVgPEeSTYp88fJMr7g" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRdAclgPEeSTYp88fJMr7g" name="_sequence" visibility="private" type="_CQ9RM1gPEeSTYp88fJMr7g" association="_CSdtEVgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRdngVgPEeSTYp88fJMr7g" name="_track" visibility="private" type="_CQ94QVgPEeSTYp88fJMr7g" association="_CSeUIVgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRdng1gPEeSTYp88fJMr7g" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CReOkVgPEeSTYp88fJMr7g" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CReOk1gPEeSTYp88fJMr7g" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRpNsFgPEeSTYp88fJMr7g" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRp0wFgPEeSTYp88fJMr7g" name="_offsets" isLeaf="true" isStatic="true" isReadOnly="true">
            <eAnnotations xmi:id="_CRp0wVgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CRp0wlgPEeSTYp88fJMr7g" key="ConstantWithGetter"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CRp0w1gPEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRp0xVgPEeSTYp88fJMr7g" value="{ // add these amounts to the base value&#xD;&#xA;&#x9;// A   B  C  D  E  F  G&#xD;&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_zAFgPEeSTYp88fJMr7g" name="SequencePlayer2" specification="_CMUo0FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_zAVgPEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR_zAlgPEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR_zA1gPEeSTYp88fJMr7g" type="_CMSzoFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_zBFgPEeSTYp88fJMr7g" name="init" specification="_CMVP4lgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_zBVgPEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR_zBlgPEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR_zB1gPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;&#xD;
		_instrument = instrument;&#xD;
		_bpm = 0;&#xD;
		_ticksPerDefaultNote = _ticksPerQuarterNote;&#xD;
&#xD;
		_track = null;&#xD;
&#xD;
		try {&#xD;
&#xD;
			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);&#xD;
			_track = _sequence.createTrack();&#xD;
&#xD;
			ShortMessage sm = new ShortMessage();&#xD;
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);&#xD;
			_track.add(new MidiEvent(sm, 0));&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI data.&quot;);&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_zCFgPEeSTYp88fJMr7g" name="addNote" specification="_CQIx0FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_zCVgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR_zClgPEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR_zC1gPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_zDFgPEeSTYp88fJMr7g" name="addNote" specification="_CQJY4VgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_zDVgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CR_zDlgPEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR_zD1gPEeSTYp88fJMr7g" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CR_zEFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {&#xD;
			return -1;&#xD;
		}&#xD;
&#xD;
		int duration = (int) Math.round(note.getDuration()&#xD;
				* _ticksPerDefaultNote);&#xD;
		if ('Z' == note.getName()) {&#xD;
			// Rest - just return end tick count&#xD;
			return start + duration;&#xD;
		}&#xD;
&#xD;
		int key = 60; // start at middle C&#xD;
		key += note.getOctave() * 12;&#xD;
		key += _offsets[note.getName() - 'A'];&#xD;
		key += note.getAccidental();&#xD;
&#xD;
		ShortMessage on;&#xD;
		ShortMessage off;&#xD;
		try {&#xD;
			on = new ShortMessage();&#xD;
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);&#xD;
			off = new ShortMessage();&#xD;
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note&#xD;
					+ &quot;, &quot; + start + &quot;).&quot;);&#xD;
			// e.printStackTrace();&#xD;
			return start;&#xD;
		}&#xD;
&#xD;
		_track.add(new MidiEvent(on, start));&#xD;
		_track.add(new MidiEvent(off, start + duration));&#xD;
		return start + duration;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_zEVgPEeSTYp88fJMr7g" name="makePlayable" specification="_CQJY5lgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_zElgPEeSTYp88fJMr7g" name="statusCmd" type="_CMMF8FgPEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_CR_zE1gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CR_zFFgPEeSTYp88fJMr7g" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_CR_zFVgPEeSTYp88fJMr7g" type="_CMTasFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
			final Sequencer _sequencer = MidiSystem.getSequencer(); // MIDI Sequencer object&#xD;
			final Synthesizer _synthesizer = MidiSystem.getSynthesizer(); // MIDI synthesizer object&#xD;
&#xD;
			final IPlayable playable = new IPlayable() {&#xD;
&#xD;
				@Override&#xD;
				public void start() {&#xD;
					_sequencer.start();&#xD;
				}&#xD;
&#xD;
				@Override&#xD;
				public void stop() {&#xD;
					_sequencer.close();&#xD;
					_synthesizer.close();&#xD;
				}&#xD;
			};&#xD;
&#xD;
			_sequencer.open();&#xD;
			_synthesizer.open();&#xD;
&#xD;
			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());&#xD;
&#xD;
			// Specify the sequence to play, and the tempo to play it at&#xD;
			_sequencer.setSequence(_sequence);&#xD;
			_sequencer.setTempoInBPM(_bpm);&#xD;
&#xD;
			// Let us know when it is done playing&#xD;
			_sequencer.addMetaEventListener(new MetaEventListener() {&#xD;
				public void meta(MetaMessage m) {&#xD;
					// A message of this type is automatically sent&#xD;
					// when we reach the end of the track&#xD;
					if (m.getType() == END_OF_TRACK) {&#xD;
						System.out&#xD;
								.println(&quot;SequencePlayer2.play(): End of Track&quot;);&#xD;
						playable.stop();&#xD;
						statusCmd.finished();&#xD;
					} else&#xD;
						System.out.println(&quot;Message type received: &quot;&#xD;
								+ m.getType());&#xD;
				}&#xD;
			});&#xD;
&#xD;
			return playable;&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Unable to play sequence.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		return IPlayable.NULL;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_zFlgPEeSTYp88fJMr7g" name="getTicksPerDefaultNote" specification="_CMV28FgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_zF1gPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CR_zGFgPEeSTYp88fJMr7g" name="setTicksPerDefaultNote" specification="_CMWeAVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CR_zGVgPEeSTYp88fJMr7g" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSAaEFgPEeSTYp88fJMr7g" name="getTempo" specification="_CMWeA1gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSAaEVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSAaElgPEeSTYp88fJMr7g" name="setTempo" specification="_CMWeBVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSAaE1gPEeSTYp88fJMr7g" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSAaFFgPEeSTYp88fJMr7g" name="getTicksPerQuarterNote" specification="_CMXFEVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSAaFVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CMUo0FgPEeSTYp88fJMr7g" name="SequencePlayer2" method="_CR_zAFgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CMUo01gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CMVP4FgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSI8_lgPEeSTYp88fJMr7g">
              <body>Create a new SequencePlayer to create and play music.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMUo0VgPEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CMUo0lgPEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CMVP4VgPEeSTYp88fJMr7g" type="_CMSzoFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CMVP4lgPEeSTYp88fJMr7g" name="init" method="_CR_zBFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI8_1gPEeSTYp88fJMr7g">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument&#xD;
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to &#xD;
	 * initialize the player upon instantiation and can be called again to reinitialize the &#xD;
	 * SequencePlayer.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument&#xD;
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMVP41gPEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CMVP5FgPEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CMVP5VgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMV28FgPEeSTYp88fJMr7g" name="getTicksPerDefaultNote" method="_CR_zFlgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSJkAFgPEeSTYp88fJMr7g">
              <body>Accessor to get the current ticks per default note&#xD;
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMWeAFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMWeAVgPEeSTYp88fJMr7g" name="setTicksPerDefaultNote" method="_CR_zGFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSJkAVgPEeSTYp88fJMr7g">
              <body>Accessor to set the current ticks per default note&#xD;
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMWeAlgPEeSTYp88fJMr7g" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMWeA1gPEeSTYp88fJMr7g" name="getTempo" method="_CSAaEFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSJkAlgPEeSTYp88fJMr7g">
              <body>Accessor for the current tempo&#xD;
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMWeBFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMWeBVgPEeSTYp88fJMr7g" name="setTempo" method="_CSAaElgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSJkA1gPEeSTYp88fJMr7g">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,&#xD;
	 * the last tempo set will be used for the whole sequence.&#xD;
	 * &#xD;
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMXFEFgPEeSTYp88fJMr7g" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMXFEVgPEeSTYp88fJMr7g" name="getTicksPerQuarterNote" method="_CSAaFFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSJkBFgPEeSTYp88fJMr7g">
              <body>Accessor for the current number of ticks per quarter note.&#xD;
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMXFElgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQIx0FgPEeSTYp88fJMr7g" name="addNote" method="_CR_zCFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI9AFgPEeSTYp88fJMr7g">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_CQIx0VgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQIx0lgPEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQJY4FgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQJY4VgPEeSTYp88fJMr7g" name="addNote" method="_CR_zDFgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI9AVgPEeSTYp88fJMr7g">
              <body>Add a note to the MIDI sequence.&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @param velocity - the volume (0-127)&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_CQJY4lgPEeSTYp88fJMr7g" name="note" type="_CL8OUFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQJY41gPEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQJY5FgPEeSTYp88fJMr7g" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQJY5VgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CQJY5lgPEeSTYp88fJMr7g" name="makePlayable" method="_CR_zEVgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSI9AlgPEeSTYp88fJMr7g">
              <body>Factory method for an IPlayable object that can play the currently programmed music sequence.&#xD;
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.&#xD;
	 * @return An IPlayable object associated with the currently programmed music sequence.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CQJY51gPEeSTYp88fJMr7g" name="statusCmd" type="_CMMF8FgPEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_CQJ_8VgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CQJ_8lgPEeSTYp88fJMr7g" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_CQJ_8FgPEeSTYp88fJMr7g" type="_CMTasFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Interface" xmi:id="_CMTasFgPEeSTYp88fJMr7g" name="IPlayable">
            <eAnnotations xmi:id="_CMTasVgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CMTaslgPEeSTYp88fJMr7g" key="static"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSI8-1gPEeSTYp88fJMr7g">
              <body>Interface  that represents a playable entity.&#xD;
	 * @author swong&#xD;
	 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_CMUBwFgPEeSTYp88fJMr7g" name="NULL" isLeaf="true" isStatic="true" type="_CMTasFgPEeSTYp88fJMr7g" isReadOnly="true" association="_CSQRs1gPEeSTYp88fJMr7g">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CMUBwVgPEeSTYp88fJMr7g" value="new IPlayable() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void start() {&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void stop() {&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_CMTas1gPEeSTYp88fJMr7g" name="start">
              <ownedComment xmi:id="_CSI8_FgPEeSTYp88fJMr7g">
                <body>Starts the sequencer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_CMTatFgPEeSTYp88fJMr7g" name="stop">
              <ownedComment xmi:id="_CSI8_VgPEeSTYp88fJMr7g">
                <body>Stops the sequencer and synthesizer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSQRsFgPEeSTYp88fJMr7g" name="" memberEnd="_CSQRsVgPEeSTYp88fJMr7g _CMMF8lgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSQRsVgPEeSTYp88fJMr7g" name="" type="_CMMF8FgPEeSTYp88fJMr7g" association="_CSQRsFgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSQRs1gPEeSTYp88fJMr7g" name="" memberEnd="_CSQRtFgPEeSTYp88fJMr7g _CMUBwFgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSQRtFgPEeSTYp88fJMr7g" name="" type="_CMTasFgPEeSTYp88fJMr7g" association="_CSQRs1gPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSb35FgPEeSTYp88fJMr7g" name="" memberEnd="_CSb35VgPEeSTYp88fJMr7g _CRakMFgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSb35VgPEeSTYp88fJMr7g" name="" type="_CMMtAFgPEeSTYp88fJMr7g" association="_CSb35FgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSce8VgPEeSTYp88fJMr7g" name="" memberEnd="_CSce8lgPEeSTYp88fJMr7g _CRakMlgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSce8lgPEeSTYp88fJMr7g" name="" type="_CMMtAFgPEeSTYp88fJMr7g" association="_CSce8VgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSdGAVgPEeSTYp88fJMr7g" name="" memberEnd="_CSdGAlgPEeSTYp88fJMr7g _CRbyU1gPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSdGAlgPEeSTYp88fJMr7g" name="" type="_CMMtAFgPEeSTYp88fJMr7g" association="_CSdGAVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSdGBFgPEeSTYp88fJMr7g" name="" memberEnd="_CSdGBVgPEeSTYp88fJMr7g _CRcZYFgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSdGBVgPEeSTYp88fJMr7g" name="" type="_CMMtAFgPEeSTYp88fJMr7g" association="_CSdGBFgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSdtEVgPEeSTYp88fJMr7g" name="" memberEnd="_CSdtElgPEeSTYp88fJMr7g _CRdAclgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSdtElgPEeSTYp88fJMr7g" name="" type="_CMSzoFgPEeSTYp88fJMr7g" association="_CSdtEVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSeUIVgPEeSTYp88fJMr7g" name="" memberEnd="_CSeUIlgPEeSTYp88fJMr7g _CRdngVgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSeUIlgPEeSTYp88fJMr7g" name="" type="_CMSzoFgPEeSTYp88fJMr7g" association="_CSeUIVgPEeSTYp88fJMr7g"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CJbs4VgPEeSTYp88fJMr7g" name="token">
        <packagedElement xmi:type="uml:Package" xmi:id="_CJbs4lgPEeSTYp88fJMr7g" name="tokenizer">
          <packagedElement xmi:type="uml:Class" xmi:id="_CMj5YFgPEeSTYp88fJMr7g" name="ABCTokenizer">
            <ownedComment xmi:id="_CSKLEFgPEeSTYp88fJMr7g">
              <body>Tokenizer for the abc music language. getNextToken() returns next Token in&#xD;
stream. Does not recognize all possible language constructs and symbols&#xD;
(returned as &quot;?&quot; token).  Tokens are the atomic psemantic pieces of a language,&#xD;
such as Note, repeat start, measure, chord, etc.   The token ids (names) returned are: &lt;br/>&#xD;
 &lt;br/>&#xD;
 EOF - end of file&lt;br/>&#xD;
 &quot;|:&quot; - repeat start&lt;br/>&#xD;
 &quot;:|&quot; - repeat end&lt;br/>&#xD;
 &quot;|1&quot; - first repeat start&lt;br/>&#xD;
 &quot;[1&quot; - alternative first repeat start&lt;br/>&#xD;
 &quot;|2&quot; - second repeat start&lt;br/>&#xD;
 &quot;[2&quot; - alternative second repeat start&lt;br/>&#xD;
 &quot;[|&quot; - thick-thin double bar line&lt;br/>&#xD;
 &quot;|]&quot; - thin-thick double bar line&lt;br/>&#xD;
 &quot;:|2&quot; - alternative second repeat start&lt;br/>&#xD;
 &quot;||&quot; - double measure bar&lt;br/>&#xD;
 &quot;::&quot; - short hand for repeat end-start &quot;:||:&quot;&lt;br/>&#xD;
 &quot;|&quot; - Measure bar&lt;br/>&#xD;
 &quot;[&quot;) - Chord start&lt;br/>&#xD;
 &quot;]&quot; - Chord end&lt;br/>&#xD;
 &quot;-&quot; - tie&lt;br/>&#xD;
 &quot;>&quot; - the previous note  is dotted, the next note halved&lt;br/> &#xD;
 &quot;&lt;&quot; - the previous note is halved, the next dotted&lt;br/>&#xD;
 &quot;{&quot; - Grace begin&lt;br/>&#xD;
 &quot;}&quot; - Grace end&lt;br/>&#xD;
 &quot;%&quot; - Comment&lt;br/>&#xD;
 &quot;[Header ID]&quot; - where [Header ID] is a single letter from {ABCDEFGHIKLMNOPQRSTWXZ} &lt;br/> &#xD;
 &quot;Note&quot; - a single note whose lexeme contains the name, accidentals, octave and duration&lt;br/>&#xD;
 &quot;Tuplet&quot; - the lexeme is the number of subsequent Notes comprise this tuplet. &lt;br/>&#xD;
 &quot;Quote&quot; - lexeme is the quoted text &lt;br/>&#xD;
 &quot;?&quot; - unknown language construct. &lt;br/>&#xD;
  &lt;br/>&#xD;
References: &lt;br/>&#xD;
&lt;a href =&#xD;
&quot;http://download.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html&quot;&#xD;
>java.util.regex.Pattern for regex guide&lt;/a>&lt;br/>&#xD;
&lt;a href=&quot;http://asciitable.com/&quot;>ASCII table for codes&lt;/a>&lt;br/>&#xD;
&lt;a href=&quot;http://abcnotation.com/abc2mtex/abc.txt&quot;>abc music standard 1.6&lt;/a></body>
            </ownedComment>
            <generalization xmi:id="_CQPfhFgPEeSTYp88fJMr7g" general="_CM0_IFgPEeSTYp88fJMr7g"/>
            <ownedAttribute xmi:id="_CRrp81gPEeSTYp88fJMr7g" name="keywords1" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_CRsRAVgPEeSTYp88fJMr7g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRrp9FgPEeSTYp88fJMr7g" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CRsRAlgPEeSTYp88fJMr7g" name="keywords2" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_CRuGMFgPEeSTYp88fJMr7g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRsRA1gPEeSTYp88fJMr7g" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CRuGMVgPEeSTYp88fJMr7g" name="keywordsVector" visibility="private" type="_CRF0EFgPEeSTYp88fJMr7g" association="_CSgJVFgPEeSTYp88fJMr7g">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRutQVgPEeSTYp88fJMr7g" value="new Vector&lt;Map&lt;String, String>>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CRutQ1gPEeSTYp88fJMr7g" name="tokFac" visibility="private" type="_CMfA4FgPEeSTYp88fJMr7g" association="_CSgwYVgPEeSTYp88fJMr7g">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRutRFgPEeSTYp88fJMr7g" value="TokenFactory.Singleton"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CRvUUVgPEeSTYp88fJMr7g" name="stack" visibility="private" type="_CQk2sFgPEeSTYp88fJMr7g" association="_CShXcVgPEeSTYp88fJMr7g">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRv7YVgPEeSTYp88fJMr7g" value="new Stack&lt;Token>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CRwicVgPEeSTYp88fJMr7g" name="ACCIDENTALS" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRwiclgPEeSTYp88fJMr7g" value="&quot;_=^&quot;"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_CQO4cFgPEeSTYp88fJMr7g" client="_CMj5YFgPEeSTYp88fJMr7g" supplier="_CMqAAlgPEeSTYp88fJMr7g" contract="_CMqAAlgPEeSTYp88fJMr7g"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSDdYFgPEeSTYp88fJMr7g" name="ABCTokenizer" specification="_CMlHgFgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_CSDdYVgPEeSTYp88fJMr7g" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CSDdYlgPEeSTYp88fJMr7g" type="_CMj5YFgPEeSTYp88fJMr7g" direction="return"/>
              <language>java</language>
              <body>super(inputFileName);&#xD;
&#xD;
		// note: &quot;\\7C&quot; => &quot;|&quot;, &quot;\\x5B&quot; => &quot;[&quot;, &quot;\\x5D&quot; => &quot;]&quot;&#xD;
		// &quot;\\x7B&quot; => &quot;{&quot;,  &quot;\\x7D&quot; => &quot;}&quot;&#xD;
&#xD;
		// load the regex->keyword mapping&#xD;
		keywords1.put(&quot;\\x7C:&quot;, &quot;|:&quot;); // repeat start&#xD;
		keywords1.put(&quot;:\\x7C&quot;, &quot;:|&quot;); // repeat end&#xD;
		keywords1.put(&quot;\\x7C1&quot;, &quot;|1&quot;); // first repeat start&#xD;
		keywords1.put(&quot;\\x5B1&quot;, &quot;[1&quot;); // alternative first repeat start&#xD;
		keywords1.put(&quot;\\x7C2&quot;, &quot;|2&quot;); // second repeat start&#xD;
		keywords1.put(&quot;\\x5B2&quot;, &quot;[2&quot;); // alternative second repeat start&#xD;
		keywords1.put(&quot;\\x5B\\7C&quot;, &quot;[|&quot;); // thick-thin double bar line&#xD;
		keywords1.put(&quot;\\7C\\x5D&quot;, &quot;|]&quot;); // thin-thick double bar line&#xD;
		keywords1.put(&quot;:\\x7C2&quot;, &quot;:|2&quot;); // alternative second repeat start&#xD;
		keywords1.put(&quot;\\x7C\\x7C&quot;, &quot;||&quot;); // double measure bar&#xD;
		keywords1.put(&quot;::&quot;, &quot;::&quot;); // short hand for repeat end-start &quot;:||:&quot;&#xD;
&#xD;
		// Should these be separated out into a different map because order of&#xD;
		// search is important?&#xD;
		keywords2.put(&quot;\\x7C&quot;, &quot;|&quot;); // Measure bar&#xD;
		keywords2.put(&quot;\\x5B&quot;, &quot;[&quot;); // Chord start&#xD;
		keywords2.put(&quot;\\x5D&quot;, &quot;]&quot;); // Chord end&#xD;
		keywords2.put(&quot;-&quot;, &quot;-&quot;); // tie&#xD;
		keywords2.put(&quot;>&quot;, &quot;>&quot;); // the previous note  is dotted, the next note halved &#xD;
		keywords2.put(&quot;&lt;&quot;, &quot;&lt;&quot;); // the previous note is halved, the next dotted&#xD;
		keywords2.put(&quot;\\x7B&quot;, &quot;{&quot;); // Grace begin&#xD;
		keywords2.put(&quot;\\x7D&quot;, &quot;}&quot;); // Grace end		&#xD;
&#xD;
		keywordsVector.add(keywords1);&#xD;
		keywordsVector.add(keywords2);&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSDdY1gPEeSTYp88fJMr7g" name="getNextToken" specification="_CMlukFgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_CSDdZFgPEeSTYp88fJMr7g" type="_CMfn81gPEeSTYp88fJMr7g" direction="return"/>
              <language>java</language>
              <body>if (stack.empty())&#xD;
			return makeNextToken();&#xD;
		else&#xD;
			return stack.pop();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSEEcFgPEeSTYp88fJMr7g" name="putBack" specification="_CQPfgVgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_CSEEcVgPEeSTYp88fJMr7g" name="t" type="_CMfn81gPEeSTYp88fJMr7g"/>
              <language>java</language>
              <body>stack.push(t);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSEEclgPEeSTYp88fJMr7g" name="makeNextToken" specification="_CMlukVgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_CSEEc1gPEeSTYp88fJMr7g" type="_CMfn81gPEeSTYp88fJMr7g" direction="return"/>
              <language>java</language>
              <body>String sTok = this.getNextStringToken();&#xD;
		if (null == sTok)&#xD;
			return tokFac.makeToken(&quot;EOF&quot;, &quot;EOF&quot;); // EOF returns as null&#xD;
		if (sTok.equals(&quot;\n&quot;))&#xD;
			return makeNextToken(); // discard bare LF's.&#xD;
&#xD;
		// search for first keywords, pushing extra tokens back into tokenizer's&#xD;
		// stack.&#xD;
		for (Map&lt;String, String> keywords : keywordsVector) {&#xD;
			for (String kw : keywords.keySet()) {&#xD;
				if (keywords.get(kw).equals(sTok))&#xD;
					return tokFac.makeToken(sTok, sTok);&#xD;
				String[] split = sTok.split(kw, -1);&#xD;
				if (split.length > 1) {&#xD;
&#xD;
					for (int i = split.length - 1; i > 0; i--) {&#xD;
						if (!split[i].equals(&quot;&quot;)) {&#xD;
							this.putStringBack(split[i]);&#xD;
						}&#xD;
						this.putStringBack(keywords.get(kw));&#xD;
					}&#xD;
					if (!split[0].equals(&quot;&quot;)) {&#xD;
						this.putStringBack(split[0]);&#xD;
					}&#xD;
					return makeNextToken();&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Find header tokens, which are the whole line.&#xD;
		int idx = sTok.indexOf(&quot;:&quot;);&#xD;
		if (1 == idx) {&#xD;
			String header = sTok;&#xD;
			String next = super.getNextStringToken();&#xD;
			while (!next.equals(&quot;\n&quot;)) {&#xD;
				header += &quot; &quot; + next;&#xD;
				next = this.getNextStringToken();&#xD;
			}&#xD;
			return tokFac&#xD;
					.makeToken(header.substring(0, 1), header.substring(2));&#xD;
		}&#xD;
&#xD;
		// Find comment, which is the rest of the line.&#xD;
		idx = sTok.indexOf(&quot;%&quot;);&#xD;
		if (-1 != idx) {&#xD;
			// Comment in line somewhere&#xD;
			if (0 == idx) { // comment is at beginning of line&#xD;
				String comment = sTok;&#xD;
				String next = super.getNextStringToken();&#xD;
				while (!next.equals(&quot;\n&quot;)) { // get the rest of the line&#xD;
					comment += next;&#xD;
					// get the next string token &#xD;
					next = this.getNextStringToken();&#xD;
				}&#xD;
				return tokFac.makeToken(&quot;%&quot;, comment.substring(1));&#xD;
			} else { // comment is in middle of the line&#xD;
				// push the entire comment, incl. the comment char, back into&#xD;
				// the tokenizer b/c it can't be dealt with yet.&#xD;
				this.putStringBack(sTok.substring(idx));&#xD;
				// push the tokens before the comment back into the tokenizer&#xD;
				// so that they can be then processed when pulled back out.&#xD;
				this.putStringBack(sTok.substring(0, idx));&#xD;
				return makeNextToken(); // Process whatever is in the tokenizer&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Find tuplet&#xD;
		if ('(' == sTok.charAt(0)) {&#xD;
			// Tuplet found&#xD;
			int n = Integer.parseInt(sTok.substring(1, 2)); // get tuplet size&#xD;
			this.putStringBack(sTok.substring(2)); // push rest back into tokenizer&#xD;
			return tokFac.makeToken(&quot;Tuplet&quot;, &quot;&quot; + n);&#xD;
		}&#xD;
&#xD;
		if (Character.isLetter(sTok.charAt(0))&#xD;
				|| ACCIDENTALS.contains(sTok.subSequence(0, 1))) {&#xD;
			// Start of Note string found.&#xD;
			return tokFac.makeToken(&quot;Note&quot;, parseNote(sTok));&#xD;
		}&#xD;
&#xD;
		if ('\&quot;' == sTok.charAt(0)) {&#xD;
			// Quoted string found&#xD;
			return tokFac.makeToken(&quot;Quote&quot;, parseQuote(&quot;&quot;, sTok.substring(1)));&#xD;
		}&#xD;
&#xD;
		if (sTok.equals(&quot;\\&quot;)) {&#xD;
			// abc line break detected.  Ignore.&#xD;
			return makeNextToken();&#xD;
		}&#xD;
&#xD;
		// Unknown token&#xD;
		return tokFac.makeToken(&quot;?&quot;, sTok);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSEEdFgPEeSTYp88fJMr7g" name="parseNote" specification="_CMmVoFgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_CSEEdVgPEeSTYp88fJMr7g" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CSEEdlgPEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>int i = 1;&#xD;
		// look for pre-note name characters&#xD;
		if (!Character.isLetter(sTok.charAt(0))) {&#xD;
			for (; i &lt; sTok.length(); i++) {&#xD;
				if (sTok.charAt(i) != sTok.charAt(0)) {&#xD;
					i++; // move to next char&#xD;
					break; // This assumes that this char is a letter which&#xD;
							// follows the accidentals&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		for (; i &lt; sTok.length(); i++) {&#xD;
			// look for non-post-note name characters.&#xD;
			if (!(Character.isDigit(sTok.charAt(i)) || &quot;,/'&quot;.contains(sTok&#xD;
					.subSequence(i, i + 1)))) {&#xD;
				putStringBack(sTok.substring(i)); // put the rest back in the&#xD;
													// tokenizer.&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		// i = end of note string&#xD;
		return sTok.substring(0, i);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSEEd1gPEeSTYp88fJMr7g" name="parseQuote" specification="_CMmVo1gPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_CSEEeFgPEeSTYp88fJMr7g" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CSEEeVgPEeSTYp88fJMr7g" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CSEEelgPEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = 0; i &lt; sTok.length(); i++) {&#xD;
			if ('\&quot;' == sTok.charAt(i)) {&#xD;
				String rest = sTok.substring(i + 1);&#xD;
				if (!rest.equals(&quot;&quot;)) {&#xD;
					this.putStringBack(rest);&#xD;
				}&#xD;
				return acc;&#xD;
			} else {&#xD;
				acc += sTok.charAt(i);&#xD;
			}&#xD;
		}&#xD;
		acc += &quot; &quot;;&#xD;
		return parseQuote(acc, this.getNextStringToken());&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CMlHgFgPEeSTYp88fJMr7g" name="ABCTokenizer" method="_CSDdYFgPEeSTYp88fJMr7g" raisedException="_CQR7wFgPEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_CMlHglgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CMlHg1gPEeSTYp88fJMr7g" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_CSKLEVgPEeSTYp88fJMr7g">
                <body>Constructor for the class&#xD;
	 * @param inputFileName  File to tokenize&#xD;
	 * @throws FileNotFoundException  When input file could not be loaded.</body>
              </ownedComment>
              <ownedParameter xmi:id="_CMlHgVgPEeSTYp88fJMr7g" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CMlHhFgPEeSTYp88fJMr7g" type="_CMj5YFgPEeSTYp88fJMr7g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CMlukFgPEeSTYp88fJMr7g" name="getNextToken" method="_CSDdY1gPEeSTYp88fJMr7g">
              <ownedComment xmi:id="_CSKLElgPEeSTYp88fJMr7g">
                <body>Return the next token, either from the stream or the last token if it was&#xD;
	 * pushed back</body>
              </ownedComment>
              <ownedParameter xmi:id="_CQPfgFgPEeSTYp88fJMr7g" type="_CMfn81gPEeSTYp88fJMr7g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CMlukVgPEeSTYp88fJMr7g" name="makeNextToken" visibility="private" method="_CSEEclgPEeSTYp88fJMr7g">
              <ownedComment xmi:id="_CSKLFFgPEeSTYp88fJMr7g">
                <body>Parse the strings down from the getNextStringToken further, separating&#xD;
	 * out the abc keywords into tokens.&#xD;
	 * @return The next Token in the stream</body>
              </ownedComment>
              <ownedParameter xmi:id="_CQPfg1gPEeSTYp88fJMr7g" type="_CMfn81gPEeSTYp88fJMr7g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CMmVoFgPEeSTYp88fJMr7g" name="parseNote" visibility="private" method="_CSEEdFgPEeSTYp88fJMr7g">
              <ownedComment xmi:id="_CSKLFVgPEeSTYp88fJMr7g">
                <body>Returns the first note string in the given string.&#xD;
	 * &#xD;
	 * @param sTok  The string to parse&#xD;
	 * @return A String that is the first note in the given string</body>
              </ownedComment>
              <ownedParameter xmi:id="_CMmVoVgPEeSTYp88fJMr7g" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CMmVolgPEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CMmVo1gPEeSTYp88fJMr7g" name="parseQuote" visibility="private" method="_CSEEd1gPEeSTYp88fJMr7g">
              <ownedComment xmi:id="_CSKLFlgPEeSTYp88fJMr7g">
                <body>Returns the rest of a string, incl. spaces until the next double quote&#xD;
	 * @param acc  Accumulated result string&#xD;
	 * @param sTok the current string token&#xD;
	 * @return the full quoted string</body>
              </ownedComment>
              <ownedParameter xmi:id="_CMm8sFgPEeSTYp88fJMr7g" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CMm8sVgPEeSTYp88fJMr7g" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CMm8slgPEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CQPfgVgPEeSTYp88fJMr7g" name="putBack" method="_CSEEcFgPEeSTYp88fJMr7g">
              <ownedComment xmi:id="_CSKLE1gPEeSTYp88fJMr7g">
                <body>*	 Push token back into the stream&#xD;
	 * @param t the Token you need to put back in the stream.</body>
              </ownedComment>
              <ownedParameter xmi:id="_CQPfglgPEeSTYp88fJMr7g" name="t" type="_CMfn81gPEeSTYp88fJMr7g"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CMpY8FgPEeSTYp88fJMr7g" name="IStringTokenizer">
            <ownedComment xmi:id="_CSKLF1gPEeSTYp88fJMr7g">
              <body>Tokenizer that only returns string tokens.  This is a specialization of ITokenizer for strings.&#xD;
&#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedOperation xmi:id="_CMpY8VgPEeSTYp88fJMr7g" name="getNextStringToken" isAbstract="true">
              <ownedComment xmi:id="_CSKLGFgPEeSTYp88fJMr7g">
                <body>Return the next token.&#xD;
	 * @return The next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_CMpY8lgPEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CMqAAFgPEeSTYp88fJMr7g" name="putStringBack" isAbstract="true">
              <ownedComment xmi:id="_CSKLGVgPEeSTYp88fJMr7g">
                <body>Put the previously consumed token back into the token stream. Can only&#xD;
	 * put back one token.&#xD;
	 * @param t the token to push back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_CMqAAVgPEeSTYp88fJMr7g" name="t">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CMqAAlgPEeSTYp88fJMr7g" name="ITokenizer" isAbstract="true">
            <ownedComment xmi:id="_CSKLGlgPEeSTYp88fJMr7g">
              <body>Extract and return an appropriate Token from some given source.</body>
            </ownedComment>
            <ownedOperation xmi:id="_CMqnEVgPEeSTYp88fJMr7g" name="getNextToken" isAbstract="true">
              <ownedComment xmi:id="_CSKLG1gPEeSTYp88fJMr7g">
                <body>Return the next token.&#xD;
	 * @return the next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_CQQtoFgPEeSTYp88fJMr7g" type="_CMfn81gPEeSTYp88fJMr7g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CQRUsFgPEeSTYp88fJMr7g" name="putBack" isAbstract="true">
              <ownedComment xmi:id="_CSKLHFgPEeSTYp88fJMr7g">
                <body>Put the previously consumed token back into the token stream. &#xD;
	 * @param t the token to put back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_CQRUsVgPEeSTYp88fJMr7g" name="t" type="_CMfn81gPEeSTYp88fJMr7g"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CM0_IFgPEeSTYp88fJMr7g" name="StringTokenizer">
            <ownedComment xmi:id="_CSKLHVgPEeSTYp88fJMr7g">
              <body>Special tokenizer that converts a stream of various types of tokens from  StreamTokenizer and converts them into a stream of strings. &#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_CRxJgFgPEeSTYp88fJMr7g" name="stack" visibility="private" type="_CQk2sFgPEeSTYp88fJMr7g" association="_CShXdFgPEeSTYp88fJMr7g">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRxwkVgPEeSTYp88fJMr7g" value="new Stack&lt;String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CRyXoFgPEeSTYp88fJMr7g" name="_st" visibility="protected" type="_CQTw8VgPEeSTYp88fJMr7g" association="_CSh-gVgPEeSTYp88fJMr7g"/>
            <ownedAttribute xmi:id="_CRyXolgPEeSTYp88fJMr7g" name="_fileReader" visibility="protected" type="_CQTJ4lgPEeSTYp88fJMr7g" association="_CSilkVgPEeSTYp88fJMr7g"/>
            <interfaceRealization xmi:id="_CQUYAFgPEeSTYp88fJMr7g" client="_CM0_IFgPEeSTYp88fJMr7g" supplier="_CMpY8FgPEeSTYp88fJMr7g" contract="_CMpY8FgPEeSTYp88fJMr7g"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSEEe1gPEeSTYp88fJMr7g" name="StringTokenizer" specification="_CM1mMFgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_CSEEfFgPEeSTYp88fJMr7g" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CSEEfVgPEeSTYp88fJMr7g" type="_CM0_IFgPEeSTYp88fJMr7g" direction="return"/>
              <language>java</language>
              <body>// Create an input text file object:&#xD;
&#xD;
		//_st = new StreamTokenizer(new BufferedReader(url.openStream()));&#xD;
		//_fileReader = new FileReader(inputFileName);&#xD;
		try {&#xD;
			InputStream is = this.getClass().getResource(inputFileName)&#xD;
					.openStream();&#xD;
&#xD;
			_fileReader = new BufferedReader(new InputStreamReader(is));&#xD;
&#xD;
			//_fileReader = new FileReader(file);&#xD;
		} catch (Exception e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			System.err.println(&quot;StringTokenizer error opening file: &quot; + e);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		// Create a Streamtokenizer to parse the input text file:&#xD;
		_st = new StreamTokenizer(_fileReader);&#xD;
&#xD;
		_st.eolIsSignificant(true);&#xD;
		_st.wordChars(33, 125);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSEEflgPEeSTYp88fJMr7g" name="getNextStringToken" specification="_CM2NQ1gPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_CSEEf1gPEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (stack.empty())&#xD;
			return makeNextStringToken();&#xD;
		else&#xD;
			return stack.pop();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSEEgFgPEeSTYp88fJMr7g" name="putStringBack" specification="_CM20UlgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_CSEEgVgPEeSTYp88fJMr7g" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>stack.push(str);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSErgFgPEeSTYp88fJMr7g" name="makeNextStringToken" specification="_CM3bYlgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_CSErgVgPEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>try {&#xD;
			int t = _st.nextToken();&#xD;
			if (StreamTokenizer.TT_EOL == t)&#xD;
				return &quot;\n&quot;;&#xD;
			if (StreamTokenizer.TT_EOF != t) {&#xD;
				switch (_st.ttype) {&#xD;
&#xD;
				case StreamTokenizer.TT_WORD: {&#xD;
					return _st.sval;&#xD;
				}&#xD;
&#xD;
				case StreamTokenizer.TT_NUMBER: {&#xD;
					// check if number is an integer&#xD;
					if (Math.floor(_st.nval) == _st.nval) {&#xD;
						return &quot;&quot; + (int) _st.nval;&#xD;
					} else {&#xD;
						return &quot;&quot; + _st.nval;&#xD;
					}&#xD;
				}&#xD;
&#xD;
				default:&#xD;
					throw new IllegalArgumentException(&#xD;
							&quot;Tokenizer1: Illegal token type = &quot; + _st.ttype);&#xD;
				}&#xD;
			} else {&#xD;
				_fileReader.close();&#xD;
				System.err.println(&quot;EOF Token&quot;);&#xD;
				return null;&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			System.out.println(&quot;StringTokenizer.makeNextToken(): Exception = &quot;&#xD;
					+ e.getMessage());&#xD;
			return null;&#xD;
		}&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CM1mMFgPEeSTYp88fJMr7g" name="StringTokenizer" method="_CSEEe1gPEeSTYp88fJMr7g" raisedException="_CQR7wFgPEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_CM2NQFgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CM2NQVgPEeSTYp88fJMr7g" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_CSKLHlgPEeSTYp88fJMr7g">
                <body>Initialize _st to read from a input Reader file with the given input file&#xD;
	 * name.&#xD;
	 * &#xD;
	 * @param inputFileName&#xD;
	 *            the name of the input text file&#xD;
	 * @throws FileNotFoundException When the input file could not be opened</body>
              </ownedComment>
              <ownedParameter xmi:id="_CM1mMVgPEeSTYp88fJMr7g" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CM2NQlgPEeSTYp88fJMr7g" type="_CM0_IFgPEeSTYp88fJMr7g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CM2NQ1gPEeSTYp88fJMr7g" name="getNextStringToken" method="_CSEEflgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_CM2NRFgPEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CM20UlgPEeSTYp88fJMr7g" name="putStringBack" method="_CSEEgFgPEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_CM20U1gPEeSTYp88fJMr7g" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CM3bYlgPEeSTYp88fJMr7g" name="makeNextStringToken" visibility="private" method="_CSErgFgPEeSTYp88fJMr7g">
              <ownedComment xmi:id="_CSKyIFgPEeSTYp88fJMr7g">
                <body>Returns the next string in the stream.  &#xD;
	 * Returns LF (&quot;\n&quot;) at end of line.  &#xD;
	 * Returns null for EOF or error&#xD;
	 * &#xD;
	 * @return A string token or null if EOF</body>
              </ownedComment>
              <ownedParameter xmi:id="_CM3bY1gPEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CSgJVFgPEeSTYp88fJMr7g" name="" memberEnd="_CSgJVVgPEeSTYp88fJMr7g _CRuGMVgPEeSTYp88fJMr7g">
            <ownedEnd xmi:id="_CSgJVVgPEeSTYp88fJMr7g" name="" type="_CMj5YFgPEeSTYp88fJMr7g" association="_CSgJVFgPEeSTYp88fJMr7g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CSgwYVgPEeSTYp88fJMr7g" name="" memberEnd="_CSgwYlgPEeSTYp88fJMr7g _CRutQ1gPEeSTYp88fJMr7g">
            <ownedEnd xmi:id="_CSgwYlgPEeSTYp88fJMr7g" name="" type="_CMj5YFgPEeSTYp88fJMr7g" association="_CSgwYVgPEeSTYp88fJMr7g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CShXcVgPEeSTYp88fJMr7g" name="" memberEnd="_CShXclgPEeSTYp88fJMr7g _CRvUUVgPEeSTYp88fJMr7g">
            <ownedEnd xmi:id="_CShXclgPEeSTYp88fJMr7g" name="" type="_CMj5YFgPEeSTYp88fJMr7g" association="_CShXcVgPEeSTYp88fJMr7g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CShXdFgPEeSTYp88fJMr7g" name="" memberEnd="_CShXdVgPEeSTYp88fJMr7g _CRxJgFgPEeSTYp88fJMr7g">
            <ownedEnd xmi:id="_CShXdVgPEeSTYp88fJMr7g" name="" type="_CM0_IFgPEeSTYp88fJMr7g" association="_CShXdFgPEeSTYp88fJMr7g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CSh-gVgPEeSTYp88fJMr7g" name="" memberEnd="_CSh-glgPEeSTYp88fJMr7g _CRyXoFgPEeSTYp88fJMr7g">
            <ownedEnd xmi:id="_CSh-glgPEeSTYp88fJMr7g" name="" type="_CM0_IFgPEeSTYp88fJMr7g" association="_CSh-gVgPEeSTYp88fJMr7g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CSilkVgPEeSTYp88fJMr7g" name="" memberEnd="_CSilklgPEeSTYp88fJMr7g _CRyXolgPEeSTYp88fJMr7g">
            <ownedEnd xmi:id="_CSilklgPEeSTYp88fJMr7g" name="" type="_CM0_IFgPEeSTYp88fJMr7g" association="_CSilkVgPEeSTYp88fJMr7g"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CMZhUFgPEeSTYp88fJMr7g" name="ATokVisitor" isAbstract="true">
          <ownedComment xmi:id="_CSJkBVgPEeSTYp88fJMr7g">
            <body>A visitor to an Token that implements ITokVisitor using a dictionary of commands.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRp0xlgPEeSTYp88fJMr7g" name="defaultCmd" visibility="private" type="_CMeZ0FgPEeSTYp88fJMr7g" association="_CSe7MFgPEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_CRqb0VgPEeSTYp88fJMr7g" name="cmds" visibility="private" type="_CMeZ0FgPEeSTYp88fJMr7g" association="_CSfiQVgPEeSTYp88fJMr7g">
            <qualifier xmi:id="_CRqb1FgPEeSTYp88fJMr7g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRqb0lgPEeSTYp88fJMr7g" value="new Hashtable&lt;String, ITokVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_CQKnAFgPEeSTYp88fJMr7g" client="_CMZhUFgPEeSTYp88fJMr7g" supplier="_CMdLsFgPEeSTYp88fJMr7g" contract="_CMdLsFgPEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSBBIFgPEeSTYp88fJMr7g" name="ATokVisitor" specification="_CMaIYFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSBBIVgPEeSTYp88fJMr7g" type="_CMZhUFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>defaultCmd = new ITokVisitorCmd() {&#xD;
			public Object apply(String idx, Token host, Object... inps) {&#xD;
				throw new IllegalArgumentException(&#xD;
						&quot;ATokVisitor: Unknown token encountered: &quot; + idx);&#xD;
			}&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSBoMFgPEeSTYp88fJMr7g" name="ATokVisitor" specification="_CQLOEFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSBoMVgPEeSTYp88fJMr7g" name="defaultCmd" type="_CMeZ0FgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CSBoMlgPEeSTYp88fJMr7g" type="_CMZhUFgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSBoM1gPEeSTYp88fJMr7g" name="caseAt" specification="_CRBioFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSBoNFgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSBoNVgPEeSTYp88fJMr7g" name="host" type="_CMfn81gPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CSBoNlgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CSBoN1gPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSBoOFgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {&#xD;
			return cmds.get(id).apply(id, host, params);&#xD;
		} else {&#xD;
			return defaultCmd.apply(id, host, params);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSBoOVgPEeSTYp88fJMr7g" name="addCmd" specification="_CQL1IFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSBoOlgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSBoO1gPEeSTYp88fJMr7g" name="cmd" type="_CMeZ0FgPEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>cmds.put(id, cmd);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CMaIYFgPEeSTYp88fJMr7g" name="ATokVisitor" method="_CSBBIFgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CMaIYVgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CMaIYlgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSJkBlgPEeSTYp88fJMr7g">
              <body>Constructor that sets the default cmd to one that throws and IllegalArgumentException&quot; for any unknown tokens.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMaIY1gPEeSTYp88fJMr7g" type="_CMZhUFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CQLOEFgPEeSTYp88fJMr7g" name="ATokVisitor" method="_CSBoMFgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CQLOElgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CQLOE1gPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSJkB1gPEeSTYp88fJMr7g">
              <body>Constructor that sets the default cmd to the given command.&#xD;
	 * @param defaultCmd the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CQLOEVgPEeSTYp88fJMr7g" name="defaultCmd" type="_CMeZ0FgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CQLOFFgPEeSTYp88fJMr7g" type="_CMZhUFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CQL1IFgPEeSTYp88fJMr7g" name="addCmd" method="_CSBoOVgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSJkCFgPEeSTYp88fJMr7g">
              <body>Add a new cmd or replace an existing cmd associated with the given host id.&#xD;
	 * @param id the id of the host to associate with this visitor.&#xD;
	 * @param cmd The command to associate with the given key value.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CQL1IVgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQL1IlgPEeSTYp88fJMr7g" name="cmd" type="_CMeZ0FgPEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CRBioFgPEeSTYp88fJMr7g" name="caseAt" method="_CSBoM1gPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CRBioVgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CRBiolgPEeSTYp88fJMr7g" name="host" type="_CMfn81gPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CRBio1gPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CRCJsVgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CRBipFgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CMdLsFgPEeSTYp88fJMr7g" name="ITokVisitor">
          <ownedComment xmi:id="_CSJkCVgPEeSTYp88fJMr7g">
            <body>Interface for a token visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_CRCwwFgPEeSTYp88fJMr7g" name="caseAt">
            <ownedParameter xmi:id="_CRCwwVgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CRDX0FgPEeSTYp88fJMr7g" name="host" type="_CMfn81gPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CRDX0VgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CRDX1FgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CRDX0lgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CMeZ0FgPEeSTYp88fJMr7g" name="ITokVisitorCmd">
          <ownedComment xmi:id="_CSJkClgPEeSTYp88fJMr7g">
            <body>A command for use in ATokVisitors</body>
          </ownedComment>
          <ownedOperation xmi:id="_CRD-4FgPEeSTYp88fJMr7g" name="apply">
            <ownedParameter xmi:id="_CRD-4VgPEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CRD-4lgPEeSTYp88fJMr7g" name="host" type="_CMfn81gPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CRD-41gPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CRD-5lgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CRD-5FgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CMfA4FgPEeSTYp88fJMr7g" name="ITokenFactory">
          <ownedComment xmi:id="_CSJkC1gPEeSTYp88fJMr7g">
            <body>Abstract factory to produce tokens</body>
          </ownedComment>
          <ownedOperation xmi:id="_CMfn8FgPEeSTYp88fJMr7g" name="makeToken">
            <ownedParameter xmi:id="_CMfn8VgPEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CMfn8lgPEeSTYp88fJMr7g" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQNDQFgPEeSTYp88fJMr7g" type="_CMfn81gPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CMfn81gPEeSTYp88fJMr7g" name="Token">
          <ownedComment xmi:id="_CSJkDFgPEeSTYp88fJMr7g">
            <body>Represents a token in the language.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRrC4FgPEeSTYp88fJMr7g" name="_name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_CRrC4lgPEeSTYp88fJMr7g" name="_lexeme" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSCPQFgPEeSTYp88fJMr7g" name="Token" specification="_CMgPAFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSCPQVgPEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSCPQlgPEeSTYp88fJMr7g" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSCPQ1gPEeSTYp88fJMr7g" type="_CMfn81gPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>_name = name;&#xD;
		_lexeme = lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSCPRFgPEeSTYp88fJMr7g" name="execute" specification="_CREl8VgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSCPRVgPEeSTYp88fJMr7g" name="algo" type="_CMdLsFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CSCPRlgPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CSCPR1gPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSCPSFgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_name, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSCPSVgPEeSTYp88fJMr7g" name="getName" specification="_CMg2EFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSC2UFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _name;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSC2UVgPEeSTYp88fJMr7g" name="getLexeme" specification="_CMg2ElgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSC2UlgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSC2U1gPEeSTYp88fJMr7g" name="toString" specification="_CMg2FFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSC2VFgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;[&quot; + _name + &quot;] &quot; + _lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CMgPAFgPEeSTYp88fJMr7g" name="Token" method="_CSCPQFgPEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_CMgPA1gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CMgPBFgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_CSJkDVgPEeSTYp88fJMr7g">
              <body>Token constructor.&#xD;
	 *&#xD;
	 * @param name The name associated with this token.  This is the id value when it executes its visitors.&#xD;
	 * @param lexeme _lexeme this token is representing.</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMgPAVgPEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CMgPAlgPEeSTYp88fJMr7g" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CMgPBVgPEeSTYp88fJMr7g" type="_CMfn81gPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CMg2EFgPEeSTYp88fJMr7g" name="getName" method="_CSCPSVgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSJkDlgPEeSTYp88fJMr7g">
              <body>Accessor for the name of this token&#xD;
	 * @return The name of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMg2EVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMg2ElgPEeSTYp88fJMr7g" name="getLexeme" method="_CSC2UVgPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSJkD1gPEeSTYp88fJMr7g">
              <body>Accessor for the lexeme of this token&#xD;
	 * @return The lexeme of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMg2E1gPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CMg2FFgPEeSTYp88fJMr7g" name="toString" method="_CSC2U1gPEeSTYp88fJMr7g">
            <ownedComment xmi:id="_CSJkEFgPEeSTYp88fJMr7g">
              <body>Return a string representation of the token: &quot;[name] lexeme&quot;&#xD;
	 *&#xD;
	 * @return string representation</body>
            </ownedComment>
            <ownedParameter xmi:id="_CMg2FVgPEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_CREl8VgPEeSTYp88fJMr7g" name="execute" method="_CSCPRFgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CREl8lgPEeSTYp88fJMr7g" name="algo" type="_CMdLsFgPEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_CREl81gPEeSTYp88fJMr7g" name="params" type="_CQmr4FgPEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CRFNAlgPEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CRFNAFgPEeSTYp88fJMr7g" type="_CQmr4FgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CMiEMFgPEeSTYp88fJMr7g" name="TokenFactory">
          <ownedComment xmi:id="_CSJkEVgPEeSTYp88fJMr7g">
            <body>Concrete factory to create tokens</body>
          </ownedComment>
          <ownedAttribute xmi:id="_CRrp8VgPEeSTYp88fJMr7g" name="Singleton" isLeaf="true" isStatic="true" type="_CMiEMFgPEeSTYp88fJMr7g" isReadOnly="true" association="_CSgJUVgPEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_CRrp8lgPEeSTYp88fJMr7g" value="new TokenFactory()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_CQORYFgPEeSTYp88fJMr7g" client="_CMiEMFgPEeSTYp88fJMr7g" supplier="_CMfA4FgPEeSTYp88fJMr7g" contract="_CMfA4FgPEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CSC2VVgPEeSTYp88fJMr7g" name="makeToken" specification="_CMirRVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CSC2VlgPEeSTYp88fJMr7g" name="name">
              <eAnnotations xmi:id="_CSC2V1gPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CSC2WFgPEeSTYp88fJMr7g" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSC2WVgPEeSTYp88fJMr7g" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CSC2WlgPEeSTYp88fJMr7g" type="_CMfn81gPEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return new Token(name, lexeme);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_CMirQFgPEeSTYp88fJMr7g" name="TokenFactory" visibility="private">
            <eAnnotations xmi:id="_CMirQVgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_CMirQlgPEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_CMirRFgPEeSTYp88fJMr7g" type="_CMiEMFgPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_CMirRVgPEeSTYp88fJMr7g" name="makeToken" method="_CSC2VVgPEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_CMjSUFgPEeSTYp88fJMr7g" name="name">
              <eAnnotations xmi:id="_CMjSUlgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CMjSU1gPEeSTYp88fJMr7g" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CMjSUVgPEeSTYp88fJMr7g" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_CQORYVgPEeSTYp88fJMr7g" type="_CMfn81gPEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSe7MFgPEeSTYp88fJMr7g" name="" memberEnd="_CSe7MVgPEeSTYp88fJMr7g _CRp0xlgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSe7MVgPEeSTYp88fJMr7g" name="" type="_CMZhUFgPEeSTYp88fJMr7g" association="_CSe7MFgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSfiQVgPEeSTYp88fJMr7g" name="" memberEnd="_CSfiQlgPEeSTYp88fJMr7g _CRqb0VgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSfiQlgPEeSTYp88fJMr7g" name="" type="_CMZhUFgPEeSTYp88fJMr7g" association="_CSfiQVgPEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_CSgJUVgPEeSTYp88fJMr7g" name="" memberEnd="_CSgJUlgPEeSTYp88fJMr7g _CRrp8VgPEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_CSgJUlgPEeSTYp88fJMr7g" name="" type="_CMiEMFgPEeSTYp88fJMr7g" association="_CSgJUVgPEeSTYp88fJMr7g"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CJ-fcFgPEeSTYp88fJMr7g" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_CJ-fcVgPEeSTYp88fJMr7g" name="sound">
        <packagedElement xmi:type="uml:Package" xmi:id="_CJ_GgFgPEeSTYp88fJMr7g" name="midi">
          <packagedElement xmi:type="uml:Class" xmi:id="_CQU_EFgPEeSTYp88fJMr7g" name="Instrument"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CQVmIVgPEeSTYp88fJMr7g" name="MidiSystem"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CQWNMVgPEeSTYp88fJMr7g" name="MidiUnavailableException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CQYCYFgPEeSTYp88fJMr7g" name="Synthesizer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CQ9RM1gPEeSTYp88fJMr7g" name="Sequence"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CQ94QVgPEeSTYp88fJMr7g" name="Track"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CQ-fUVgPEeSTYp88fJMr7g" name="Sequencer"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_C8QQ8FgPEeSTYp88fJMr7g" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_C8QQ8VgPEeSTYp88fJMr7g" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_C92MYlgPEeSTYp88fJMr7g" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_C9_9YVgPEeSTYp88fJMr7g" name="TitledBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_C91lUVgPEeSTYp88fJMr7g" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_C92MYFgPEeSTYp88fJMr7g" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_C92zcVgPEeSTYp88fJMr7g" name="JSplitPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_C93agVgPEeSTYp88fJMr7g" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_C93ag1gPEeSTYp88fJMr7g" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_C94BkVgPEeSTYp88fJMr7g" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_C96d0FgPEeSTYp88fJMr7g" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_C9_WUVgPEeSTYp88fJMr7g" name="JTextArea"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_BbDj8FgPEeSTYp88fJMr7g">
      <eAnnotations xmi:id="_BbDj8VgPEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_BbDj8lgPEeSTYp88fJMr7g" base_Package="_BI75MFgPEeSTYp88fJMr7g">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CLka4FgPEeSTYp88fJMr7g" base_Element="_CLjMwFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CLrvolgPEeSTYp88fJMr7g" base_Element="_CLrvoFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CLsWsFgPEeSTYp88fJMr7g" base_Element="_CLrvoFgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CLsWsVgPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CL2HslgPEeSTYp88fJMr7g" base_Element="_CL1goVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CMCU81gPEeSTYp88fJMr7g" base_Element="_CMCU8FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CMEKIlgPEeSTYp88fJMr7g" base_Element="_CMDjEVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CMFYQVgPEeSTYp88fJMr7g" base_Element="_CMExM1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CMFYQlgPEeSTYp88fJMr7g" base_Element="_CMExM1gPEeSTYp88fJMr7g">
    <annotations xmi:id="_CMFYQ1gPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CMirQ1gPEeSTYp88fJMr7g" base_Element="_CMirQFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CMqnEFgPEeSTYp88fJMr7g" base_Element="_CMqAAlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:StyledElement xmi:id="_CMrOIFgPEeSTYp88fJMr7g" base_Element="_CMqnEVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CM2NRVgPEeSTYp88fJMr7g" base_Element="_CM2NQ1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CM20UFgPEeSTYp88fJMr7g" base_Element="_CM2NQ1gPEeSTYp88fJMr7g">
    <annotations xmi:id="_CM20UVgPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CM20VFgPEeSTYp88fJMr7g" base_Element="_CM20UlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CM3bYFgPEeSTYp88fJMr7g" base_Element="_CM20UlgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CM3bYVgPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CM7FwFgPEeSTYp88fJMr7g" base_Element="_CM6esFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CM868FgPEeSTYp88fJMr7g" base_Element="_CM8T41gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CPjjAFgPEeSTYp88fJMr7g" base_Element="_CPi78FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CPre0VgPEeSTYp88fJMr7g" base_Element="_CPre0FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CPsF4VgPEeSTYp88fJMr7g" base_Element="_CPsF4FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CPyzkFgPEeSTYp88fJMr7g" base_Element="_CPyMgFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CPzaolgPEeSTYp88fJMr7g" base_Element="_CPyMgVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CP2d8FgPEeSTYp88fJMr7g" base_Element="_CP124FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CP2d81gPEeSTYp88fJMr7g" base_Element="_CP124VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CP_n4FgPEeSTYp88fJMr7g" base_Element="_CP_A0VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CP_n41gPEeSTYp88fJMr7g" base_Element="_CP_A0lgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQA2AFgPEeSTYp88fJMr7g" base_Element="_CQAO8FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQA2A1gPEeSTYp88fJMr7g" base_Element="_CQAO8VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQBdEFgPEeSTYp88fJMr7g" base_Element="_CQA2BFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQBdElgPEeSTYp88fJMr7g" base_Element="_CQA2BVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQD5VFgPEeSTYp88fJMr7g" base_Element="_CQD5UFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQEgYFgPEeSTYp88fJMr7g" dimensions="1" base_Element="_CQD5UVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:StyledElement xmi:id="_CQRUslgPEeSTYp88fJMr7g" base_Element="_CQRUsFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQRUtFgPEeSTYp88fJMr7g" base_Element="_CQRUs1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQR7wVgPEeSTYp88fJMr7g" base_Element="_CQR7wFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQSi0VgPEeSTYp88fJMr7g" base_Element="_CQSi0FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQSi01gPEeSTYp88fJMr7g" base_Element="_CQSi0lgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQTJ4VgPEeSTYp88fJMr7g" base_Element="_CQTJ4FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQTw8FgPEeSTYp88fJMr7g" base_Element="_CQTJ4lgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQTw8lgPEeSTYp88fJMr7g" base_Element="_CQTw8VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQVmIFgPEeSTYp88fJMr7g" base_Element="_CQU_EFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQWNMFgPEeSTYp88fJMr7g" base_Element="_CQVmIVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQXbUFgPEeSTYp88fJMr7g" base_Element="_CQWNMVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQYpcFgPEeSTYp88fJMr7g" base_Element="_CQYCYFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQldwFgPEeSTYp88fJMr7g" base_Element="_CQk2sFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQmr4VgPEeSTYp88fJMr7g" base_Element="_CQmr4FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQnS8lgPEeSTYp88fJMr7g" base_Element="_CQmr4lgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQnS9FgPEeSTYp88fJMr7g" base_Element="_CQnS8FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQohEVgPEeSTYp88fJMr7g" base_Element="_CQn6AFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQohE1gPEeSTYp88fJMr7g" base_Element="_CQn6AlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CQohFFgPEeSTYp88fJMr7g" base_Element="_CQn6AFgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CQohFVgPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQpvMVgPEeSTYp88fJMr7g" base_Element="_CQpIIFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQpvM1gPEeSTYp88fJMr7g" base_Element="_CQpIIlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CQpvNFgPEeSTYp88fJMr7g" base_Element="_CQpIIFgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CQpvNVgPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQq9UVgPEeSTYp88fJMr7g" base_Element="_CQqWQFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQq9U1gPEeSTYp88fJMr7g" base_Element="_CQqWQlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CQq9VFgPEeSTYp88fJMr7g" base_Element="_CQqWQFgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CQq9VVgPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQuApFgPEeSTYp88fJMr7g" base_Element="_CQuAoFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQuAplgPEeSTYp88fJMr7g" dimensions="1" base_Element="_CQuAolgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CQunsFgPEeSTYp88fJMr7g" base_Element="_CQuAoFgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CQunsVgPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQv10FgPEeSTYp88fJMr7g" base_Element="_CQunslgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQv10lgPEeSTYp88fJMr7g" base_Element="_CQvOwFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQxD8FgPEeSTYp88fJMr7g" base_Element="_CQwc4FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQxD8lgPEeSTYp88fJMr7g" base_Element="_CQwc41gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQxrBVgPEeSTYp88fJMr7g" base_Element="_CQxrAFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQySEVgPEeSTYp88fJMr7g" base_Element="_CQxrA1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQy5JFgPEeSTYp88fJMr7g" base_Element="_CQy5IFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQzgMFgPEeSTYp88fJMr7g" base_Element="_CQy5IlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CQzgMVgPEeSTYp88fJMr7g" base_Element="_CQy5IFgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CQzgMlgPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQ1VZFgPEeSTYp88fJMr7g" base_Element="_CQ1VYFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQ18cFgPEeSTYp88fJMr7g" base_Element="_CQ1VYlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CQ18cVgPEeSTYp88fJMr7g" base_Element="_CQ1VYFgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CQ18clgPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQ3xoVgPEeSTYp88fJMr7g" base_Element="_CQ3KkFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQ4YsVgPEeSTYp88fJMr7g" base_Element="_CQ3KklgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CQ4YslgPEeSTYp88fJMr7g" base_Element="_CQ3KkFgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CQ4Ys1gPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQ6N5FgPEeSTYp88fJMr7g" base_Element="_CQ6N4FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQ608VgPEeSTYp88fJMr7g" base_Element="_CQ6N4lgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CQ608lgPEeSTYp88fJMr7g" base_Element="_CQ6N4FgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CQ6081gPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQ8DEFgPEeSTYp88fJMr7g" base_Element="_CQ7cAFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQ8DElgPEeSTYp88fJMr7g" base_Element="_CQ7cAlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CQ8DE1gPEeSTYp88fJMr7g" base_Element="_CQ7cAFgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CQ8DFFgPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CQ8qJFgPEeSTYp88fJMr7g" base_Element="_CQ8qIFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CQ9RMFgPEeSTYp88fJMr7g" base_Element="_CQ8qIlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CQ9RMVgPEeSTYp88fJMr7g" base_Element="_CQ8qIFgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CQ9RMlgPEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_CQ94QFgPEeSTYp88fJMr7g" base_Element="_CQ9RM1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQ-fUFgPEeSTYp88fJMr7g" base_Element="_CQ94QVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CQ_GYFgPEeSTYp88fJMr7g" base_Element="_CQ-fUVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRCJsFgPEeSTYp88fJMr7g" base_Element="_CRBioFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CRCJslgPEeSTYp88fJMr7g" base_Element="_CRBio1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRDX01gPEeSTYp88fJMr7g" base_Element="_CRCwwFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CRDX1VgPEeSTYp88fJMr7g" base_Element="_CRDX0VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRD-5VgPEeSTYp88fJMr7g" base_Element="_CRD-4FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CREl8FgPEeSTYp88fJMr7g" base_Element="_CRD-41gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRFNAVgPEeSTYp88fJMr7g" base_Element="_CREl8VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CRFNA1gPEeSTYp88fJMr7g" base_Element="_CREl81gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CRGbIFgPEeSTYp88fJMr7g" base_Element="_CRF0EFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRL6sFgPEeSTYp88fJMr7g" base_Element="_CRLToFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRL6slgPEeSTYp88fJMr7g" base_Element="_CRL6sVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRMhwVgPEeSTYp88fJMr7g" base_Element="_CRMhwFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_CRMhwlgPEeSTYp88fJMr7g" base_Element="_CRMhwFgPEeSTYp88fJMr7g">
    <annotations xmi:id="_CRNI0FgPEeSTYp88fJMr7g" name="SuppressWarnings">
      <annotationParameters xmi:id="_CRNI0VgPEeSTYp88fJMr7g" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CSF5qlgPEeSTYp88fJMr7g" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRNv4FgPEeSTYp88fJMr7g" base_Element="_CRNI0lgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRNv4lgPEeSTYp88fJMr7g" base_Element="_CRNv4VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CROW8FgPEeSTYp88fJMr7g" base_Element="_CRNv41gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CROW8lgPEeSTYp88fJMr7g" base_Element="_CROW8VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRO-AVgPEeSTYp88fJMr7g" base_Element="_CRO-AFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRO-BFgPEeSTYp88fJMr7g" base_Element="_CRO-AlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRPlElgPEeSTYp88fJMr7g" base_Element="_CRPlEFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRPlFFgPEeSTYp88fJMr7g" base_Element="_CRPlE1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRQMIFgPEeSTYp88fJMr7g" base_Element="_CRPlFVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Generics xmi:id="_CRQMIlgPEeSTYp88fJMr7g" genericsValue="DecoratorSeqList" base_Element="_CRQMIVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRQMJFgPEeSTYp88fJMr7g" base_Element="_CRQMIVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Generics xmi:id="_CRQzMVgPEeSTYp88fJMr7g" genericsValue="DecoratorSeqList" base_Element="_CRQzMFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRQzM1gPEeSTYp88fJMr7g" base_Element="_CRQzMFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRRaQVgPEeSTYp88fJMr7g" base_Element="_CRQzNFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRRaRFgPEeSTYp88fJMr7g" base_Element="_CRRaQlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRSBUFgPEeSTYp88fJMr7g" base_Element="_CRRaRVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRSBU1gPEeSTYp88fJMr7g" base_Element="_CRSBUVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRSBVlgPEeSTYp88fJMr7g" base_Element="_CRSBVFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRSoYlgPEeSTYp88fJMr7g" base_Element="_CRSoYFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRSoZlgPEeSTYp88fJMr7g" base_Element="_CRSoY1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRTPcVgPEeSTYp88fJMr7g" base_Element="_CRTPcFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRT2gVgPEeSTYp88fJMr7g" base_Element="_CRTPclgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRUdk1gPEeSTYp88fJMr7g" base_Element="_CRUdkVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRVEoVgPEeSTYp88fJMr7g" base_Element="_CRUdlFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRVrsFgPEeSTYp88fJMr7g" base_Element="_CRVEolgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRVrslgPEeSTYp88fJMr7g" base_Element="_CRVrsVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRWSxlgPEeSTYp88fJMr7g" base_Element="_CRWSxVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRW50VgPEeSTYp88fJMr7g" base_Element="_CRW50FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRW501gPEeSTYp88fJMr7g" base_Element="_CRW50lgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRYH8lgPEeSTYp88fJMr7g" base_Element="_CRYH8FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CRYH9VgPEeSTYp88fJMr7g" dimensions="1" base_Element="_CRYH81gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRYvAFgPEeSTYp88fJMr7g" base_Element="_CRYH81gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CRYvA1gPEeSTYp88fJMr7g" dimensions="1" base_Element="_CRYvAVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRZWEFgPEeSTYp88fJMr7g" base_Element="_CRYvAVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRZWE1gPEeSTYp88fJMr7g" base_Element="_CRZWEVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRakMVgPEeSTYp88fJMr7g" base_Element="_CRakMFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRakM1gPEeSTYp88fJMr7g" base_Element="_CRakMlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRbLQFgPEeSTYp88fJMr7g" base_Element="_CRakNFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRbLQlgPEeSTYp88fJMr7g" base_Element="_CRbLQVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRbyUFgPEeSTYp88fJMr7g" base_Element="_CRbLQ1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRbyUlgPEeSTYp88fJMr7g" base_Element="_CRbyUVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRbyVFgPEeSTYp88fJMr7g" base_Element="_CRbyU1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRcZYVgPEeSTYp88fJMr7g" base_Element="_CRcZYFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CRcZZFgPEeSTYp88fJMr7g" base_Element="_CRcZYlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRdngFgPEeSTYp88fJMr7g" base_Element="_CRdAclgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRdnglgPEeSTYp88fJMr7g" base_Element="_CRdngVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CReOkFgPEeSTYp88fJMr7g" base_Element="_CRdng1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CReOklgPEeSTYp88fJMr7g" base_Element="_CReOkVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRomoFgPEeSTYp88fJMr7g" base_Element="_CReOk1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRpNsVgPEeSTYp88fJMr7g" base_Element="_CRpNsFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_CRp0xFgPEeSTYp88fJMr7g" base_Element="_CRp0wFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRqb0FgPEeSTYp88fJMr7g" base_Element="_CRp0xlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRqb01gPEeSTYp88fJMr7g" base_Element="_CRqb0VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRrC4VgPEeSTYp88fJMr7g" base_Element="_CRrC4FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRrp8FgPEeSTYp88fJMr7g" base_Element="_CRrC4lgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRsRAFgPEeSTYp88fJMr7g" base_Element="_CRrp81gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRtfIFgPEeSTYp88fJMr7g" base_Element="_CRsRAlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Generics xmi:id="_CRutQFgPEeSTYp88fJMr7g" genericsValue="Map&lt;String, String>" base_Element="_CRuGMVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRutQlgPEeSTYp88fJMr7g" base_Element="_CRuGMVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRvUUFgPEeSTYp88fJMr7g" base_Element="_CRutQ1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Generics xmi:id="_CRv7YFgPEeSTYp88fJMr7g" genericsValue="Token" base_Element="_CRvUUVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRwicFgPEeSTYp88fJMr7g" base_Element="_CRvUUVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Generics xmi:id="_CRxwkFgPEeSTYp88fJMr7g" genericsValue="String" base_Element="_CRxJgFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRxwklgPEeSTYp88fJMr7g" base_Element="_CRxJgFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRyXoVgPEeSTYp88fJMr7g" base_Element="_CRyXoFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRy-sFgPEeSTYp88fJMr7g" base_Element="_CRyXolgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSQRslgPEeSTYp88fJMr7g" base_Element="_CSQRsFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSQ4wFgPEeSTYp88fJMr7g" base_Element="_CSQRs1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSQ4w1gPEeSTYp88fJMr7g" base_Element="_CSQ4wVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSQ4xlgPEeSTYp88fJMr7g" base_Element="_CSQ4xFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSRf0lgPEeSTYp88fJMr7g" base_Element="_CSRf0FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSRf1VgPEeSTYp88fJMr7g" base_Element="_CSRf01gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSSG4FgPEeSTYp88fJMr7g" base_Element="_CSRf1lgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSSG41gPEeSTYp88fJMr7g" base_Element="_CSSG4VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSSt8FgPEeSTYp88fJMr7g" base_Element="_CSSG5FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSTVAFgPEeSTYp88fJMr7g" base_Element="_CSSt8VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSUjIFgPEeSTYp88fJMr7g" base_Element="_CST8EFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSVKMFgPEeSTYp88fJMr7g" base_Element="_CSUjIVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSVxQFgPEeSTYp88fJMr7g" base_Element="_CSVKMVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSWYUFgPEeSTYp88fJMr7g" base_Element="_CSVxQVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSW_YFgPEeSTYp88fJMr7g" base_Element="_CSWYUVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSXmcFgPEeSTYp88fJMr7g" base_Element="_CSW_YVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSXmc1gPEeSTYp88fJMr7g" base_Element="_CSXmcVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSYNgFgPEeSTYp88fJMr7g" base_Element="_CSXmdFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSY0kFgPEeSTYp88fJMr7g" base_Element="_CSYNgVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSZboFgPEeSTYp88fJMr7g" base_Element="_CSY0kVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSZbo1gPEeSTYp88fJMr7g" base_Element="_CSZboVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSaCsFgPEeSTYp88fJMr7g" base_Element="_CSZbpFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSapwFgPEeSTYp88fJMr7g" base_Element="_CSaCsVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSapw1gPEeSTYp88fJMr7g" base_Element="_CSapwVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSbQ0lgPEeSTYp88fJMr7g" base_Element="_CSbQ0FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSb34FgPEeSTYp88fJMr7g" base_Element="_CSbQ01gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSb341gPEeSTYp88fJMr7g" base_Element="_CSb34VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSce8FgPEeSTYp88fJMr7g" base_Element="_CSb35FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSdGAFgPEeSTYp88fJMr7g" base_Element="_CSce8VgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSdGA1gPEeSTYp88fJMr7g" base_Element="_CSdGAVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSdtEFgPEeSTYp88fJMr7g" base_Element="_CSdGBFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSeUIFgPEeSTYp88fJMr7g" base_Element="_CSdtEVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSeUI1gPEeSTYp88fJMr7g" base_Element="_CSeUIVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSfiQFgPEeSTYp88fJMr7g" base_Element="_CSe7MFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSgJUFgPEeSTYp88fJMr7g" base_Element="_CSfiQVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSgJU1gPEeSTYp88fJMr7g" base_Element="_CSgJUVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSgwYFgPEeSTYp88fJMr7g" base_Element="_CSgJVFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CShXcFgPEeSTYp88fJMr7g" base_Element="_CSgwYVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CShXc1gPEeSTYp88fJMr7g" base_Element="_CShXcVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSh-gFgPEeSTYp88fJMr7g" base_Element="_CShXdFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSilkFgPEeSTYp88fJMr7g" base_Element="_CSh-gVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSilk1gPEeSTYp88fJMr7g" base_Element="_CSilkVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_CSjMoFgPEeSTYp88fJMr7g" base_Element="_CSillFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C91lUFgPEeSTYp88fJMr7g" base_Element="_C90-QFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C91lUlgPEeSTYp88fJMr7g" base_Element="_C91lUVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C92MYVgPEeSTYp88fJMr7g" base_Element="_C92MYFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C92zcFgPEeSTYp88fJMr7g" base_Element="_C92MYlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C93agFgPEeSTYp88fJMr7g" base_Element="_C92zcVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C93aglgPEeSTYp88fJMr7g" base_Element="_C93agVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C94BkFgPEeSTYp88fJMr7g" base_Element="_C93ag1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C94BklgPEeSTYp88fJMr7g" base_Element="_C94BkVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C952wFgPEeSTYp88fJMr7g" base_Element="_C94ooFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C952wlgPEeSTYp88fJMr7g" base_Element="_C952wVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C9_WUFgPEeSTYp88fJMr7g" base_Element="_C96d0FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C9_9YFgPEeSTYp88fJMr7g" base_Element="_C9_WUVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C9_9YlgPEeSTYp88fJMr7g" base_Element="_C9_9YVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-GEAFgPEeSTYp88fJMr7g" base_Element="_C-Fc8FgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_C-K8gVgPEeSTYp88fJMr7g" base_Element="_C-KVcFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_C-MKoVgPEeSTYp88fJMr7g" base_Element="_C-LjkFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-MxsVgPEeSTYp88fJMr7g" base_Element="_C-MxsFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-SRQFgPEeSTYp88fJMr7g" base_Element="_C-RqMFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-S4UVgPEeSTYp88fJMr7g" base_Element="_C-SRQVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_C-TfYFgPEeSTYp88fJMr7g" base_Element="_C-S4U1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-TfYlgPEeSTYp88fJMr7g" base_Element="_C-S4U1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_C-TfZVgPEeSTYp88fJMr7g" base_Element="_C-TfY1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-UGcFgPEeSTYp88fJMr7g" base_Element="_C-TfY1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-UtgFgPEeSTYp88fJMr7g" base_Element="_C-UGc1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-UtglgPEeSTYp88fJMr7g" base_Element="_C-UtgVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-UthVgPEeSTYp88fJMr7g" base_Element="_C-Utg1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-VUklgPEeSTYp88fJMr7g" base_Element="_C-VUkFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-VUlVgPEeSTYp88fJMr7g" base_Element="_C-VUk1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-V7oVgPEeSTYp88fJMr7g" base_Element="_C-VUllgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-V7pFgPEeSTYp88fJMr7g" base_Element="_C-V7olgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-WisFgPEeSTYp88fJMr7g" base_Element="_C-V7pVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-Wis1gPEeSTYp88fJMr7g" base_Element="_C-WisVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-WitlgPEeSTYp88fJMr7g" base_Element="_C-WitFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-XJwVgPEeSTYp88fJMr7g" base_Element="_C-Wit1gPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-XJxFgPEeSTYp88fJMr7g" base_Element="_C-XJwlgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-Xw0FgPEeSTYp88fJMr7g" base_Element="_C-XJxVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-d3cFgPEeSTYp88fJMr7g" base_Element="_C-dQYFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-eegFgPEeSTYp88fJMr7g" base_Element="_C-d3cVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-fFkFgPEeSTYp88fJMr7g" base_Element="_C-eegVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-fFk1gPEeSTYp88fJMr7g" base_Element="_C-fFkVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-fsoFgPEeSTYp88fJMr7g" base_Element="_C-fFlFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-fso1gPEeSTYp88fJMr7g" base_Element="_C-fsoVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-gTslgPEeSTYp88fJMr7g" base_Element="_C-gTsFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-klIFgPEeSTYp88fJMr7g" base_Element="_C-g6wFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-lMMFgPEeSTYp88fJMr7g" base_Element="_C-klIVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-lzQFgPEeSTYp88fJMr7g" base_Element="_C-lMMVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-lzQ1gPEeSTYp88fJMr7g" base_Element="_C-lzQVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-maUFgPEeSTYp88fJMr7g" base_Element="_C-lzRFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-maU1gPEeSTYp88fJMr7g" base_Element="_C-maUVgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-nBYFgPEeSTYp88fJMr7g" base_Element="_C-maVFgPEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_C-nocFgPEeSTYp88fJMr7g" base_Element="_C-nBYVgPEeSTYp88fJMr7g"/>
</xmi:XMI>
