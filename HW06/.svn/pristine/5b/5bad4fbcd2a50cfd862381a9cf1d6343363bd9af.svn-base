<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_v2JKcFgIEeSTYp88fJMr7g" name="HW06">
    <eAnnotations xmi:id="_wL5YAFgIEeSTYp88fJMr7g" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_wL5YAVgIEeSTYp88fJMr7g" source="codegen">
        <details xmi:id="_wL5YAlgIEeSTYp88fJMr7g" key="codegenDirectory" value="/HW06/src"/>
        <details xmi:id="_xGVnAFgIEeSTYp88fJMr7g" key="AssociatedSourceCode" value="/HW06/src/adapters/IModelToView.java;1266527697/1;/HW06/src/adapters/IViewToModel.java;1134976459/1;/HW06/src/controller/Controller.java;411440786/1;/HW06/src/model/Model.java;2571718313/1;/HW06/src/model/visitors/PlaySongVisitor.java;2822444046/1;/HW06/src/model/visitors/ToStringVisitor.java;2341259298/1;/HW06/src/provided/abcParser/ABCParser.java;3153405954/1;/HW06/src/provided/music/APhraseVisitor.java;1010602946/1;/HW06/src/provided/music/Chord.java;1971309365/1;/HW06/src/provided/music/DecoratorSeqList.java;2350535095/1;/HW06/src/provided/music/FineToggleDecoratorSeqList.java;2903020233/1;/HW06/src/provided/music/Header.java;855643762/1;/HW06/src/provided/music/INote.java;507512117/1;/HW06/src/provided/music/IPhrase.java;1122806289/1;/HW06/src/provided/music/IPhraseVisitor.java;2583970647/1;/HW06/src/provided/music/IPhraseVisitorCmd.java;3144788355/1;/HW06/src/provided/music/ISeqList.java;1752096597/1;/HW06/src/provided/music/MTSeqList.java;797718925/1;/HW06/src/provided/music/NESeqList.java;2982850294/1;/HW06/src/provided/music/Note.java;1713223383/1;/HW06/src/provided/music/NoteCollection.java;2061496451/1;/HW06/src/provided/music/ToggleDecoratorSeqList.java;3430233739/1;/HW06/src/provided/music/Triplet.java;163966482/1;/HW06/src/provided/music/Tuplet.java;799272193/1;/HW06/src/provided/player/ISequencePlayerStatus.java;2951061270/1;/HW06/src/provided/player/SequencePlayer.java;1814505560/1;/HW06/src/provided/player/SequencePlayer2.java;1631007379/1;/HW06/src/provided/token/ATokVisitor.java;2901257995/1;/HW06/src/provided/token/ITokVisitor.java;275599564/1;/HW06/src/provided/token/ITokVisitorCmd.java;4098180758/1;/HW06/src/provided/token/ITokenFactory.java;1037223879/1;/HW06/src/provided/token/Token.java;2670746935/1;/HW06/src/provided/token/TokenFactory.java;1190700287/1;/HW06/src/provided/token/tokenizer/ABCTokenizer.java;2416051212/1;/HW06/src/provided/token/tokenizer/IStringTokenizer.java;2530580852/1;/HW06/src/provided/token/tokenizer/ITokenizer.java;1031763823/1;/HW06/src/provided/token/tokenizer/StringTokenizer.java;3408517212/1;/HW06/src/provided/util/ABCInstrument.java;1182473716/1;/HW06/src/provided/util/ABCUtil.java;817699883/1;/HW06/src/provided/util/KeySignature.java;1164859549/1;/HW06/src/view/View.java;2503431071/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_wzKzYFgIEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_wzKzYVgIEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_wzKzYlgIEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_wzKzY1gIEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_wzKzZFgIEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_wzKzZVgIEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_wzKzZlgIEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_wzLacFgIEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_wzLacVgIEeSTYp88fJMr7g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_wzRhEFgIEeSTYp88fJMr7g" name="adapters">
      <packagedElement xmi:type="uml:Interface" xmi:id="_w0__YFgIEeSTYp88fJMr7g" name="IModelToView">
        <ownedComment xmi:id="_w8g8oFgIEeSTYp88fJMr7g">
          <body>The Model to View adapter interface.

Contains no methods, can be added in future if needed.</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_w1BNgFgIEeSTYp88fJMr7g" name="IViewToModel">
        <ownedComment xmi:id="_w8hjsFgIEeSTYp88fJMr7g">
          <body>The View to Model adapter interface.</body>
        </ownedComment>
        <ownedOperation xmi:id="_w1B0kFgIEeSTYp88fJMr7g" name="loadFile">
          <ownedComment xmi:id="_w8hjsVgIEeSTYp88fJMr7g">
            <body>Loads user-specified music file.
     * 
     * @param fileName
     * @return contents of file</body>
          </ownedComment>
          <ownedParameter xmi:id="_w1B0kVgIEeSTYp88fJMr7g" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_w1B0klgIEeSTYp88fJMr7g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_w1CboFgIEeSTYp88fJMr7g" name="parseFile">
          <ownedComment xmi:id="_w8hjslgIEeSTYp88fJMr7g">
            <body>Parses previously inputted music file to retrieve its string representation.</body>
          </ownedComment>
          <ownedParameter xmi:id="_w1CboVgIEeSTYp88fJMr7g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_w1CbolgIEeSTYp88fJMr7g" name="playMusic">
          <ownedComment xmi:id="_w8hjs1gIEeSTYp88fJMr7g">
            <body>Plays music from previously inputted music file.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_wzTWQFgIEeSTYp88fJMr7g" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_wzTWQVgIEeSTYp88fJMr7g" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_w0b-slgIEeSTYp88fJMr7g" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_w6lqAVgIEeSTYp88fJMr7g" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_w6mREFgIEeSTYp88fJMr7g" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w5jIMFgIEeSTYp88fJMr7g" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6VLUFgIEeSTYp88fJMr7g" name="BorderLayout"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_wzcgMFgIEeSTYp88fJMr7g" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_w5qc8FgIEeSTYp88fJMr7g" name="Hashtable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_w5rEAVgIEeSTYp88fJMr7g" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6x3QFgIEeSTYp88fJMr7g" name="Stack"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w7SNkFgIEeSTYp88fJMr7g" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_w0GngFgIEeSTYp88fJMr7g" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_w6MBZFgIEeSTYp88fJMr7g" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6MocVgIEeSTYp88fJMr7g" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6NPgVgIEeSTYp88fJMr7g" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6N2kFgIEeSTYp88fJMr7g" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6N2klgIEeSTYp88fJMr7g" name="InputStreamReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6OdoVgIEeSTYp88fJMr7g" name="Reader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6Odo1gIEeSTYp88fJMr7g" name="StreamTokenizer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_w6zFYFgIEeSTYp88fJMr7g" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_w6zFYVgIEeSTYp88fJMr7g" name="Object"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_w7Up0FgIEeSTYp88fJMr7g" name="Character"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_wzTWQlgIEeSTYp88fJMr7g" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_w2raYFgIEeSTYp88fJMr7g" name="View">
        <ownedComment xmi:id="_w8nqVlgIEeSTYp88fJMr7g">
          <body>The View for this system.</body>
        </ownedComment>
        <generalization xmi:id="_w7XtIFgIEeSTYp88fJMr7g" general="_w6VyYVgIEeSTYp88fJMr7g"/>
        <ownedAttribute xmi:id="_w8GF4FgIEeSTYp88fJMr7g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8GF4VgIEeSTYp88fJMr7g" value="6376164136924196333L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_w8GF4lgIEeSTYp88fJMr7g" name="viewToModel" visibility="private" type="_w1BNgFgIEeSTYp88fJMr7g" association="_w9FkZFgIEeSTYp88fJMr7g"/>
        <ownedAttribute xmi:id="_w8GF5FgIEeSTYp88fJMr7g" name="contentPane" visibility="private" type="_w6WZcVgIEeSTYp88fJMr7g" association="_w9GLcVgIEeSTYp88fJMr7g"/>
        <ownedAttribute xmi:id="_w8Gs8VgIEeSTYp88fJMr7g" name="panel" visibility="private" isLeaf="true" type="_w6WZcVgIEeSTYp88fJMr7g" isReadOnly="true" association="_w9GLdFgIEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8Gs8lgIEeSTYp88fJMr7g" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_w8Gs9FgIEeSTYp88fJMr7g" name="splitPane" visibility="private" isLeaf="true" type="_w6XAg1gIEeSTYp88fJMr7g" isReadOnly="true" association="_w9GygVgIEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8HUAFgIEeSTYp88fJMr7g" value="new JSplitPane()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_w8HUAlgIEeSTYp88fJMr7g" name="textFieldFile" visibility="private" isLeaf="true" type="_w6XnkVgIEeSTYp88fJMr7g" isReadOnly="true" association="_w9GyhFgIEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8HUA1gIEeSTYp88fJMr7g" value="new JTextField()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_w8H7EVgIEeSTYp88fJMr7g" name="lblFile" visibility="private" isLeaf="true" type="_w6kb4VgIEeSTYp88fJMr7g" isReadOnly="true" association="_w9HZkVgIEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8H7ElgIEeSTYp88fJMr7g" value="new JLabel(&quot;File:&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_w8IiIFgIEeSTYp88fJMr7g" name="btnLoad" visibility="private" isLeaf="true" type="_w6lC8VgIEeSTYp88fJMr7g" isReadOnly="true" association="_w9IAoVgIEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8IiIVgIEeSTYp88fJMr7g" value="new JButton(&quot;Load&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_w8IiI1gIEeSTYp88fJMr7g" name="btnParse" visibility="private" isLeaf="true" type="_w6lC8VgIEeSTYp88fJMr7g" isReadOnly="true" association="_w9InsVgIEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8IiJFgIEeSTYp88fJMr7g" value="new JButton(&quot;Parse&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_w8JJMVgIEeSTYp88fJMr7g" name="btnPlay" visibility="private" isLeaf="true" type="_w6lC8VgIEeSTYp88fJMr7g" isReadOnly="true" association="_w9JOwVgIEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8JJMlgIEeSTYp88fJMr7g" value="new JButton(&quot;Play&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_w8JJNFgIEeSTYp88fJMr7g" name="scrollPaneFileContents" visibility="private" isLeaf="true" type="_w6mRElgIEeSTYp88fJMr7g" isReadOnly="true" association="_w9J10FgIEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8JJNVgIEeSTYp88fJMr7g" value="new JScrollPane()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_w8JwQVgIEeSTYp88fJMr7g" name="scrollPaneParsed" visibility="private" isLeaf="true" type="_w6mRElgIEeSTYp88fJMr7g" isReadOnly="true" association="_w9Kc4FgIEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8JwQlgIEeSTYp88fJMr7g" value="new JScrollPane()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_w8JwRFgIEeSTYp88fJMr7g" name="textAreaFileContents" visibility="private" isLeaf="true" type="_w6m4IVgIEeSTYp88fJMr7g" isReadOnly="true" association="_w9Kc41gIEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8JwRVgIEeSTYp88fJMr7g" value="new JTextArea()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_w8KXUVgIEeSTYp88fJMr7g" name="textAreaIParsed" visibility="private" isLeaf="true" type="_w6m4IVgIEeSTYp88fJMr7g" isReadOnly="true" association="_w9LD8VgIEeSTYp88fJMr7g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8KXUlgIEeSTYp88fJMr7g" value="new JTextArea()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8fugFgIEeSTYp88fJMr7g" name="View" specification="_w6oGQFgIEeSTYp88fJMr7g">
          <ownedParameter xmi:id="_w8fugVgIEeSTYp88fJMr7g" name="viewToModel" type="_w1BNgFgIEeSTYp88fJMr7g"/>
          <ownedParameter xmi:id="_w8fuglgIEeSTYp88fJMr7g" type="_w2raYFgIEeSTYp88fJMr7g" direction="return"/>
          <language>java</language>
          <body>this.viewToModel = viewToModel;
     initGUI();
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8fug1gIEeSTYp88fJMr7g" name="start" specification="_w2sogFgIEeSTYp88fJMr7g">
          <language>java</language>
          <body>setVisible(true); 
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8fuhFgIEeSTYp88fJMr7g" name="initGUI" specification="_w2tPkFgIEeSTYp88fJMr7g">
          <language>java</language>
          <body>setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
     setBounds(100, 100, 450, 300);
     contentPane = new JPanel();
     contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
     contentPane.setLayout(new BorderLayout(0, 0));
     setContentPane(contentPane);
     
     contentPane.add(panel, BorderLayout.NORTH);
     
     panel.add(lblFile);
     
     textFieldFile.setToolTipText(&quot;The file to load. Assumed to be in the \&quot;songs\&quot; package with \&quot;.abc\&quot; extension.&quot;);
     textFieldFile.setColumns(10);
     panel.add(textFieldFile);
     
     btnLoad.setToolTipText(&quot;Load the file and create the ABCParser.&quot;);
     btnLoad.addActionListener(new ActionListener() {
         /**
          * Sends input file name to model via adapter and displays the file contents it receives back.
          */
         public void actionPerformed(ActionEvent e) {
             String fileContents = viewToModel.loadFile(textFieldFile.getText());
             textAreaFileContents.setText(fileContents);
             btnParse.setEnabled(true); // once a file is loaded, it can be parsed
         }
     });
     panel.add(btnLoad);
     
     btnParse.addActionListener(new ActionListener() {
         /**
          * Asks adapter for parsed String representation of input file.
          */
         public void actionPerformed(ActionEvent e) {
             textAreaIParsed.setLineWrap(true);
             textAreaIParsed.setWrapStyleWord(true);
             textAreaIParsed.setText(viewToModel.parseFile());
             btnPlay.setEnabled(true); // once a file is parsed, music can be played
         }
     });
     btnParse.setToolTipText(&quot;Parse the file and create the IPhrase structure.&quot;);
     btnParse.setEnabled(false); // button should only be enabled once a music file is loaded
     panel.add(btnParse);
     
     btnPlay.addActionListener(new ActionListener() {
         /**
          * Sends call to adapter to play music from previously-inputted file.
          */
         public void actionPerformed(ActionEvent e) {
             viewToModel.playMusic();
         }
     });
     btnPlay.setToolTipText(&quot;Play the parsed IPhrase data structure.&quot;);
     btnPlay.setEnabled(false); // button should only be enabled once a music file is parsed
     panel.add(btnPlay);
     
     splitPane.setOrientation(JSplitPane.VERTICAL_SPLIT);
     
     contentPane.add(splitPane, BorderLayout.CENTER);
     scrollPaneFileContents.setToolTipText(&quot;The text contents of the file.&quot;);
     scrollPaneFileContents.setViewportBorder(new TitledBorder(null, &quot;File Contents&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, null));
     
     splitPane.setLeftComponent(scrollPaneFileContents);
     
     scrollPaneFileContents.setViewportView(textAreaFileContents);
     scrollPaneParsed.setToolTipText(&quot;The String representation of the IPhrase data structure parsed from the input ABC file.&quot;);
     scrollPaneParsed.setViewportBorder(new TitledBorder(null, &quot;Parsed IPhrase Structure&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, null));
     
     splitPane.setRightComponent(scrollPaneParsed);
     
     scrollPaneParsed.setViewportView(textAreaIParsed);
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_w2sogFgIEeSTYp88fJMr7g" name="start" method="_w8fug1gIEeSTYp88fJMr7g">
          <ownedComment xmi:id="_w8nqWFgIEeSTYp88fJMr7g">
            <body>Starts the already initialized frame, making it visible and ready to
     * interact with the user.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_w2tPkFgIEeSTYp88fJMr7g" name="initGUI" visibility="private" method="_w8fuhFgIEeSTYp88fJMr7g">
          <ownedComment xmi:id="_w8nqWVgIEeSTYp88fJMr7g">
            <body>Initializes the GUI components but does not start the frame.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_w6oGQFgIEeSTYp88fJMr7g" name="View" method="_w8fugFgIEeSTYp88fJMr7g">
          <eAnnotations xmi:id="_w6otUFgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_w6otUVgIEeSTYp88fJMr7g" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_w8nqV1gIEeSTYp88fJMr7g">
            <body>Constructor - creates the frame</body>
          </ownedComment>
          <ownedParameter xmi:id="_w6oGQVgIEeSTYp88fJMr7g" name="viewToModel" type="_w1BNgFgIEeSTYp88fJMr7g"/>
          <ownedParameter xmi:id="_w6otUlgIEeSTYp88fJMr7g" type="_w2raYFgIEeSTYp88fJMr7g" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9FkZFgIEeSTYp88fJMr7g" name="" memberEnd="_w9FkZVgIEeSTYp88fJMr7g _w8GF4lgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9FkZVgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9FkZFgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9GLcVgIEeSTYp88fJMr7g" name="" memberEnd="_w9GLclgIEeSTYp88fJMr7g _w8GF5FgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9GLclgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9GLcVgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9GLdFgIEeSTYp88fJMr7g" name="" memberEnd="_w9GLdVgIEeSTYp88fJMr7g _w8Gs8VgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9GLdVgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9GLdFgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9GygVgIEeSTYp88fJMr7g" name="" memberEnd="_w9GyglgIEeSTYp88fJMr7g _w8Gs9FgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9GyglgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9GygVgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9GyhFgIEeSTYp88fJMr7g" name="" memberEnd="_w9GyhVgIEeSTYp88fJMr7g _w8HUAlgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9GyhVgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9GyhFgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9HZkVgIEeSTYp88fJMr7g" name="" memberEnd="_w9HZklgIEeSTYp88fJMr7g _w8H7EVgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9HZklgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9HZkVgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9IAoVgIEeSTYp88fJMr7g" name="" memberEnd="_w9IAolgIEeSTYp88fJMr7g _w8IiIFgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9IAolgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9IAoVgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9InsVgIEeSTYp88fJMr7g" name="" memberEnd="_w9InslgIEeSTYp88fJMr7g _w8IiI1gIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9InslgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9InsVgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9JOwVgIEeSTYp88fJMr7g" name="" memberEnd="_w9JOwlgIEeSTYp88fJMr7g _w8JJMVgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9JOwlgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9JOwVgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9J10FgIEeSTYp88fJMr7g" name="" memberEnd="_w9J10VgIEeSTYp88fJMr7g _w8JJNFgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9J10VgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9J10FgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9Kc4FgIEeSTYp88fJMr7g" name="" memberEnd="_w9Kc4VgIEeSTYp88fJMr7g _w8JwQVgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9Kc4VgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9Kc4FgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9Kc41gIEeSTYp88fJMr7g" name="" memberEnd="_w9Kc5FgIEeSTYp88fJMr7g _w8JwRFgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9Kc5FgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9Kc41gIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w9LD8VgIEeSTYp88fJMr7g" name="" memberEnd="_w9LD8lgIEeSTYp88fJMr7g _w8KXUVgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w9LD8lgIEeSTYp88fJMr7g" name="" type="_w2raYFgIEeSTYp88fJMr7g" association="_w9LD8VgIEeSTYp88fJMr7g"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_wzTWQ1gIEeSTYp88fJMr7g" name="model">
      <packagedElement xmi:type="uml:Package" xmi:id="_wzVLcFgIEeSTYp88fJMr7g" name="visitors">
        <packagedElement xmi:type="uml:Class" xmi:id="_w1JJUFgIEeSTYp88fJMr7g" name="PlaySongVisitor">
          <ownedComment xmi:id="_w8iKw1gIEeSTYp88fJMr7g">
            <body>Visitor capable of playing the music of a IPhrase host.</body>
          </ownedComment>
          <generalization xmi:id="_w5lkcFgIEeSTYp88fJMr7g" general="_w1STQFgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7gQAFgIEeSTYp88fJMr7g" name="playSongVisitor" visibility="private" type="_w1iK4FgIEeSTYp88fJMr7g" association="_w8zQgVgIEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7gQAVgIEeSTYp88fJMr7g" value="this"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7g3EFgIEeSTYp88fJMr7g" name="sequencePlayer" visibility="private" type="_w19osFgIEeSTYp88fJMr7g" association="_w80eoVgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7g3ElgIEeSTYp88fJMr7g" name="keySignature" visibility="private" type="_w2mh4FgIEeSTYp88fJMr7g" association="_w81FsVgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7heIFgIEeSTYp88fJMr7g" name="lastTick" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7heIVgIEeSTYp88fJMr7g" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8OBsVgIEeSTYp88fJMr7g" name="PlaySongVisitor" specification="_w1JwYFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8OBslgIEeSTYp88fJMr7g" type="_w1JJUFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>/*
      * Default
      */
     super(new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             System.err.println(&quot;Unrecognzied element parsed of id &quot; + id);
             return params;
         } 
     });
     
     initSequencePlayer();
     
     /*
      * Default headers - no-op
      */
     String headerString = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;
     for (int i = 0; i &lt; headerString.length(); i++) {
         this.addCmd(&quot;&quot; + headerString.charAt(i), new IPhraseVisitorCmd() {
             @Override
             public Object apply(String id, IPhrase host, Object... params) {
                 return params;
             }
         });
     }
     
     /*
      * L header - set default length of a note
      */
     this.addCmd(&quot;L&quot;, new IPhraseVisitorCmd() { 
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             Header l = (Header) host;
             sequencePlayer.setTicksPerDefaultNote((int) (ABCUtil.Singleton.parseFraction(l.getValue()) * 64));
             return params;
         }
     });
     
     /*
      * K header - set key signature
      */
     this.addCmd(&quot;K&quot;, new IPhraseVisitorCmd() { 
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             Header k = (Header) host;
             keySignature = new KeySignature(k.getValue());
             return params;
         }
     });
     
     /*
      * Q header - set tempo
      */
     this.addCmd(&quot;Q&quot;, new IPhraseVisitorCmd() { 
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             Header q = (Header) host;
             sequencePlayer.setTempo((int) ABCUtil.Singleton.parseTempo(q.getValue(), sequencePlayer.getTicksPerQuarterNote() / sequencePlayer.getTicksPerDefaultNote()));
             return params;
         }
     });
     
     /*
      * Note
      */
     this.addCmd(Note.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             Note note = (Note) host;
             note = keySignature.adjust(note);
             lastTick = sequencePlayer.addNote(note, lastTick);
             return params;
         }
     });
     
     /*
      * Chord - play all notes simulateneously
      */
     this.addCmd(Chord.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             Chord chord = (Chord) host;
             int last = lastTick; // temporary lastTick
             for (Note note : chord.getNotes()) {
                 note = keySignature.adjust(note);
                 last = sequencePlayer.addNote(note, lastTick);
             }
             lastTick = last;
             return params;
         }
     });
     
     /*
      * Triplet - play notes succesively at 2/3 indicated duration
      */
     this.addCmd(Triplet.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             Triplet triplet = (Triplet) host;
             for (Note note : triplet.getNotes()) {
                 note = keySignature.adjust(note);
                 note.setDuration(note.getDuration() * 0.66);
                 lastTick = sequencePlayer.addNote(note, lastTick);
             }
             return params;
         }
     });
     
     /*
      * Empty sequence list - plays music since all IPhrase objects is added to sequencePlayer
      */
     this.addCmd(MTSeqList.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             sequencePlayer.play(ISequencePlayerStatus.NULL);
             return params;
         }
     });
     
     /*
      * Non-empty sequence list
      */
     this.addCmd(NESeqList.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             NESeqList neSeqList = (NESeqList) host;
             neSeqList.getFirst().execute(playSongVisitor);
             neSeqList.getRest().execute(playSongVisitor);
             return params;
         }
     });
     
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8OBs1gIEeSTYp88fJMr7g" name="initSequencePlayer" specification="_w1JwZFgIEeSTYp88fJMr7g">
            <language>java</language>
            <body>sequencePlayer = new SequencePlayer(16, 0);
     sequencePlayer.init(16, 0);
     sequencePlayer.setTicksPerDefaultNote(16);
     sequencePlayer.setTempo(140);
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1JwYFgIEeSTYp88fJMr7g" name="PlaySongVisitor" method="_w8OBsVgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w1JwYVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w1JwYlgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8iKxFgIEeSTYp88fJMr7g">
              <body>Constructor - loads a default command and commands for various types of IPhrase objects</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1JwY1gIEeSTYp88fJMr7g" type="_w1JJUFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w1JwZFgIEeSTYp88fJMr7g" name="initSequencePlayer" visibility="private" method="_w8OBs1gIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8iKxVgIEeSTYp88fJMr7g">
              <body>Initializes and configures the Sequence Player to default settings.</body>
            </ownedComment>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w1LlkFgIEeSTYp88fJMr7g" name="ToStringVisitor">
          <ownedComment xmi:id="_w8iKxlgIEeSTYp88fJMr7g">
            <body>Visitor capable of parsing IPhrase host for its String representation.</body>
          </ownedComment>
          <generalization xmi:id="_w5mLgFgIEeSTYp88fJMr7g" general="_w1STQFgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7heI1gIEeSTYp88fJMr7g" name="toStringVisitor" visibility="private" type="_w1iK4FgIEeSTYp88fJMr7g" association="_w81swVgIEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7iFMFgIEeSTYp88fJMr7g" value="this"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8OBtFgIEeSTYp88fJMr7g" name="ToStringVisitor" specification="_w1LlkVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8OBtVgIEeSTYp88fJMr7g" type="_w1LlkFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>/*
      * Default
      */
     super(new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             return host.toString();
         }
     });
     
     /*
      * Empty sequence list
      */
     this.addCmd(MTSeqList.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
            return &quot;}&quot;;
         }
     });
     
     /*
      * Non-empty sequence list
      */
     this.addCmd(NESeqList.ID, new IPhraseVisitorCmd() {
         @Override
         public Object apply(String id, IPhrase host, Object... params) {
             String s = (String) params[0];
             NESeqList neSeqList = (NESeqList) host;
             return s + (String) neSeqList.getRest().execute(toStringVisitor, &quot;, &quot; + neSeqList.getFirst().toString());
         }
     });
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1LlkVgIEeSTYp88fJMr7g" name="ToStringVisitor" method="_w8OBtFgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w1MMoFgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w1MMoVgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8iKx1gIEeSTYp88fJMr7g">
              <body>Constructor - loads a default command and commands for empty and non-empty sequence lists</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1MMolgIEeSTYp88fJMr7g" type="_w1LlkFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w8zQgVgIEeSTYp88fJMr7g" name="" memberEnd="_w8zQglgIEeSTYp88fJMr7g _w7gQAFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w8zQglgIEeSTYp88fJMr7g" name="" type="_w1JJUFgIEeSTYp88fJMr7g" association="_w8zQgVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w80eoVgIEeSTYp88fJMr7g" name="" memberEnd="_w80eolgIEeSTYp88fJMr7g _w7g3EFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w80eolgIEeSTYp88fJMr7g" name="" type="_w1JJUFgIEeSTYp88fJMr7g" association="_w80eoVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w81FsVgIEeSTYp88fJMr7g" name="" memberEnd="_w81FslgIEeSTYp88fJMr7g _w7g3ElgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w81FslgIEeSTYp88fJMr7g" name="" type="_w1JJUFgIEeSTYp88fJMr7g" association="_w81FsVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w81swVgIEeSTYp88fJMr7g" name="" memberEnd="_w81swlgIEeSTYp88fJMr7g _w7heI1gIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w81swlgIEeSTYp88fJMr7g" name="" type="_w1LlkFgIEeSTYp88fJMr7g" association="_w81swVgIEeSTYp88fJMr7g"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_w1Fe8FgIEeSTYp88fJMr7g" name="Model">
        <ownedComment xmi:id="_w8hjuFgIEeSTYp88fJMr7g">
          <body>The Model for this system.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_w7ea0FgIEeSTYp88fJMr7g" name="modelToView" visibility="private" type="_w0__YFgIEeSTYp88fJMr7g" association="_w8yCYVgIEeSTYp88fJMr7g"/>
        <ownedAttribute xmi:id="_w7fB4lgIEeSTYp88fJMr7g" name="abcParser" visibility="private" type="_w1MzsFgIEeSTYp88fJMr7g" association="_w8yCZFgIEeSTYp88fJMr7g"/>
        <ownedAttribute xmi:id="_w7fo8FgIEeSTYp88fJMr7g" name="phrase" visibility="private" type="_w1g8wFgIEeSTYp88fJMr7g" association="_w8ypcVgIEeSTYp88fJMr7g"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Nao1gIEeSTYp88fJMr7g" name="Model" specification="_w5k9YFgIEeSTYp88fJMr7g">
          <ownedParameter xmi:id="_w8NapFgIEeSTYp88fJMr7g" name="modelToView" type="_w0__YFgIEeSTYp88fJMr7g"/>
          <ownedParameter xmi:id="_w8NapVgIEeSTYp88fJMr7g" type="_w1Fe8FgIEeSTYp88fJMr7g" direction="return"/>
          <language>java</language>
          <body>this.modelToView = modelToView;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8NaplgIEeSTYp88fJMr7g" name="loadFile" specification="_w1GGAFgIEeSTYp88fJMr7g">
          <ownedParameter xmi:id="_w8Nap1gIEeSTYp88fJMr7g" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_w8NaqFgIEeSTYp88fJMr7g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>abcParser = new ABCParser(&quot;/songs/&quot; + fileName + &quot;.abc&quot;);
     return ABCUtil.Singleton.getFileContents(&quot;/songs/&quot; + fileName + &quot;.abc&quot;);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8NaqVgIEeSTYp88fJMr7g" name="parseFile" specification="_w1HUIVgIEeSTYp88fJMr7g">
          <ownedParameter xmi:id="_w8NaqlgIEeSTYp88fJMr7g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>phrase = abcParser.parse();
     return phrase.toString();
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Naq1gIEeSTYp88fJMr7g" name="playMusic" specification="_w1HUI1gIEeSTYp88fJMr7g">
          <language>java</language>
          <body>phrase.execute(new PlaySongVisitor());
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8OBsFgIEeSTYp88fJMr7g" name="start" specification="_w1H7MFgIEeSTYp88fJMr7g">
          <language>java</language>
          <body>NESeqList.setToStringAlgo(new ToStringVisitor());
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_w1GGAFgIEeSTYp88fJMr7g" name="loadFile" method="_w8NaplgIEeSTYp88fJMr7g">
          <ownedComment xmi:id="_w8hju1gIEeSTYp88fJMr7g">
            <body>Loads file and returns file contents.
     * 
     * @param fileName
     * @return contents of file</body>
          </ownedComment>
          <ownedParameter xmi:id="_w1GtEFgIEeSTYp88fJMr7g" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_w1HUIFgIEeSTYp88fJMr7g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_w1HUIVgIEeSTYp88fJMr7g" name="parseFile" method="_w8NaqVgIEeSTYp88fJMr7g">
          <ownedComment xmi:id="_w8iKwFgIEeSTYp88fJMr7g">
            <body>Parses IPhrase and returns its String representation.
     * 
     * @return string representation of phrase</body>
          </ownedComment>
          <ownedParameter xmi:id="_w1HUIlgIEeSTYp88fJMr7g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_w1HUI1gIEeSTYp88fJMr7g" name="playMusic" method="_w8Naq1gIEeSTYp88fJMr7g">
          <ownedComment xmi:id="_w8iKwVgIEeSTYp88fJMr7g">
            <body>Calls the PlaySongVisitor to play the music encoded in phrase using SequencePlayer.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_w1H7MFgIEeSTYp88fJMr7g" name="start" method="_w8OBsFgIEeSTYp88fJMr7g">
          <ownedComment xmi:id="_w8iKwlgIEeSTYp88fJMr7g">
            <body>Starts the model by installing a ToStringAlgo to NESeqList.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_w5k9YFgIEeSTYp88fJMr7g" name="Model" method="_w8Nao1gIEeSTYp88fJMr7g">
          <eAnnotations xmi:id="_w5k9YlgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_w5k9Y1gIEeSTYp88fJMr7g" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_w8hjulgIEeSTYp88fJMr7g">
            <body>Constructor</body>
          </ownedComment>
          <ownedParameter xmi:id="_w5k9YVgIEeSTYp88fJMr7g" name="modelToView" type="_w0__YFgIEeSTYp88fJMr7g"/>
          <ownedParameter xmi:id="_w5k9ZFgIEeSTYp88fJMr7g" type="_w1Fe8FgIEeSTYp88fJMr7g" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w8yCYVgIEeSTYp88fJMr7g" name="" memberEnd="_w8yCYlgIEeSTYp88fJMr7g _w7ea0FgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w8yCYlgIEeSTYp88fJMr7g" name="" type="_w1Fe8FgIEeSTYp88fJMr7g" association="_w8yCYVgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w8yCZFgIEeSTYp88fJMr7g" name="" memberEnd="_w8yCZVgIEeSTYp88fJMr7g _w7fB4lgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w8yCZVgIEeSTYp88fJMr7g" name="" type="_w1Fe8FgIEeSTYp88fJMr7g" association="_w8yCZFgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w8ypcVgIEeSTYp88fJMr7g" name="" memberEnd="_w8ypclgIEeSTYp88fJMr7g _w7fo8FgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w8ypclgIEeSTYp88fJMr7g" name="" type="_w1Fe8FgIEeSTYp88fJMr7g" association="_w8ypcVgIEeSTYp88fJMr7g"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_wzUkYFgIEeSTYp88fJMr7g" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_w1DCsFgIEeSTYp88fJMr7g" name="Controller">
        <ownedComment xmi:id="_w8hjtFgIEeSTYp88fJMr7g">
          <body>*
The Controller initializes the application by creating a context where 
the view and the model can be linked together without ever needing to 
contain references to one another.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_w7dMsFgIEeSTYp88fJMr7g" name="model" visibility="private" type="_w1Fe8FgIEeSTYp88fJMr7g" association="_w8w0QVgIEeSTYp88fJMr7g"/>
        <ownedAttribute xmi:id="_w7dzwFgIEeSTYp88fJMr7g" name="view" visibility="private" type="_w2raYFgIEeSTYp88fJMr7g" association="_w8xbUVgIEeSTYp88fJMr7g"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8MzkFgIEeSTYp88fJMr7g" name="Controller" specification="_w1DpwFgIEeSTYp88fJMr7g">
          <ownedParameter xmi:id="_w8MzkVgIEeSTYp88fJMr7g" type="_w1DCsFgIEeSTYp88fJMr7g" direction="return"/>
          <language>java</language>
          <body>model = new Model(new IModelToView() {});
     view = new View(new IViewToModel() {
      
         @Override
         public String loadFile(String fileName) {
             return model.loadFile(fileName);
         }
         
         @Override
         public String parseFile() {
             return model.parseFile();
         }
         
         @Override
         public void playMusic() {
             model.playMusic();
         }
         
     });
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8MzklgIEeSTYp88fJMr7g" name="start" specification="_w1EQ0FgIEeSTYp88fJMr7g">
          <language>java</language>
          <body>model.start();
     view.start();
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8NaoFgIEeSTYp88fJMr7g" name="main" specification="_w1EQ0VgIEeSTYp88fJMr7g">
          <ownedParameter xmi:id="_w8NaoVgIEeSTYp88fJMr7g" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8NaolgIEeSTYp88fJMr7g" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() {
         public void run() {
             try {
                 Controller controller = new Controller();
                 controller.start();
             } catch (Exception e) {
                 e.printStackTrace();
             }
         }
     });
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_w1DpwFgIEeSTYp88fJMr7g" name="Controller" method="_w8MzkFgIEeSTYp88fJMr7g">
          <eAnnotations xmi:id="_w1DpwVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_w1DpwlgIEeSTYp88fJMr7g" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_w8hjtVgIEeSTYp88fJMr7g">
            <body>Constructor that builds the system.</body>
          </ownedComment>
          <ownedParameter xmi:id="_w1Dpw1gIEeSTYp88fJMr7g" type="_w1DCsFgIEeSTYp88fJMr7g" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_w1EQ0FgIEeSTYp88fJMr7g" name="start" method="_w8MzklgIEeSTYp88fJMr7g">
          <ownedComment xmi:id="_w8hjtlgIEeSTYp88fJMr7g">
            <body>Starts the system.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_w1EQ0VgIEeSTYp88fJMr7g" name="main" isStatic="true" method="_w8NaoFgIEeSTYp88fJMr7g">
          <ownedComment xmi:id="_w8hjt1gIEeSTYp88fJMr7g">
            <body>Launch the application.
     * 
     * @param args</body>
          </ownedComment>
          <ownedParameter xmi:id="_w1EQ0lgIEeSTYp88fJMr7g" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w1EQ01gIEeSTYp88fJMr7g" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w8w0QVgIEeSTYp88fJMr7g" name="" memberEnd="_w8w0QlgIEeSTYp88fJMr7g _w7dMsFgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w8w0QlgIEeSTYp88fJMr7g" name="" type="_w1DCsFgIEeSTYp88fJMr7g" association="_w8w0QVgIEeSTYp88fJMr7g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_w8xbUVgIEeSTYp88fJMr7g" name="" memberEnd="_w8xbUlgIEeSTYp88fJMr7g _w7dzwFgIEeSTYp88fJMr7g">
        <ownedEnd xmi:id="_w8xbUlgIEeSTYp88fJMr7g" name="" type="_w1DCsFgIEeSTYp88fJMr7g" association="_w8xbUVgIEeSTYp88fJMr7g"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_wzVygFgIEeSTYp88fJMr7g" name="provided">
      <packagedElement xmi:type="uml:Package" xmi:id="_wzVygVgIEeSTYp88fJMr7g" name="abcParser">
        <packagedElement xmi:type="uml:Class" xmi:id="_w1MzsFgIEeSTYp88fJMr7g" name="ABCParser">
          <ownedComment xmi:id="_w8iKyFgIEeSTYp88fJMr7g">
            <body>Parses an abc file into IPhrase music structures&lt;br/>&#xD;
&#xD;
Usage: &lt;br/>&#xD;
ABCParser parser = new ABCParser(&quot;/data/aMusicFile.abc&quot;); &lt;br/>&#xD;
IPhrase phrase = parser.parse(); &lt;br/>&#xD;
&#xD;
Cases handled:&lt;br/>&#xD;
- single notes with and without accidentals and naturals with regards to measures&lt;br/>&#xD;
- chords&lt;br/>&#xD;
- dotted notes&lt;br/>&#xD;
- grace notes&lt;br/>&#xD;
- repeats, including first and second repeats.&lt;br/>&#xD;
- triplets &lt;br/>&#xD;
- tuplets&lt;br/>&#xD;
- all headers&lt;br/>&#xD;
- quoted text&lt;br/>&#xD;
- D.C. al fine&lt;br/>&#xD;
- EOF (End Of File)&lt;br/>&#xD;
&lt;br/>&#xD;
All other cases ignored.&#xD;
&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w7isQFgIEeSTYp88fJMr7g" name="abcT" visibility="private" type="_w2WDMFgIEeSTYp88fJMr7g" association="_w82T0FgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7jTUVgIEeSTYp88fJMr7g" name="beginningTarget" visibility="private" type="_w1XLwFgIEeSTYp88fJMr7g" association="_w82T01gIEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7jTUlgIEeSTYp88fJMr7g" value="new DecoratorSeqList()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7j6YFgIEeSTYp88fJMr7g" name="jumpTargetStack" visibility="private" type="_w6x3QFgIEeSTYp88fJMr7g" association="_w8264VgIEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7j6YlgIEeSTYp88fJMr7g" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7khcVgIEeSTYp88fJMr7g" name="jumpSecondRepeatStack" visibility="private" type="_w6x3QFgIEeSTYp88fJMr7g" association="_w83h8VgIEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7lIgVgIEeSTYp88fJMr7g" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7lIg1gIEeSTYp88fJMr7g" name="makeSeqListAlgo" visibility="private" type="_w2LrIFgIEeSTYp88fJMr7g" association="_w84JAVgIEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7lvkFgIEeSTYp88fJMr7g" value="new ATokVisitor(new ITokVisitorCmd() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Default behavior is to ignore any unrecognized tokens by merely proceeding to the next one.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unhandled Token: &quot; + host);&#xD;&#xA;&#x9;&#x9;&#x9;return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}) {&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7lvklgIEeSTYp88fJMr7g" name="isGrace" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7lvk1gIEeSTYp88fJMr7g" value="false"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7mWoVgIEeSTYp88fJMr7g" name="grace_multiplier" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7mWolgIEeSTYp88fJMr7g" value="0.2"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7mWpFgIEeSTYp88fJMr7g" name="graceDuration" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7m9sFgIEeSTYp88fJMr7g" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7m9slgIEeSTYp88fJMr7g" name="dottedCorrection" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7m9s1gIEeSTYp88fJMr7g" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7nkwFgIEeSTYp88fJMr7g" name="checkNextNoteAlgo" visibility="private" type="_w2LrIFgIEeSTYp88fJMr7g" association="_w84wEVgIEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7nkwVgIEeSTYp88fJMr7g" value="new ATokVisitor(&#xD;&#xA;&#x9;&#x9;&#x9;new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No dotted modification detected.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;abcT.putBack(host); // put token back to be reprocessed&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// later&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = 0.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return params[0]; // return duration unchanged.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;}) {&#xD;&#xA;&#x9;&#x9;// Initializer block for internal visitor&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;&lt;&quot;, new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is halved, the next dotted&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0] / 2.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Notes parsed \&quot;&quot; + id&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;\&quot; dotting.  durationCorrection = &quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ dottedCorrection);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;>&quot;, new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is dotted, the next note halved&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = -duration / 2.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;duration -= dottedCorrection;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Notes parsed \&quot;&quot; + id&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;\&quot; dotting.  durationCorrection = &quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ dottedCorrection);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7nkw1gIEeSTYp88fJMr7g" name="accidentalNotes" visibility="private" type="_w1rU0FgIEeSTYp88fJMr7g" association="_w85XIVgIEeSTYp88fJMr7g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w7nkxFgIEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7nkxVgIEeSTYp88fJMr7g" value="new HashSet&lt;Note>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8OBtlgIEeSTYp88fJMr7g" name="popJumpTarget" specification="_w1NawFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8OBt1gIEeSTYp88fJMr7g" type="_w1XLwFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>if (jumpTargetStack.isEmpty())&#xD;
			return beginningTarget;&#xD;
		else&#xD;
			return jumpTargetStack.pop();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8OBuFgIEeSTYp88fJMr7g" name="pushJumpTarget" specification="_w5mykVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8OBuVgIEeSTYp88fJMr7g" name="target" type="_w1XLwFgIEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>jumpTargetStack.push(target);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8OowFgIEeSTYp88fJMr7g" name="ABCParser" specification="_w1OB0FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8OowVgIEeSTYp88fJMr7g" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8OowlgIEeSTYp88fJMr7g" type="_w1MzsFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
			abcT = new ABCTokenizer(inputFileName);&#xD;
&#xD;
			// ------ EOF -----------------------------------------------------&#xD;
			ITokVisitorCmd eofCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					return MTSeqList.Singleton;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Note -----------------------------------------------------&#xD;
			ITokVisitorCmd noteCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Note note = makeNote(host);&#xD;
					System.out.println(&quot;Note parsed: &quot; + note);&#xD;
&#xD;
					return new NESeqList(note, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Header-------------------------------------------&#xD;
			// Same command for all headers&#xD;
			ITokVisitorCmd headerCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Header header = new Header(id, host.getLexeme());&#xD;
					System.out.println(&quot;Header parsed: &quot; + header);&#xD;
					return new NESeqList(header, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Chord----------------------------------------------&#xD;
			ITokVisitorCmd chordStartCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				// Internal visitor to get rest of chord&#xD;
				ATokVisitor makeChordAlgo = new ATokVisitor(&#xD;
						new ITokVisitorCmd() {&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								throw new IllegalArgumentException(&#xD;
										&quot;ABCParser.chordCmd: Non-Note token encountered:&quot;&#xD;
												+ host);&#xD;
							}&#xD;
&#xD;
						}) {&#xD;
					// Initializer block for internal visitor&#xD;
					{&#xD;
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								Note note = makeNote(host);&#xD;
								System.out&#xD;
										.println(&quot;Chord parsed Note: &quot; + note);&#xD;
								((Vector&lt;Note>) params[0]).add(note);&#xD;
								return abcT.getNextToken().execute(&#xD;
										makeChordAlgo, params);&#xD;
							}&#xD;
						});&#xD;
&#xD;
						this.addCmd(&quot;]&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								Vector&lt;Note> vNotes = (Vector&lt;Note>) params[0];&#xD;
								Note[] result = new Note[vNotes.size()];&#xD;
								for (int i = 0; i &lt; vNotes.size(); i++)&#xD;
									result[i] = vNotes.get(i);&#xD;
								return result;&#xD;
							}&#xD;
						});&#xD;
&#xD;
					}&#xD;
				};&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Note[] notes = (Note[]) abcT.getNextToken().execute(&#xD;
							makeChordAlgo, new Vector&lt;Note>());&#xD;
					Chord chord = new Chord(notes);&#xD;
					System.out.println(&quot;Chord parsed: &quot; + chord);&#xD;
					return new NESeqList(chord, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Grace Note Start---------------------------------------&#xD;
			ITokVisitorCmd graceStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					System.out.println(&quot;Grace Start parsed.&quot;);&#xD;
					isGrace = true; // Set grace flag on&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Grace Note End--------------------------------------------&#xD;
			ITokVisitorCmd graceEndCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					System.out.println(&quot;Grace End parsed.&quot;);&#xD;
					isGrace = false; // Set grace flag on&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Tuplet----------------------------------------------&#xD;
			ITokVisitorCmd tupletCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				// Internal visitor to get rest of chord&#xD;
				ATokVisitor makeTupletAlgo = new ATokVisitor(&#xD;
						new ITokVisitorCmd() {&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								throw new IllegalArgumentException(&#xD;
										&quot;ABCParser.tupletCmd: Non-Note token encountered: &quot;&#xD;
												+ host);&#xD;
							}&#xD;
&#xD;
						}) {&#xD;
					// Initializer block for internal visitor&#xD;
					{&#xD;
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								int count = (Integer) params[0];&#xD;
								Vector&lt;Note> vNotes = ((Vector&lt;Note>) params[1]);&#xD;
&#xD;
								Note note = makeNote(host);&#xD;
								System.out.println(&quot;Tuplet parsed Note: &quot;&#xD;
										+ note + &quot; count = &quot; + count);&#xD;
								vNotes.add(note);&#xD;
&#xD;
								if (1 == count) {&#xD;
									Note[] result = new Note[vNotes.size()];&#xD;
									for (int i = 0; i &lt; vNotes.size(); i++)&#xD;
										result[i] = vNotes.get(i);&#xD;
									return result;&#xD;
								} else {&#xD;
									return abcT.getNextToken().execute(&#xD;
											makeTupletAlgo, --count, vNotes);&#xD;
								}&#xD;
							}&#xD;
						});&#xD;
&#xD;
					}&#xD;
				};&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					int nNotes = Integer.parseInt(host.getLexeme());&#xD;
&#xD;
					Note[] notes = (Note[]) abcT.getNextToken().execute(&#xD;
							makeTupletAlgo, nNotes, new Vector&lt;Note>());&#xD;
&#xD;
					NoteCollection result;&#xD;
&#xD;
					if (3 == nNotes) {&#xD;
						result = new Triplet(notes[0], notes[1], notes[2]);&#xD;
					} else {&#xD;
						result = new Tuplet(notes);&#xD;
					}&#xD;
					System.out.println(&quot;Tuplet parsed: &quot; + result);&#xD;
					return new NESeqList(result, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Measure bar --------------------------------------------&#xD;
			ITokVisitorCmd measureBarCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					accidentalNotes.clear(); // clear any accidentals&#xD;
					System.out&#xD;
							.println(&quot;Measure bar parsed.  Accidental Notes cleared.&quot;);&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Repeat Start -----------------------------------------&#xD;
			ITokVisitorCmd repeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList repeatStart = new DecoratorSeqList();&#xD;
					pushJumpTarget(repeatStart);&#xD;
					System.out.println(&quot;Repeat Start parsed&quot;);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					repeatStart.setDecoree(result);&#xD;
					return result;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Repeat End -----------------------------------------&#xD;
			ITokVisitorCmd repeatEndCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					ISeqList jumpTarget = popJumpTarget();&#xD;
					System.out.println(&quot;Repeat End parsed&quot;);&#xD;
					if (jumpSecondRepeatStack.isEmpty()) {&#xD;
						return new ToggleDecoratorSeqList(jumpTarget,&#xD;
								(ISeqList) abcT.getNextToken().execute(&#xD;
										makeSeqListAlgo, params));&#xD;
					} else {&#xD;
						abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
						return jumpTarget;&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ First Repeat Start Repeat --------------------------&#xD;
			ITokVisitorCmd firstRepeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = new DecoratorSeqList();&#xD;
					jumpSecondRepeatStack.push(secondRepeatStart);&#xD;
					System.out&#xD;
							.println(&quot;First Repeat Start parsed.  ID = &quot; + id);&#xD;
					return new ToggleDecoratorSeqList((ISeqList) abcT&#xD;
							.getNextToken().execute(makeSeqListAlgo, params),&#xD;
							secondRepeatStart);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Second Repeat Start Repeat --------------------------&#xD;
			ITokVisitorCmd secondRepeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack&#xD;
							.pop();&#xD;
					System.out.println(&quot;Second Repeat Start parsed.  ID = &quot;&#xD;
							+ id);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					secondRepeatStart.setDecoree(result);&#xD;
					return result;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Alt. Second Repeat Start Repeat --------------------------&#xD;
			/**&#xD;
			 * This covers the &quot;:|2&quot; token which includes the repeat.&#xD;
			 */&#xD;
			ITokVisitorCmd secondRepeatStartAltCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack&#xD;
							.pop();&#xD;
					System.out&#xD;
							.println(&quot;Second Repeat Start Alt. parsed.  ID = &quot;&#xD;
									+ id);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					secondRepeatStart.setDecoree(result);&#xD;
					return popJumpTarget();&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Quote processing --------------------------&#xD;
			ITokVisitorCmd quoteCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				FineToggleDecoratorSeqList fineToggle = new FineToggleDecoratorSeqList();&#xD;
&#xD;
				boolean isSwapped = false;&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					if (host.getLexeme().equals(&quot;_fine&quot;)) {&#xD;
&#xD;
						System.out.println(&quot;\&quot;_fine\&quot; parsed&quot;);&#xD;
						fineToggle.setDecoree(0, (ISeqList) abcT.getNextToken()&#xD;
								.execute(makeSeqListAlgo, params));&#xD;
						return fineToggle;&#xD;
					} else if (host.getLexeme().equals(&quot;_D.C al Fine&quot;)) {&#xD;
						if (isSwapped) {&#xD;
							System.out.println(&quot;\&quot;_D.C al Fine\&quot; parsed&quot;);&#xD;
							return new ISeqList() {&#xD;
&#xD;
								@Override&#xD;
								public Object execute(IPhraseVisitor algo,&#xD;
										Object... params) {&#xD;
									fineToggle.setFine();&#xD;
									return beginningTarget&#xD;
											.execute(algo, params);&#xD;
								}&#xD;
							};&#xD;
						} else {&#xD;
							isSwapped = true;&#xD;
							System.out&#xD;
									.println(&quot;\&quot;_D.C al Fine\&quot; parsed, but swapped for next token.&quot;);&#xD;
							return swapToken(host).execute(makeSeqListAlgo,&#xD;
									params);&#xD;
						}&#xD;
					} else {&#xD;
						System.out.println(&quot;Quote parsed - ignored&quot;);&#xD;
						return abcT.getNextToken().execute(makeSeqListAlgo,&#xD;
								params);&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ---- Add Commands to Visitor------------------------------&#xD;
&#xD;
			makeSeqListAlgo.addCmd(&quot;EOF&quot;, eofCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Note&quot;, noteCmd);&#xD;
&#xD;
			String headers = &quot;ABCDEFGHIKLMNOPQRSTWXZ&quot;;&#xD;
			for (int i = 0; i &lt; headers.length(); i++) {&#xD;
				makeSeqListAlgo.addCmd(&quot;&quot; + headers.charAt(i), headerCmd);&#xD;
			}&#xD;
&#xD;
			makeSeqListAlgo.addCmd(&quot;[&quot;, chordStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;{&quot;, graceStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;}&quot;, graceEndCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Tuplet&quot;, tupletCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|&quot;, measureBarCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|:&quot;, repeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;:|&quot;, repeatEndCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|1&quot;, firstRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;[1&quot;, firstRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;[2&quot;, secondRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|2&quot;, secondRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;:|2&quot;, secondRepeatStartAltCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Quote&quot;, quoteCmd);&#xD;
		} catch (Exception e) {&#xD;
			System.err.println(&quot;ABCParser constructor exception: &quot; + e);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Oow1gIEeSTYp88fJMr7g" name="parse" specification="_w1Oo41gIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8OoxFgIEeSTYp88fJMr7g" type="_w1g8wFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>ISeqList beginning = (ISeqList) abcT.getNextToken().execute(&#xD;
				makeSeqListAlgo, MTSeqList.Singleton);&#xD;
		beginningTarget.setDecoree(beginning);&#xD;
		return beginning;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8OoxVgIEeSTYp88fJMr7g" name="makeNote" specification="_w5nZoVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8OoxlgIEeSTYp88fJMr7g" name="host" type="_w2RKslgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8Oox1gIEeSTYp88fJMr7g" type="_w1rU0FgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>char name = 'C';&#xD;
		int octave = 0;&#xD;
		int accidental = 0;&#xD;
		double duration = 1.0;&#xD;
		boolean isNatural = false;&#xD;
&#xD;
		String lex = host.getLexeme();&#xD;
&#xD;
		// get accidental value&#xD;
		int i = 0;&#xD;
		for (; i &lt; lex.length(); i++) {&#xD;
			if (Character.isLetter(lex.charAt(i))) {&#xD;
				break;&#xD;
			}&#xD;
			if (lex.charAt(i) == '^') {&#xD;
				accidental += +1;&#xD;
			} else if (lex.charAt(i) == '_') {&#xD;
				accidental += -1;&#xD;
			} else if (lex.charAt(i) == '=') {&#xD;
				isNatural = true;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (Character.isLowerCase(lex.charAt(i))) {&#xD;
			octave++;&#xD;
		}&#xD;
		name = Character.toUpperCase(lex.charAt(i));&#xD;
		i++;&#xD;
&#xD;
		// get octave value&#xD;
&#xD;
		for (; i &lt; lex.length(); i++) {&#xD;
			if (Character.isDigit(lex.charAt(i)) || '/' == lex.charAt(i)) {&#xD;
				break;&#xD;
			}&#xD;
			if ('\'' == lex.charAt(i))&#xD;
				octave += +1;&#xD;
			else if (',' == lex.charAt(i))&#xD;
				octave += -1;&#xD;
		}&#xD;
&#xD;
		if (i &lt; lex.length()) {&#xD;
			if (Character.isDigit(lex.charAt(i))) {&#xD;
				int idx = lex.substring(i).indexOf('/');&#xD;
				if (-1 == idx) {&#xD;
					duration = Double.parseDouble(lex.substring(i));&#xD;
				} else if (lex.length() > i + idx + 1) {&#xD;
					duration = Double.parseDouble(lex.substring(i, i + idx))&#xD;
							/ Double.parseDouble(lex.substring(i + idx + 1));&#xD;
				} else {&#xD;
					duration = Double.parseDouble(lex.substring(i, i + idx)) / 2.0;&#xD;
				}&#xD;
			} else {&#xD;
				i++;&#xD;
				if (i &lt; lex.length()) {&#xD;
					duration /= Double.parseDouble(lex.substring(i));&#xD;
				} else {&#xD;
					duration /= 2.0; // Slash w/o number is divide by two.&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (isGrace) {&#xD;
			duration *= grace_multiplier;&#xD;
			graceDuration += duration; // sum the duration of the grace notes&#xD;
		} else if (graceDuration > 0.0) {&#xD;
			// Correct the length of the current note to get it back on beat.&#xD;
			duration -= graceDuration;&#xD;
			graceDuration = 0.0;&#xD;
		}&#xD;
&#xD;
		if (dottedCorrection != 0.0) {&#xD;
			duration += dottedCorrection;&#xD;
			dottedCorrection = 0.0;&#xD;
		}&#xD;
&#xD;
		duration = (Double) abcT.getNextToken().execute(checkNextNoteAlgo,&#xD;
				duration);&#xD;
&#xD;
		Note note = new Note(name, octave, accidental, duration, isNatural);&#xD;
&#xD;
		if (!isNatural) // naturals always override prior accidentals in measure&#xD;
			checkAccidentals(note);&#xD;
		return note;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8OoyFgIEeSTYp88fJMr7g" name="checkAccidentals" specification="_w5oAsFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8OoyVgIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {&#xD;
			if (n.getName() == note.getName()&#xD;
					&amp;&amp; n.getOctave() == note.getOctave()) {&#xD;
				System.out&#xD;
						.println(note&#xD;
								+ &quot; found in accidentals.  Overriding accidentals and isNatural to &quot;&#xD;
								+ n);&#xD;
				note.setAccidental(n.getAccidental());&#xD;
				note.setIsNatural(n.getIsNatural()); // this will override&#xD;
														// accidentals if true&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
		if (note.getAccidental() != 0 || note.getIsNatural()) {&#xD;
			addAccidental(note);&#xD;
		}&#xD;
		return;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8OoylgIEeSTYp88fJMr7g" name="addAccidental" specification="_w5oAslgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8Ooy1gIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>removeAccidental(note); // remove anything like this note&#xD;
		accidentalNotes.add(note); // put this specific note in&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8OozFgIEeSTYp88fJMr7g" name="removeAccidental" specification="_w5onwVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8OozVgIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {&#xD;
			if (n.getName() == note.getName()&#xD;
					&amp;&amp; n.getOctave() == note.getOctave()) {&#xD;
				accidentalNotes.remove(n);&#xD;
				// Check all notes, just to be safe&#xD;
			}&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8PP0FgIEeSTYp88fJMr7g" name="swapToken" specification="_w5onw1gIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8PP0VgIEeSTYp88fJMr7g" name="t" type="_w2RKslgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8PP0lgIEeSTYp88fJMr7g" type="_w2RKslgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>Token next = abcT.getNextToken();&#xD;
		abcT.putBack(t);&#xD;
		return next;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1NawFgIEeSTYp88fJMr7g" name="popJumpTarget" visibility="private" method="_w8OBtlgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8iKyVgIEeSTYp88fJMr7g">
              <body>Pull off the current jump target from the jump target stack. If the stack&#xD;
	 * is empty, return the proxy for the beginning of the phrase, as this is&#xD;
	 * the default jump target.&#xD;
	 * &#xD;
	 * @return The current jump target or the beginning of the phrase.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w5mykFgIEeSTYp88fJMr7g" type="_w1XLwFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w1OB0FgIEeSTYp88fJMr7g" name="ABCParser" method="_w8OowFgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w1Oo4FgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w1Oo4VgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8iKy1gIEeSTYp88fJMr7g">
              <body>Constructs a parser for the given ABC input file.   Does not actually run that parser yet.&#xD;
	 * Prints error message to System.err if there is a problem opening the given file.   The returned &#xD;
	 * parser will be null in the event of an error.&#xD;
	 * @param inputFileName&#xD;
	 *            the name of the input text file</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1OB0VgIEeSTYp88fJMr7g" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w1Oo4lgIEeSTYp88fJMr7g" type="_w1MzsFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w1Oo41gIEeSTYp88fJMr7g" name="parse" method="_w8Oow1gIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8iKzFgIEeSTYp88fJMr7g">
              <body>&#xD;
	 * Run the parser and parse the entire file, returning an IPhrase object that represents the entire piece of music.&#xD;
	 * &#xD;
	 * @return An IPhrase object</body>
            </ownedComment>
            <ownedParameter xmi:id="_w5nZoFgIEeSTYp88fJMr7g" type="_w1g8wFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w5mykVgIEeSTYp88fJMr7g" name="pushJumpTarget" visibility="private" method="_w8OBuFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8iKylgIEeSTYp88fJMr7g">
              <body>Push the given jump target onto the stack so that it is now the current&#xD;
	 * jump target. This corresponds to the innermost nested repeat.&#xD;
	 * &#xD;
	 * @param target&#xD;
	 *            The new current jump target.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w5myklgIEeSTYp88fJMr7g" name="target" type="_w1XLwFgIEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w5nZoVgIEeSTYp88fJMr7g" name="makeNote" visibility="private" method="_w8OoxVgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8iKzVgIEeSTYp88fJMr7g">
              <body>Parse a Note from the given Token&#xD;
	 * &#xD;
	 * @param host&#xD;
	 *            The Note token&#xD;
	 * @return A Note object</body>
            </ownedComment>
            <ownedParameter xmi:id="_w5nZolgIEeSTYp88fJMr7g" name="host" type="_w2RKslgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w5nZo1gIEeSTYp88fJMr7g" type="_w1rU0FgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w5oAsFgIEeSTYp88fJMr7g" name="checkAccidentals" visibility="private" method="_w8OoyFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8iKzlgIEeSTYp88fJMr7g">
              <body>Checks to see if the given Note is in the set of accidentals Checks name&#xD;
	 * and octave but not duration or accidental&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            The note to check</body>
            </ownedComment>
            <ownedParameter xmi:id="_w5oAsVgIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w5oAslgIEeSTYp88fJMr7g" name="addAccidental" visibility="private" method="_w8OoylgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8iKz1gIEeSTYp88fJMr7g">
              <body>Adds a note to the set of accidentals replaces any note with the same&#xD;
	 * name and octave. duration and accidental are ignored.&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            the Note to add.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w5onwFgIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w5onwVgIEeSTYp88fJMr7g" name="removeAccidental" visibility="private" method="_w8OozFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8iK0FgIEeSTYp88fJMr7g">
              <body>Removes a note from the set of accidentals Removes any note with the same&#xD;
	 * name and octave. duration and accidental are ignored.&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            the note to remove</body>
            </ownedComment>
            <ownedParameter xmi:id="_w5onwlgIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w5onw1gIEeSTYp88fJMr7g" name="swapToken" visibility="private" method="_w8PP0FgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8ix0FgIEeSTYp88fJMr7g">
              <body>Swap the given token for the next token in the tokenizer, returning the&#xD;
	 * next token. The given token will be the next token out of the tokenizer.&#xD;
	 * &#xD;
	 * @param t The token to be swapped into the tokenizer&#xD;
	 * @return the token that previously was next in the tokenizer.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w5onxFgIEeSTYp88fJMr7g" name="t" type="_w2RKslgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w5onxVgIEeSTYp88fJMr7g" type="_w2RKslgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w82T0FgIEeSTYp88fJMr7g" name="" memberEnd="_w82T0VgIEeSTYp88fJMr7g _w7isQFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w82T0VgIEeSTYp88fJMr7g" name="" type="_w1MzsFgIEeSTYp88fJMr7g" association="_w82T0FgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w82T01gIEeSTYp88fJMr7g" name="" memberEnd="_w82T1FgIEeSTYp88fJMr7g _w7jTUVgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w82T1FgIEeSTYp88fJMr7g" name="" type="_w1MzsFgIEeSTYp88fJMr7g" association="_w82T01gIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w8264VgIEeSTYp88fJMr7g" name="" memberEnd="_w8264lgIEeSTYp88fJMr7g _w7j6YFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w8264lgIEeSTYp88fJMr7g" name="" type="_w1MzsFgIEeSTYp88fJMr7g" association="_w8264VgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w83h8VgIEeSTYp88fJMr7g" name="" memberEnd="_w83h8lgIEeSTYp88fJMr7g _w7khcVgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w83h8lgIEeSTYp88fJMr7g" name="" type="_w1MzsFgIEeSTYp88fJMr7g" association="_w83h8VgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w84JAVgIEeSTYp88fJMr7g" name="" memberEnd="_w84JAlgIEeSTYp88fJMr7g _w7lIg1gIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w84JAlgIEeSTYp88fJMr7g" name="" type="_w1MzsFgIEeSTYp88fJMr7g" association="_w84JAVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w84wEVgIEeSTYp88fJMr7g" name="" memberEnd="_w84wElgIEeSTYp88fJMr7g _w7nkwFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w84wElgIEeSTYp88fJMr7g" name="" type="_w1MzsFgIEeSTYp88fJMr7g" association="_w84wEVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w85XIVgIEeSTYp88fJMr7g" name="" memberEnd="_w85XIlgIEeSTYp88fJMr7g _w7nkw1gIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w85XIlgIEeSTYp88fJMr7g" name="" type="_w1MzsFgIEeSTYp88fJMr7g" association="_w85XIVgIEeSTYp88fJMr7g"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_wzVyglgIEeSTYp88fJMr7g" name="music">
        <packagedElement xmi:type="uml:Class" xmi:id="_w1STQFgIEeSTYp88fJMr7g" name="APhraseVisitor" isAbstract="true">
          <ownedComment xmi:id="_w8ix0VgIEeSTYp88fJMr7g">
            <body>Command-based implementation of IPhraseVisitor that uses IPhraseVisitorCmds stored in a hash table.&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w7oL0VgIEeSTYp88fJMr7g" name="defaultCmd" visibility="private" type="_w1ix8FgIEeSTYp88fJMr7g" association="_w85-MVgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7oy4VgIEeSTYp88fJMr7g" name="cmds" visibility="private" type="_w1ix8FgIEeSTYp88fJMr7g" association="_w86lQVgIEeSTYp88fJMr7g">
            <qualifier xmi:id="_w7pZ8FgIEeSTYp88fJMr7g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7oy4lgIEeSTYp88fJMr7g" value="new Hashtable&lt;String, IPhraseVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_w5rrEFgIEeSTYp88fJMr7g" client="_w1STQFgIEeSTYp88fJMr7g" supplier="_w1iK4FgIEeSTYp88fJMr7g" contract="_w1iK4FgIEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8PP01gIEeSTYp88fJMr7g" name="APhraseVisitor" specification="_w1S6UFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8PP1FgIEeSTYp88fJMr7g" type="_w1STQFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>defaultCmd = new IPhraseVisitorCmd() {&#xD;
			public Object apply(String idx, IPhrase host, Object... inps) {&#xD;
				throw new IllegalArgumentException(&#xD;
						&quot;APhraseVisitor: Unknown index encountered: &quot; + idx);&#xD;
			}&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8PP1VgIEeSTYp88fJMr7g" name="APhraseVisitor" specification="_w5rrEVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8PP1lgIEeSTYp88fJMr7g" name="defaultCmd" type="_w1ix8FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8PP11gIEeSTYp88fJMr7g" type="_w1STQFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8P24FgIEeSTYp88fJMr7g" name="caseAt" specification="_w6zscVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8P24VgIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8P24lgIEeSTYp88fJMr7g" name="host" type="_w1g8wFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8P241gIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8P25FgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8P25VgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {&#xD;
			return cmds.get(id).apply(id, host, params);&#xD;
		} else {&#xD;
			return defaultCmd.apply(id, host, params);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8P25lgIEeSTYp88fJMr7g" name="addCmd" specification="_w5sSIlgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8P251gIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8P26FgIEeSTYp88fJMr7g" name="cmd" type="_w1ix8FgIEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>cmds.put(id, cmd);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1S6UFgIEeSTYp88fJMr7g" name="APhraseVisitor" method="_w8PP01gIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w1S6UVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w1S6UlgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8ix0lgIEeSTYp88fJMr7g">
              <body>Constructor that installs a default cmd that throws an IllegalArgumentException on any unknown host.</body>
            </ownedComment>
            <ownedComment xmi:id="_w8ix01gIEeSTYp88fJMr7g">
              <body>Abstract extended visitor implementation that uses a dictionary of commands to associate commands with host IDs.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1S6U1gIEeSTYp88fJMr7g" type="_w1STQFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w5rrEVgIEeSTYp88fJMr7g" name="APhraseVisitor" method="_w8PP1VgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w5rrE1gIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w5sSIFgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8ix1FgIEeSTYp88fJMr7g">
              <body>Constructor that sets the default cmd to the supplied cmd.&#xD;
	 * @param defaultCmd   the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w5rrElgIEeSTYp88fJMr7g" name="defaultCmd" type="_w1ix8FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w5sSIVgIEeSTYp88fJMr7g" type="_w1STQFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w5sSIlgIEeSTYp88fJMr7g" name="addCmd" method="_w8P25lgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8ix1VgIEeSTYp88fJMr7g">
              <body>Add the given command to the dictionary, associated with the given id value.&#xD;
	 * @param id The id of the host that will use this command&#xD;
	 * @param cmd The command that will be run when the host calls for it.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w5sSI1gIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w5sSJFgIEeSTYp88fJMr7g" name="cmd" type="_w1ix8FgIEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w6zscVgIEeSTYp88fJMr7g" name="caseAt" method="_w8P24FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w6zsclgIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6zsc1gIEeSTYp88fJMr7g" name="host" type="_w1g8wFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w6zsdFgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w60TgVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6zsdVgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w1VWkFgIEeSTYp88fJMr7g" name="Chord">
          <ownedComment xmi:id="_w8ix1lgIEeSTYp88fJMr7g">
            <body>A collection of notes that make up a Chord.  All of the notes should&#xD;
be played simultaneously.   The last note defines the length of all the notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_w8ix11gIEeSTYp88fJMr7g">
            <body>A collection of Notes all played at once</body>
          </ownedComment>
          <generalization xmi:id="_w5v8gVgIEeSTYp88fJMr7g" general="_w1wNUFgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7pZ8VgIEeSTYp88fJMr7g" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7pZ8lgIEeSTYp88fJMr7g" value="&quot;Chord&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8P26VgIEeSTYp88fJMr7g" name="Chord" specification="_w5tgQFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8P26lgIEeSTYp88fJMr7g" name="notes" type="_w1rU0FgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8P261gIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8P27FgIEeSTYp88fJMr7g" type="_w1VWkFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>super(notes);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Qd8FgIEeSTYp88fJMr7g" name="execute" specification="_w606kFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8Qd8VgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8Qd8lgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8Qd81gIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8Qd9FgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Qd9VgIEeSTYp88fJMr7g" name="toString" specification="_w1V9oFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8Qd9lgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Chord(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1V9oFgIEeSTYp88fJMr7g" name="toString" method="_w8Qd9VgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w1V9oVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w5tgQFgIEeSTYp88fJMr7g" name="Chord" method="_w8P26VgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w5vVcFgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w5vVcVgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_w5tgQVgIEeSTYp88fJMr7g" name="notes" type="_w1rU0FgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w5vVdFgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w5vVc1gIEeSTYp88fJMr7g" type="_w1VWkFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w606kFgIEeSTYp88fJMr7g" name="execute" method="_w8Qd8FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w606kVgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w606klgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w606lVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w606k1gIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w1XLwFgIEeSTYp88fJMr7g" name="DecoratorSeqList">
          <ownedComment xmi:id="_w8ix2FgIEeSTYp88fJMr7g">
            <body>An ISeqList that transparently routes the visitor execution to its decoree.  &#xD;
This class is primarily used to provide a placeholder when a the music should flow &#xD;
to a specific point in the sequence but that point has not yet been calculated, as occurs&#xD;
for instance, during the processing of repeats.    When that target point is finally calculated, &#xD;
the decoree can be set and the decorated target will behave identically to the target.&#xD;
This decorator can also be used to dynamically change the flow of the music by changing the target.  &#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_w8ix2VgIEeSTYp88fJMr7g">
            <body>Decorated ISeqList used as a transparent proxy placeholder.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w7pZ81gIEeSTYp88fJMr7g" name="decoree" visibility="private" type="_w1kAEFgIEeSTYp88fJMr7g" association="_w87MUVgIEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7qBAFgIEeSTYp88fJMr7g" value="MTSeqList.Singleton"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_w5wjkFgIEeSTYp88fJMr7g" client="_w1XLwFgIEeSTYp88fJMr7g" supplier="_w1kAEFgIEeSTYp88fJMr7g" contract="_w1kAEFgIEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Qd91gIEeSTYp88fJMr7g" name="DecoratorSeqList" specification="_w5wjkVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8Qd-FgIEeSTYp88fJMr7g" name="decoree" type="_w1kAEFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8Qd-VgIEeSTYp88fJMr7g" type="_w1XLwFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>setDecoree(decoree);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Qd-lgIEeSTYp88fJMr7g" name="setDecoree" specification="_w5xKo1gIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8Qd-1gIEeSTYp88fJMr7g" name="decoree" type="_w1kAEFgIEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>this.decoree = decoree;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8RFAFgIEeSTYp88fJMr7g" name="execute" specification="_w61holgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8RFAVgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8RFAlgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8RFA1gIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8RFBFgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return decoree.execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1Xy0FgIEeSTYp88fJMr7g" name="DecoratorSeqList">
            <eAnnotations xmi:id="_w1YZ4FgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w1YZ4VgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_w1YZ41gIEeSTYp88fJMr7g" type="_w1XLwFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w5wjkVgIEeSTYp88fJMr7g" name="DecoratorSeqList" method="_w8Qd91gIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w5xKoFgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w5xKoVgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8ix2lgIEeSTYp88fJMr7g">
              <body>Constructor used to set the decoree to a known value at construction time.&#xD;
	 * @param decoree The decoree phrase sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_w5wjklgIEeSTYp88fJMr7g" name="decoree" type="_w1kAEFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w5xKolgIEeSTYp88fJMr7g" type="_w1XLwFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w5xKo1gIEeSTYp88fJMr7g" name="setDecoree" method="_w8Qd-lgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8ix21gIEeSTYp88fJMr7g">
              <body>Setter methods used to set the decoree.&#xD;
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w5xKpFgIEeSTYp88fJMr7g" name="decoree" type="_w1kAEFgIEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w61holgIEeSTYp88fJMr7g" name="execute" method="_w8RFAFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w61ho1gIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w61hpFgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w62IslgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w62IsFgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w1aPEFgIEeSTYp88fJMr7g" name="FineToggleDecoratorSeqList">
          <ownedComment xmi:id="_w8ix3FgIEeSTYp88fJMr7g">
            <body>The class is used to implement &quot;Da Capo al fine&quot; or &quot;D.C. al fine&quot;, &#xD;
which is to repeat from the beginning up to the &quot;fine&quot; marker.&#xD;
&#xD;
this class assumes that only two target decorees are ever used.&#xD;
&#xD;
The is ToggleDecoratorSeqList that can be signaled to switch to the &#xD;
another target.   Be default, the target decoree (#0) remains the same even &#xD;
when it is accessed.  But after setFine() is called, the target decoree&#xD;
is switched to the #1 decoree (the &quot;fine&quot; target, usually an MTSeqList because&#xD;
it is the end of the piece).   After the #1 decoree is used, the target&#xD;
decoree is advanced to the next available decoree, which , for two decorees, &#xD;
would be back to the #0 decoree.  The class returns to default behavior then.&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_w8ix3VgIEeSTYp88fJMr7g">
            <body>ToggleDecoratorSeqList with controllable cycling</body>
          </ownedComment>
          <generalization xmi:id="_w5y_0VgIEeSTYp88fJMr7g" general="_w1yCgFgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7qBAlgIEeSTYp88fJMr7g" name="isFine" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7qBA1gIEeSTYp88fJMr7g" value="false"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8RFBVgIEeSTYp88fJMr7g" name="FineToggleDecoratorSeqList" specification="_w1a2IFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8RFBlgIEeSTYp88fJMr7g" type="_w1aPEFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8RFB1gIEeSTYp88fJMr7g" name="FineToggleDecoratorSeqList" specification="_w5xxsFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8RFCFgIEeSTYp88fJMr7g" name="decorees" type="_w1kAEFgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8RFCVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8RFClgIEeSTYp88fJMr7g" type="_w1aPEFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>super(decorees);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8RFC1gIEeSTYp88fJMr7g" name="setFine" specification="_w1a2JFgIEeSTYp88fJMr7g">
            <language>java</language>
            <body>this.isFine = true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8RsEFgIEeSTYp88fJMr7g" name="execute" specification="_w62vwFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8RsEVgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8RsElgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8RsE1gIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8RsFFgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>if (isFine) {&#xD;
			isFine = false;&#xD;
			this.setTargetToDecoree(1);&#xD;
			return super.execute(algo, params);&#xD;
		} else&#xD;
			return getTargetDecoree().execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8RsFVgIEeSTYp88fJMr7g" name="toString" specification="_w1bdMFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8RsFlgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1a2IFgIEeSTYp88fJMr7g" name="FineToggleDecoratorSeqList" method="_w8RFBVgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w1a2IVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w1a2IlgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8ix3lgIEeSTYp88fJMr7g">
              <body>Instantiates the class with two MTSeqList decorees.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1a2I1gIEeSTYp88fJMr7g" type="_w1aPEFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w1a2JFgIEeSTYp88fJMr7g" name="setFine" method="_w8RFC1gIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8ix31gIEeSTYp88fJMr7g">
              <body>Sets the system to use the &quot;fine&quot; decorator at the next execution.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_w1bdMFgIEeSTYp88fJMr7g" name="toString" method="_w8RsFVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w1bdMVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w5xxsFgIEeSTYp88fJMr7g" name="FineToggleDecoratorSeqList" method="_w8RFB1gIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w5yYwVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w5yYwlgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_w5yYwFgIEeSTYp88fJMr7g" name="decorees" type="_w1kAEFgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w5yYxVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w5yYxFgIEeSTYp88fJMr7g" type="_w1aPEFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w62vwFgIEeSTYp88fJMr7g" name="execute" method="_w8RsEFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w62vwVgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w62vwlgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w63W0FgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w62vw1gIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w1dSYFgIEeSTYp88fJMr7g" name="Header">
          <ownedComment xmi:id="_w8ix4FgIEeSTYp88fJMr7g">
            <body>An abc Header.  Headers are identified by a one character &quot;id&quot; and&#xD;
can have an arbitrary string value. &lt;br/>&#xD;
Note that this class represents many different *types* of headers, &#xD;
each with its own id value.</body>
          </ownedComment>
          <ownedComment xmi:id="_w8jY4FgIEeSTYp88fJMr7g">
            <body>A single Header class represents multiple, distinct header hosts.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w7qoEVgIEeSTYp88fJMr7g" name="_id" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7qoE1gIEeSTYp88fJMr7g" name="_value" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_w5zm4FgIEeSTYp88fJMr7g" client="_w1dSYFgIEeSTYp88fJMr7g" supplier="_w1g8wFgIEeSTYp88fJMr7g" contract="_w1g8wFgIEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8RsF1gIEeSTYp88fJMr7g" name="Header" specification="_w1d5cFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8RsGFgIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8RsGVgIEeSTYp88fJMr7g" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8RsGlgIEeSTYp88fJMr7g" type="_w1dSYFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>_id = id;&#xD;
		_value = value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8RsG1gIEeSTYp88fJMr7g" name="execute" specification="_w6394FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8RsHFgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8RsHVgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8RsHlgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8RsH1gIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_id, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8STIFgIEeSTYp88fJMr7g" name="getID" specification="_w1eggFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8STIVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8STIlgIEeSTYp88fJMr7g" name="getValue" specification="_w1egglgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8STI1gIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8STJFgIEeSTYp88fJMr7g" name="toString" specification="_w1fHkFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8STJVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id + &quot;:&quot; + _value;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1d5cFgIEeSTYp88fJMr7g" name="Header" method="_w8RsF1gIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w1d5c1gIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w1d5dFgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8jY4VgIEeSTYp88fJMr7g">
              <body>Create a header out of an id and value&#xD;
	 * &#xD;
	 * @param id    - one character corresponding to the abc header name&#xD;
	 * @param value - arbitrary string value of the header</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1d5cVgIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w1d5clgIEeSTYp88fJMr7g" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w1d5dVgIEeSTYp88fJMr7g" type="_w1dSYFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w1eggFgIEeSTYp88fJMr7g" name="getID" method="_w8STIFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8jY4lgIEeSTYp88fJMr7g">
              <body>Accessor for the id.&#xD;
	 * @return the _id</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1eggVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w1egglgIEeSTYp88fJMr7g" name="getValue" method="_w8STIlgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8jY41gIEeSTYp88fJMr7g">
              <body>Accessor for the text value of this header.&#xD;
	 * @return the _value</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1egg1gIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w1fHkFgIEeSTYp88fJMr7g" name="toString" method="_w8STJFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8jY5FgIEeSTYp88fJMr7g">
              <body>String representation of this header: &quot;id: text&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1fHkVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w6394FgIEeSTYp88fJMr7g" name="execute" method="_w8RsG1gIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w6394VgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w6394lgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w64k8lgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w64k8FgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_w1gVsFgIEeSTYp88fJMr7g" name="INote">
          <ownedComment xmi:id="_w8jY5VgIEeSTYp88fJMr7g">
            <body>Note interface for Notes and collections of Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_w8jY5lgIEeSTYp88fJMr7g">
            <body>A generalized notion of a note</body>
          </ownedComment>
          <generalization xmi:id="_w50N8FgIEeSTYp88fJMr7g" general="_w1g8wFgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_w1g8wFgIEeSTYp88fJMr7g" name="IPhrase">
          <ownedComment xmi:id="_w8jY51gIEeSTYp88fJMr7g">
            <body>Top level of a piece of abc music.  The generalized notion of a playable piece of music.</body>
          </ownedComment>
          <ownedComment xmi:id="_w8jY6FgIEeSTYp88fJMr7g">
            <body>Abstract Host&#xD;
Each concrete host calls its associated case on the visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_w65zEFgIEeSTYp88fJMr7g" name="execute">
            <ownedParameter xmi:id="_w65zEVgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w65zElgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w66aIVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w65zE1gIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_w1iK4FgIEeSTYp88fJMr7g" name="IPhraseVisitor">
          <ownedComment xmi:id="_w8jY6VgIEeSTYp88fJMr7g">
            <body>Interface for a Phrase visitor.</body>
          </ownedComment>
          <ownedComment xmi:id="_w8jY6lgIEeSTYp88fJMr7g">
            <body>Abstract extended visitor.&#xD;
Supplies case behavior for every host.</body>
          </ownedComment>
          <ownedOperation xmi:id="_w67BMFgIEeSTYp88fJMr7g" name="caseAt">
            <ownedParameter xmi:id="_w67BMVgIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w67BMlgIEeSTYp88fJMr7g" name="host" type="_w1g8wFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w67BM1gIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w67oQlgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w67oQFgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_w1ix8FgIEeSTYp88fJMr7g" name="IPhraseVisitorCmd">
          <ownedComment xmi:id="_w8jY61gIEeSTYp88fJMr7g">
            <body>The command used by APhraseVisitor that is associated with a host or hosts.&#xD;
@author rixner</body>
          </ownedComment>
          <ownedComment xmi:id="_w8jY7FgIEeSTYp88fJMr7g">
            <body>Abstract command used by APhraseVisitor.  Each command is associated with a particular host(s).</body>
          </ownedComment>
          <ownedOperation xmi:id="_w68PUVgIEeSTYp88fJMr7g" name="apply">
            <ownedParameter xmi:id="_w682YFgIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w682YVgIEeSTYp88fJMr7g" name="host" type="_w1g8wFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w682YlgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w682ZVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w682Y1gIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_w1kAEFgIEeSTYp88fJMr7g" name="ISeqList">
          <ownedComment xmi:id="_w8jY7VgIEeSTYp88fJMr7g">
            <body>Interface for sequential lists of IPhrases.</body>
          </ownedComment>
          <ownedComment xmi:id="_w8jY7lgIEeSTYp88fJMr7g">
            <body>A list of IPhrases&#xD;
e.g. an ordered sequence of Notes.</body>
          </ownedComment>
          <generalization xmi:id="_w51cEFgIEeSTYp88fJMr7g" general="_w1g8wFgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w1knIFgIEeSTYp88fJMr7g" name="MTSeqList">
          <ownedComment xmi:id="_w8jY71gIEeSTYp88fJMr7g">
            <body>An empty sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_w8jY8FgIEeSTYp88fJMr7g">
            <body>An empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w7rPIVgIEeSTYp88fJMr7g" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7rPIlgIEeSTYp88fJMr7g" value="&quot;MTSeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7r2MFgIEeSTYp88fJMr7g" name="Singleton" isLeaf="true" isStatic="true" type="_w1knIFgIEeSTYp88fJMr7g" isReadOnly="true" association="_w87zYVgIEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7r2MVgIEeSTYp88fJMr7g" value="new MTSeqList()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_w51cEVgIEeSTYp88fJMr7g" client="_w1knIFgIEeSTYp88fJMr7g" supplier="_w1kAEFgIEeSTYp88fJMr7g" contract="_w1kAEFgIEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8STJlgIEeSTYp88fJMr7g" name="execute" specification="_w6-EgFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8STJ1gIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8STKFgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8STKVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8STKlgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8S6MFgIEeSTYp88fJMr7g" name="toString" specification="_w1l1QlgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8S6MVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;{}&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1lOMFgIEeSTYp88fJMr7g" name="MTSeqList" visibility="private">
            <eAnnotations xmi:id="_w1lOMVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w1lOMlgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_w1l1QVgIEeSTYp88fJMr7g" type="_w1knIFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w1l1QlgIEeSTYp88fJMr7g" name="toString" method="_w8S6MFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w1l1Q1gIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w6-EgFgIEeSTYp88fJMr7g" name="execute" method="_w8STJlgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w6-EgVgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w6-EglgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w6-EhVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6-Eg1gIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w1nDYFgIEeSTYp88fJMr7g" name="NESeqList">
          <ownedComment xmi:id="_w8jY8VgIEeSTYp88fJMr7g">
            <body>A non-empty (&quot;cons&quot;) sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_w8jY8lgIEeSTYp88fJMr7g">
            <body>A non-empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w7r2MlgIEeSTYp88fJMr7g" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7r2M1gIEeSTYp88fJMr7g" value="&quot;NESeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7r2NFgIEeSTYp88fJMr7g" name="_first" visibility="private" type="_w1g8wFgIEeSTYp88fJMr7g" association="_w88acVgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7tEUFgIEeSTYp88fJMr7g" name="_rest" visibility="private" type="_w1kAEFgIEeSTYp88fJMr7g" association="_w89BgVgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7tEUlgIEeSTYp88fJMr7g" name="_toStringAlgo" visibility="private" isStatic="true" type="_w1iK4FgIEeSTYp88fJMr7g" association="_w89okVgIEeSTYp88fJMr7g"/>
          <interfaceRealization xmi:id="_w52DIFgIEeSTYp88fJMr7g" client="_w1nDYFgIEeSTYp88fJMr7g" supplier="_w1kAEFgIEeSTYp88fJMr7g" contract="_w1kAEFgIEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8S6MlgIEeSTYp88fJMr7g" name="NESeqList" specification="_w52qMFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8S6M1gIEeSTYp88fJMr7g" name="first" type="_w1g8wFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8S6NFgIEeSTYp88fJMr7g" name="rest" type="_w1kAEFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8S6NVgIEeSTYp88fJMr7g" type="_w1nDYFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>this._rest = rest;&#xD;
		this._first = first;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8S6NlgIEeSTYp88fJMr7g" name="getFirst" specification="_w1nqcFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8S6N1gIEeSTYp88fJMr7g" type="_w1g8wFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return _first;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8S6OFgIEeSTYp88fJMr7g" name="getRest" specification="_w1oRgFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8S6OVgIEeSTYp88fJMr7g" type="_w1kAEFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return _rest;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8S6OlgIEeSTYp88fJMr7g" name="execute" specification="_w6_SoFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8S6O1gIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8S6PFgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8S6PVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8S6PlgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8ThQFgIEeSTYp88fJMr7g" name="setToStringAlgo" specification="_w53RQFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8ThQVgIEeSTYp88fJMr7g" name="stringAlgo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>_toStringAlgo = stringAlgo;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8ThQlgIEeSTYp88fJMr7g" name="getToStringAlgo" specification="_w1o4kFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8ThQ1gIEeSTYp88fJMr7g" type="_w1iK4FgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return _toStringAlgo;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8ThRFgIEeSTYp88fJMr7g" name="toString" specification="_w1o4kVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8ThRVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) _rest.execute(_toStringAlgo, &quot;{&quot; + _first.toString());&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1nqcFgIEeSTYp88fJMr7g" name="getFirst" method="_w8S6NlgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8j_8VgIEeSTYp88fJMr7g">
              <body>Accessor method for the first element&#xD;
	 * @return the IPhrase that is the first element of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_w52qNlgIEeSTYp88fJMr7g" type="_w1g8wFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w1oRgFgIEeSTYp88fJMr7g" name="getRest" method="_w8S6OFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8j_8lgIEeSTYp88fJMr7g">
              <body>Accessor method for the rest of the lsit&#xD;
	 * @return the rest of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_w52qN1gIEeSTYp88fJMr7g" type="_w1kAEFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w1o4kFgIEeSTYp88fJMr7g" name="getToStringAlgo" visibility="package" isStatic="true" method="_w8ThQlgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8j_9FgIEeSTYp88fJMr7g">
              <body>Getter for the _toStringAlgo helper.  Only for use internally inside this package&#xD;
	 * so ToggleDecoratorSeqList and FineToggleDecoratorSeqList can use the same visitor.&#xD;
	 * @return the toStringAlgo helper visitor</body>
            </ownedComment>
            <ownedParameter xmi:id="_w53RQlgIEeSTYp88fJMr7g" type="_w1iK4FgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w1o4kVgIEeSTYp88fJMr7g" name="toString" method="_w8ThRFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8j_9VgIEeSTYp88fJMr7g">
              <body>Run a visitor over the list to convert it to a String.  &#xD;
	 * Delegates to the rest of the list using the helper algo, with the accumulator &#xD;
	 * (params[0]) set to &quot;{&quot;+_first.toString().  &#xD;
	 * @return &quot;{a, b, c, d}&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1o4klgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w52qMFgIEeSTYp88fJMr7g" name="NESeqList" method="_w8S6MlgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w52qM1gIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w52qNFgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8j_8FgIEeSTYp88fJMr7g">
              <body>Cons an IPhrase to a Sequence List.&#xD;
	 * @param first The first element of the sequence&#xD;
	 * @param rest The rest of the sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_w52qMVgIEeSTYp88fJMr7g" name="first" type="_w1g8wFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w52qMlgIEeSTYp88fJMr7g" name="rest" type="_w1kAEFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w52qNVgIEeSTYp88fJMr7g" type="_w1nDYFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w53RQFgIEeSTYp88fJMr7g" name="setToStringAlgo" isStatic="true" method="_w8ThQFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8j_81gIEeSTYp88fJMr7g">
              <body>Setter for the _toStringAlgo helper.  This non-typical method is provided solely &#xD;
	 * for the purpose of enabling the student to install their toStringAlgo into the &#xD;
	 * read-only provided code.&#xD;
	 * @param stringAlgo The helper algo to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w53RQVgIEeSTYp88fJMr7g" name="stringAlgo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w6_SoFgIEeSTYp88fJMr7g" name="execute" method="_w8S6OlgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w6_SoVgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w6_SolgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w6_5sVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6_So1gIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w1rU0FgIEeSTYp88fJMr7g" name="Note">
          <ownedComment xmi:id="_w8j_9lgIEeSTYp88fJMr7g">
            <body>Basic class representing musical Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_w8j_91gIEeSTYp88fJMr7g">
            <body>A playable note or rest.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w7trYVgIEeSTYp88fJMr7g" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7uScFgIEeSTYp88fJMr7g" value="&quot;Note&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7uScVgIEeSTYp88fJMr7g" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7uSclgIEeSTYp88fJMr7g" value="'Z'"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7uSc1gIEeSTYp88fJMr7g" name="octave">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7u5gFgIEeSTYp88fJMr7g" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7u5gVgIEeSTYp88fJMr7g" name="accidental" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7u5glgIEeSTYp88fJMr7g" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7u5g1gIEeSTYp88fJMr7g" name="duration">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7u5hFgIEeSTYp88fJMr7g" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7vgkFgIEeSTYp88fJMr7g" name="isNatural" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7vgkVgIEeSTYp88fJMr7g" value="false"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_w534UFgIEeSTYp88fJMr7g" client="_w1rU0FgIEeSTYp88fJMr7g" supplier="_w1gVsFgIEeSTYp88fJMr7g" contract="_w1gVsFgIEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8ThRlgIEeSTYp88fJMr7g" name="Note" specification="_w1si8FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8ThR1gIEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8ThSFgIEeSTYp88fJMr7g" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8ThSVgIEeSTYp88fJMr7g" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8ThSlgIEeSTYp88fJMr7g" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8ThS1gIEeSTYp88fJMr7g" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8ThTFgIEeSTYp88fJMr7g" type="_w1rU0FgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>setName(name);&#xD;
		setOctave(octave);&#xD;
		setAccidental(accidental);&#xD;
		setDuration(duration);&#xD;
		setIsNatural(isNatural);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8UIUFgIEeSTYp88fJMr7g" name="toString" specification="_w1tKBFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8UIUVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String s = &quot;(&quot;;&#xD;
		s += Character.toString(name);&#xD;
		int a = accidental;&#xD;
		if (isNatural) {&#xD;
			s += &quot;n&quot;;&#xD;
		}&#xD;
		while (a &lt; 0) {&#xD;
			s += &quot;b&quot;;&#xD;
			a++;&#xD;
		}&#xD;
		while (a > 0) {&#xD;
			s += &quot;#&quot;;&#xD;
			a--;&#xD;
		}&#xD;
		s += &quot;, &quot; + Integer.toString(octave) + &quot;, &quot;;&#xD;
		s += String.format(&quot;%3.2f&quot;, duration);&#xD;
		s += &quot;)&quot;;&#xD;
&#xD;
		return s;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8UIUlgIEeSTYp88fJMr7g" name="execute" specification="_w7BH0FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8UIU1gIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8UIVFgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8UIVVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8UIVlgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8UIV1gIEeSTYp88fJMr7g" name="setName" specification="_w1txEFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8UIWFgIEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>switch (name) {&#xD;
		case 'a':&#xD;
		case 'A':&#xD;
			this.name = 'A';&#xD;
			break;&#xD;
&#xD;
		case 'b':&#xD;
		case 'B':&#xD;
			this.name = 'B';&#xD;
			break;&#xD;
&#xD;
		case 'c':&#xD;
		case 'C':&#xD;
			this.name = 'C';&#xD;
			break;&#xD;
&#xD;
		case 'd':&#xD;
		case 'D':&#xD;
			this.name = 'D';&#xD;
			break;&#xD;
&#xD;
		case 'e':&#xD;
		case 'E':&#xD;
			this.name = 'E';&#xD;
			break;&#xD;
&#xD;
		case 'f':&#xD;
		case 'F':&#xD;
			this.name = 'F';&#xD;
			break;&#xD;
&#xD;
		case 'g':&#xD;
		case 'G':&#xD;
			this.name = 'G';&#xD;
			break;&#xD;
&#xD;
		default:&#xD;
			this.name = 'Z';&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8UIWVgIEeSTYp88fJMr7g" name="setAccidental" specification="_w1txElgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8UIWlgIEeSTYp88fJMr7g" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.accidental = accidental;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8UvYFgIEeSTYp88fJMr7g" name="getIsNatural" specification="_w1uYIFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8UvYVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return isNatural;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8UvYlgIEeSTYp88fJMr7g" name="setIsNatural" specification="_w1uYIlgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8UvY1gIEeSTYp88fJMr7g" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>this.isNatural = isNatural;&#xD;
		if (isNatural)&#xD;
			accidental = 0;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1si8FgIEeSTYp88fJMr7g" name="Note" method="_w8ThRlgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w1tKAVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w1tKAlgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8j_-FgIEeSTYp88fJMr7g">
              <body>Constructor for the class&#xD;
	 * @param name  The name of the note&#xD;
	 * @param octave The octave of the note w.r.t. middle C.  Zero = same octave as middle C.&#xD;
	 * @param accidental accidental setting sharp > 0, flat &lt; 0&#xD;
	 * @param duration duration of note&#xD;
	 * @param isNatural flag to override key signature.  True if note should be natural, overriding key signature.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1si8VgIEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w1si8lgIEeSTYp88fJMr7g" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w1si81gIEeSTYp88fJMr7g" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w1si9FgIEeSTYp88fJMr7g" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w1tKAFgIEeSTYp88fJMr7g" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w1tKA1gIEeSTYp88fJMr7g" type="_w1rU0FgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w1tKBFgIEeSTYp88fJMr7g" name="toString" method="_w8UIUFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8j_-VgIEeSTYp88fJMr7g">
              <body>Returns a string representation of the Note  &#xD;
	 * @return &quot;(name, octave, duration)&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1tKBVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w1txEFgIEeSTYp88fJMr7g" name="setName" method="_w8UIV1gIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8j_-lgIEeSTYp88fJMr7g">
              <body>Accessor to set the name of the note&#xD;
	 * @param name - the name to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1txEVgIEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w1txElgIEeSTYp88fJMr7g" name="setAccidental" method="_w8UIWVgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8j_-1gIEeSTYp88fJMr7g">
              <body>Accessor to set the accidental value&#xD;
	 * @param accidental - the accidental to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1txE1gIEeSTYp88fJMr7g" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w1uYIFgIEeSTYp88fJMr7g" name="getIsNatural" method="_w8UvYFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8j__FgIEeSTYp88fJMr7g">
              <body>Accessor for isNatural flag&#xD;
	 * @return isNatural flag setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1uYIVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w1uYIlgIEeSTYp88fJMr7g" name="setIsNatural" method="_w8UvYlgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8j__VgIEeSTYp88fJMr7g">
              <body>Settor for isNatural flag.  Accidentals will be set to zero if isNatural is true.&#xD;
	 * @param isNatural  New isNatural setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1uYI1gIEeSTYp88fJMr7g" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w7BH0FgIEeSTYp88fJMr7g" name="execute" method="_w8UIUlgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w7BH0VgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w7Bu4FgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w7Bu41gIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w7Bu4VgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w1wNUFgIEeSTYp88fJMr7g" name="NoteCollection" isAbstract="true">
          <ownedComment xmi:id="_w8j__lgIEeSTYp88fJMr7g">
            <body>A collection of multiple notes</body>
          </ownedComment>
          <ownedComment xmi:id="_w8j__1gIEeSTYp88fJMr7g">
            <body>A collection of Notes</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w7wHoFgIEeSTYp88fJMr7g" name="notes" visibility="protected" type="_w1rU0FgIEeSTYp88fJMr7g" association="_w8-2sFgIEeSTYp88fJMr7g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w7wHoVgIEeSTYp88fJMr7g" value="*"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_w55GcFgIEeSTYp88fJMr7g" client="_w1wNUFgIEeSTYp88fJMr7g" supplier="_w1gVsFgIEeSTYp88fJMr7g" contract="_w1gVsFgIEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8VWcFgIEeSTYp88fJMr7g" name="NoteCollection" specification="_w55tgFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8VWcVgIEeSTYp88fJMr7g" name="notes" type="_w1rU0FgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8VWclgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8VWc1gIEeSTYp88fJMr7g" type="_w1wNUFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>this.notes = notes;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8VWdFgIEeSTYp88fJMr7g" name="getNotes" specification="_w1w0YFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8VWdVgIEeSTYp88fJMr7g" type="_w1rU0FgIEeSTYp88fJMr7g" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8VWdlgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>return notes;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1w0YFgIEeSTYp88fJMr7g" name="getNotes" method="_w8VWdFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8kAAFgIEeSTYp88fJMr7g">
              <body>Accessor for the array of notes in this collection&#xD;
	 * @return the array of notes</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1w0YVgIEeSTYp88fJMr7g" type="_w1rU0FgIEeSTYp88fJMr7g" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w1w0YlgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w55tgFgIEeSTYp88fJMr7g" name="NoteCollection" method="_w8VWcFgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w55tglgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w55tg1gIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_w55tgVgIEeSTYp88fJMr7g" name="notes" type="_w1rU0FgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w55thlgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w55thVgIEeSTYp88fJMr7g" type="_w1wNUFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w1yCgFgIEeSTYp88fJMr7g" name="ToggleDecoratorSeqList">
          <ownedComment xmi:id="_w8kAAVgIEeSTYp88fJMr7g">
            <body>Multiple Decorator ISeqList where the active decoree (the &quot;target&quot;) is&#xD;
toggled (cycled, actually) through all the available decorees.   &#xD;
This is arguably a State Design Pattern where each decoree is &#xD;
considered to be another state of the system.&#xD;
This is used to implement repeats where the first time through, the notes are linked&#xD;
back to a repeat start (decoree #0) but the next time through, the next note is the one&#xD;
after the repeat (decoree #1).&#xD;
&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_w8knAFgIEeSTYp88fJMr7g">
            <body>Decorated ISeqList that transparently cycles through multiple targets (decorees)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w7wusFgIEeSTYp88fJMr7g" name="decorees" visibility="private" type="_w1kAEFgIEeSTYp88fJMr7g" association="_w8_dwVgIEeSTYp88fJMr7g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w7wusVgIEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7wus1gIEeSTYp88fJMr7g" value="{ MTSeqList.Singleton, MTSeqList.Singleton }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7xVwFgIEeSTYp88fJMr7g" name="targetIdx" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7xVwVgIEeSTYp88fJMr7g" value="0"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_w56UkVgIEeSTYp88fJMr7g" client="_w1yCgFgIEeSTYp88fJMr7g" supplier="_w1kAEFgIEeSTYp88fJMr7g" contract="_w1kAEFgIEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8V9gFgIEeSTYp88fJMr7g" name="ToggleDecoratorSeqList" specification="_w56UklgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8V9gVgIEeSTYp88fJMr7g" name="decorees" type="_w1kAEFgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8V9glgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8V9g1gIEeSTYp88fJMr7g" type="_w1yCgFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>setDecorees(decorees);&#xD;
		setTargetToDecoree(0);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8V9hFgIEeSTYp88fJMr7g" name="setDecorees" specification="_w57isFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8V9hVgIEeSTYp88fJMr7g" name="decorees" type="_w1kAEFgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8V9hlgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>this.decorees = decorees;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8V9h1gIEeSTYp88fJMr7g" name="setDecoree" specification="_w57itVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8V9iFgIEeSTYp88fJMr7g" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8V9iVgIEeSTYp88fJMr7g" name="decoree" type="_w1kAEFgIEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>this.decorees[idx] = decoree;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8V9ilgIEeSTYp88fJMr7g" name="setTargetToDecoree" specification="_w1z3sFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8V9i1gIEeSTYp88fJMr7g" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.targetIdx = targetIdx;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8WkkFgIEeSTYp88fJMr7g" name="getTargetDecoree" specification="_w10ewFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8WkkVgIEeSTYp88fJMr7g" type="_w1kAEFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return decorees[targetIdx];&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8WkklgIEeSTYp88fJMr7g" name="execute" specification="_w7DkEFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8Wkk1gIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8WklFgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8WklVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8WkllgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>ISeqList target = decorees[targetIdx++];&#xD;
		if (targetIdx >= decorees.length)&#xD;
			targetIdx = 0; // This must be set before the delegate because it may be needed before the recursion returns.&#xD;
		return target.execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Wkl1gIEeSTYp88fJMr7g" name="toString" specification="_w10ewVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8WkmFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1zQoFgIEeSTYp88fJMr7g" name="ToggleDecoratorSeqList">
            <eAnnotations xmi:id="_w1zQoVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w1zQolgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_w1zQpFgIEeSTYp88fJMr7g" type="_w1yCgFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w1z3sFgIEeSTYp88fJMr7g" name="setTargetToDecoree" method="_w8V9ilgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8knAlgIEeSTYp88fJMr7g">
              <body>Used to explicitly set the target (active) decoree if needed.&#xD;
	 * @param targetIdx  the index of the target decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1z3sVgIEeSTYp88fJMr7g" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w10ewFgIEeSTYp88fJMr7g" name="getTargetDecoree" method="_w8WkkFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8knA1gIEeSTYp88fJMr7g">
              <body>Accessor for the current target (active) decoree&#xD;
	 * @return  The current target (active) decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_w58JwlgIEeSTYp88fJMr7g" type="_w1kAEFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w10ewVgIEeSTYp88fJMr7g" name="toString" method="_w8Wkl1gIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w11F0FgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w56UklgIEeSTYp88fJMr7g" name="ToggleDecoratorSeqList" method="_w8V9gFgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w567oVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w567olgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_w567oFgIEeSTYp88fJMr7g" name="decorees" type="_w1kAEFgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w567pVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w567pFgIEeSTYp88fJMr7g" type="_w1yCgFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w57isFgIEeSTYp88fJMr7g" name="setDecorees" method="_w8V9hFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w57isVgIEeSTYp88fJMr7g" name="decorees" type="_w1kAEFgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w57is1gIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w57itVgIEeSTYp88fJMr7g" name="setDecoree" method="_w8V9h1gIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8knAVgIEeSTYp88fJMr7g">
              <body>Setter methods used to set a particular decoree.   &#xD;
	 * The specified index must already exist.&#xD;
	 * @param idx The index of the decoree to replace&#xD;
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w58JwFgIEeSTYp88fJMr7g" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w58JwVgIEeSTYp88fJMr7g" name="decoree" type="_w1kAEFgIEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w7DkEFgIEeSTYp88fJMr7g" name="execute" method="_w8WkklgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w7DkEVgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w7DkElgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w7ELIlgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w7ELIFgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w127AFgIEeSTYp88fJMr7g" name="Triplet">
          <ownedComment xmi:id="_w8knBFgIEeSTYp88fJMr7g">
            <body>A musical triplet.  The three notes should be played with 2/3 of their&#xD;
indicated duration.</body>
          </ownedComment>
          <ownedComment xmi:id="_w8knBVgIEeSTYp88fJMr7g">
            <body>A set of 3 notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_w5-mAFgIEeSTYp88fJMr7g" general="_w1wNUFgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7xVw1gIEeSTYp88fJMr7g" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7xVxFgIEeSTYp88fJMr7g" value="&quot;Triplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8WkmVgIEeSTYp88fJMr7g" name="Triplet" specification="_w59X4FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8WkmlgIEeSTYp88fJMr7g" name="n1" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8Wkm1gIEeSTYp88fJMr7g" name="n2" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8WknFgIEeSTYp88fJMr7g" name="n3" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8WknVgIEeSTYp88fJMr7g" type="_w127AFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>super(n1, n2, n3);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8WknlgIEeSTYp88fJMr7g" name="execute" specification="_w7FZQFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8XLoFgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8XLoVgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8XLolgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8XLo1gIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8XLpFgIEeSTYp88fJMr7g" name="toString" specification="_w14JIFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8XLpVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Triplet(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w14JIFgIEeSTYp88fJMr7g" name="toString" method="_w8XLpFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w14JIVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w59X4FgIEeSTYp88fJMr7g" name="Triplet" method="_w8WkmVgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w59-81gIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w59-9FgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_w59-8FgIEeSTYp88fJMr7g" name="n1" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w59-8VgIEeSTYp88fJMr7g" name="n2" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w59-8lgIEeSTYp88fJMr7g" name="n3" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w59-9VgIEeSTYp88fJMr7g" type="_w127AFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w7FZQFgIEeSTYp88fJMr7g" name="execute" method="_w8WknlgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w7FZQVgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w7FZQlgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w7GAUVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w7FZQ1gIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w15-UFgIEeSTYp88fJMr7g" name="Tuplet">
          <ownedComment xmi:id="_w8knBlgIEeSTYp88fJMr7g">
            <body>Class that represents a tuplet, a series of notes played in a fraction of their normal total time.&#xD;
The exact fraction depends on the meter and the number of notes in the tuplet.&#xD;
A triplet is a specific type of tuplet.&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_w8knB1gIEeSTYp88fJMr7g">
            <body>A arbitrary set of notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_w5_0IFgIEeSTYp88fJMr7g" general="_w1wNUFgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7x80FgIEeSTYp88fJMr7g" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7x80VgIEeSTYp88fJMr7g" value="&quot;Tuplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8XLplgIEeSTYp88fJMr7g" name="Tuplet" specification="_w5-mAVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8XLp1gIEeSTYp88fJMr7g" name="notes" type="_w1rU0FgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8XLqFgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8XLqVgIEeSTYp88fJMr7g" type="_w15-UFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>super(notes);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8XLqlgIEeSTYp88fJMr7g" name="execute" specification="_w7HOcFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8XLq1gIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8XLrFgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8XLrVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8XLrlgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8XLr1gIEeSTYp88fJMr7g" name="toString" specification="_w16lYFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8XLsFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Tuplet(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w16lYFgIEeSTYp88fJMr7g" name="toString" method="_w8XLr1gIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w16lYVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w5-mAVgIEeSTYp88fJMr7g" name="Tuplet" method="_w8XLplgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w5_NEVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w5_NElgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_w5_NEFgIEeSTYp88fJMr7g" name="notes" type="_w1rU0FgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w5_NFVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w5_NFFgIEeSTYp88fJMr7g" type="_w15-UFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w7HOcFgIEeSTYp88fJMr7g" name="execute" method="_w8XLqlgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w7HOcVgIEeSTYp88fJMr7g" name="algo" type="_w1iK4FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w7HOclgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w7HOdVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w7HOc1gIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w85-MVgIEeSTYp88fJMr7g" name="" memberEnd="_w85-MlgIEeSTYp88fJMr7g _w7oL0VgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w85-MlgIEeSTYp88fJMr7g" name="" type="_w1STQFgIEeSTYp88fJMr7g" association="_w85-MVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w86lQVgIEeSTYp88fJMr7g" name="" memberEnd="_w86lQlgIEeSTYp88fJMr7g _w7oy4VgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w86lQlgIEeSTYp88fJMr7g" name="" type="_w1STQFgIEeSTYp88fJMr7g" association="_w86lQVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w87MUVgIEeSTYp88fJMr7g" name="" memberEnd="_w87MUlgIEeSTYp88fJMr7g _w7pZ81gIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w87MUlgIEeSTYp88fJMr7g" name="" type="_w1XLwFgIEeSTYp88fJMr7g" association="_w87MUVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w87zYVgIEeSTYp88fJMr7g" name="" memberEnd="_w87zYlgIEeSTYp88fJMr7g _w7r2MFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w87zYlgIEeSTYp88fJMr7g" name="" type="_w1knIFgIEeSTYp88fJMr7g" association="_w87zYVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w88acVgIEeSTYp88fJMr7g" name="" memberEnd="_w88aclgIEeSTYp88fJMr7g _w7r2NFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w88aclgIEeSTYp88fJMr7g" name="" type="_w1nDYFgIEeSTYp88fJMr7g" association="_w88acVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w89BgVgIEeSTYp88fJMr7g" name="" memberEnd="_w89BglgIEeSTYp88fJMr7g _w7tEUFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w89BglgIEeSTYp88fJMr7g" name="" type="_w1nDYFgIEeSTYp88fJMr7g" association="_w89BgVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w89okVgIEeSTYp88fJMr7g" name="" memberEnd="_w89oklgIEeSTYp88fJMr7g _w7tEUlgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w89oklgIEeSTYp88fJMr7g" name="" type="_w1nDYFgIEeSTYp88fJMr7g" association="_w89okVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w8-2sFgIEeSTYp88fJMr7g" name="" memberEnd="_w8-2sVgIEeSTYp88fJMr7g _w7wHoFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w8-2sVgIEeSTYp88fJMr7g" name="" type="_w1wNUFgIEeSTYp88fJMr7g" association="_w8-2sFgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w8_dwVgIEeSTYp88fJMr7g" name="" memberEnd="_w8_dwlgIEeSTYp88fJMr7g _w7wusFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w8_dwlgIEeSTYp88fJMr7g" name="" type="_w1yCgFgIEeSTYp88fJMr7g" association="_w8_dwVgIEeSTYp88fJMr7g"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_wzVyg1gIEeSTYp88fJMr7g" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_w2hCUFgIEeSTYp88fJMr7g" name="ABCInstrument">
          <ownedComment xmi:id="_w8nDR1gIEeSTYp88fJMr7g">
            <body>Represents an instrument as a name and an integer value&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w8B0cFgIEeSTYp88fJMr7g" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w8B0cVgIEeSTYp88fJMr7g" name="value" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8d5UFgIEeSTYp88fJMr7g" name="ABCInstrument" specification="_w2hpYFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8d5UVgIEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8d5UlgIEeSTYp88fJMr7g" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8d5U1gIEeSTYp88fJMr7g" type="_w2hCUFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>this.name = name;&#xD;
		this.value = value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8d5VFgIEeSTYp88fJMr7g" name="toString" specification="_w2iQcFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8d5VVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return name + &quot;: &quot; + value;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w2hpYFgIEeSTYp88fJMr7g" name="ABCInstrument" method="_w8d5UFgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w2hpY1gIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w2hpZFgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_w2hpYVgIEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2hpYlgIEeSTYp88fJMr7g" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2hpZVgIEeSTYp88fJMr7g" type="_w2hCUFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w2iQcFgIEeSTYp88fJMr7g" name="toString" method="_w8d5VFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w2i3gFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w2jekFgIEeSTYp88fJMr7g" name="ABCUtil">
          <ownedComment xmi:id="_w8nDSFgIEeSTYp88fJMr7g">
            <body>Singleton utility class that has methods for parsing,&#xD;
reading file content and getting the list of instruments.&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w8B0clgIEeSTYp88fJMr7g" name="Singleton" isLeaf="true" isStatic="true" type="_w2jekFgIEeSTYp88fJMr7g" isReadOnly="true" association="_w9E9UVgIEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8CbgFgIEeSTYp88fJMr7g" value="new ABCUtil()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8d5VlgIEeSTYp88fJMr7g" name="parseFraction" specification="_w2kFpFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8d5V1gIEeSTYp88fJMr7g" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8d5WFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String[] vals = frac.split(&quot;/&quot;);&#xD;
		if (vals.length != 2) {&#xD;
			throw new NumberFormatException(frac + &quot; is not a fraction.&quot;);&#xD;
		}&#xD;
		double num = Double.parseDouble(vals[0]);&#xD;
		double denom = Double.parseDouble(vals[1]);&#xD;
		return num / denom;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8d5WVgIEeSTYp88fJMr7g" name="parseTempo" specification="_w2kssVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8d5WlgIEeSTYp88fJMr7g" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8d5W1gIEeSTYp88fJMr7g" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8d5XFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String els[] = tempo.split(&quot;=&quot;);&#xD;
		double bpm = 0;&#xD;
		if (1 == els.length) {&#xD;
			bpm = Double.parseDouble(els[0]) / defaultNotesPerQuarterNote;&#xD;
		} else {&#xD;
			double note = parseFraction(els[0]);&#xD;
			bpm = Double.parseDouble(els[1]) / (0.25 / note);&#xD;
		}&#xD;
		return bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8d5XVgIEeSTYp88fJMr7g" name="getFileContents" specification="_w2lTwFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8d5XlgIEeSTYp88fJMr7g" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8d5X1gIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String fileContents = &quot;&quot;;&#xD;
&#xD;
		try {&#xD;
			InputStream is = this.getClass().getResource(filename).openStream();&#xD;
&#xD;
			BufferedReader input = new BufferedReader(new InputStreamReader(is));&#xD;
&#xD;
			try {&#xD;
				// use buffering, reading one line at a time&#xD;
				// FileReader always assumes default&#xD;
				// encoding is OK!&#xD;
&#xD;
				String line = null; // not declared within while loop&#xD;
&#xD;
				/*&#xD;
				 * readLine is a bit quirky : it returns the&#xD;
				 * content of a line MINUS the newline. it&#xD;
				 * returns null only for the END of the&#xD;
				 * stream. it returns an empty String if two&#xD;
				 * newlines appear in a row.&#xD;
				 */&#xD;
				while ((line = input.readLine()) != null) {&#xD;
					fileContents += line + &quot;\n&quot;;&#xD;
				}&#xD;
			} finally {&#xD;
				input.close();&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			return &quot;Error loading file: &quot; + filename + &quot;\n&quot; + e + &quot;\n&quot;;&#xD;
		}&#xD;
&#xD;
		return fileContents;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8egYFgIEeSTYp88fJMr7g" name="getInstruments" specification="_w2lTw1gIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8egYVgIEeSTYp88fJMr7g" type="_w2hCUFgIEeSTYp88fJMr7g" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8egYlgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			Synthesizer synth = MidiSystem.getSynthesizer();&#xD;
			synth.open();&#xD;
			Instrument[] instruments = synth.getAvailableInstruments();&#xD;
			ABCInstrument[] result = new ABCInstrument[instruments.length];&#xD;
			for (int i = 0; i &lt; instruments.length; i++) {&#xD;
				result[i] = new ABCInstrument(instruments[i].getName(),&#xD;
						instruments[i].getPatch().getProgram());&#xD;
			}&#xD;
&#xD;
			synth.close();&#xD;
			return result;&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.err.println(&quot;ABCUtil.getInstruments: &quot; + e);&#xD;
			return null;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w2jekVgIEeSTYp88fJMr7g" name="ABCUtil" visibility="private">
            <eAnnotations xmi:id="_w2kFoFgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w2kFoVgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_w2kFo1gIEeSTYp88fJMr7g" type="_w2jekFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w2kFpFgIEeSTYp88fJMr7g" name="parseFraction" method="_w8d5VlgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8nDSVgIEeSTYp88fJMr7g">
              <body>Return the evaluation of a string &quot;a/b&quot;.&#xD;
	 * &#xD;
	 * @param frac - a string containing a fraction&#xD;
	 * @return     - the result of evaluating the fraction</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2kFpVgIEeSTYp88fJMr7g" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2kssFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2kssVgIEeSTYp88fJMr7g" name="parseTempo" method="_w8d5WVgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8nDSlgIEeSTYp88fJMr7g">
              <body>Return the tempo given by the input string.  The returned value is in the &#xD;
	 * units of quarter notes per minute.&#xD;
	 * &#xD;
	 * Accepts &quot;bpm&quot; (beats per default note) or &quot;a/b=bpm&quot; (beats per a/b note).&#xD;
	 * &#xD;
	 * @param tempo                      - tempo represented as a string&#xD;
	 * @param defaultNotesPerQuarterNote - default notes per quarter note &#xD;
	 * @return                           - the tempo indicated by the string</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2ksslgIEeSTYp88fJMr7g" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2kss1gIEeSTYp88fJMr7g" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2kstFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2lTwFgIEeSTYp88fJMr7g" name="getFileContents" method="_w8d5XVgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8nDS1gIEeSTYp88fJMr7g">
              <body>Returns the contents of a text file, e.g. an abc file, as a single string.&#xD;
	 * @param filename the name of the file with respect to the default package, where &quot;/&quot; refers to the default package, e.g. a file in the &quot;data&quot; package would &quot;/data/myfile.abc&quot;&#xD;
	 * @return the contents of the file</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2lTwVgIEeSTYp88fJMr7g" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2lTwlgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2lTw1gIEeSTYp88fJMr7g" name="getInstruments" method="_w8egYFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8nDTFgIEeSTYp88fJMr7g">
              <body>Get an array of all the available instruments as ABCInstruments &#xD;
	 * where the instrument's value is the MIDI instrument number&#xD;
	 * &#xD;
	 * @return an array of ABCInstruments</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2lTxFgIEeSTYp88fJMr7g" type="_w2hCUFgIEeSTYp88fJMr7g" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w2l60FgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w2mh4FgIEeSTYp88fJMr7g" name="KeySignature">
          <ownedComment xmi:id="_w8nDTVgIEeSTYp88fJMr7g">
            <body>Utility class to simplify dealing with key signatures &lt;br/>&#xD;
Usage:&lt;br/>&#xD;
KeySignature keySig = new KeySignature(aKey); // aKey is a string representing a key, e.g. &quot;C&quot;, &quot;Bb&quot;, &quot;Am&quot;&lt;br/>&#xD;
Note adjustedNote = keySig.adjust(originalNote); // returns the Note object, adjusted so that it matches the key,&#xD;
e.g for key of &quot;D&quot;, an &quot;F&quot; --> &quot;F#&quot;.&lt;br/></body>
          </ownedComment>
          <ownedAttribute xmi:id="_w8CbgVgIEeSTYp88fJMr7g" name="_major" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8CbglgIEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8DCkFgIEeSTYp88fJMr7g" value="{ 0, 2, 2, 1, 2, 2, 2 //, 1&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w8DCkVgIEeSTYp88fJMr7g" name="_minor" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8DCklgIEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8DClFgIEeSTYp88fJMr7g" value="{ // Half steps in a Minor key&#xD;&#xA;&#x9;0, 2, 1, 2, 2, 1, 2 //, 2&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w8EQsFgIEeSTYp88fJMr7g" name="keymap" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <qualifier xmi:id="_w8EQs1gIEeSTYp88fJMr7g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8EQsVgIEeSTYp88fJMr7g" value="new Hashtable&lt;Character, Integer>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w8EQtFgIEeSTYp88fJMr7g" name="notes" visibility="private" type="_w2nI8FgIEeSTYp88fJMr7g" association="_w9E9VFgIEeSTYp88fJMr7g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8E3wFgIEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8E3wlgIEeSTYp88fJMr7g" value="{ new KeyNote('A', 0), new KeyNote('A', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('B', 0), new KeyNote('C', 0), new KeyNote('C', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('D', 0), new KeyNote('D', 1), new KeyNote('E', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('F', 0), new KeyNote('F', 1), new KeyNote('G', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w8E3xFgIEeSTYp88fJMr7g" name="fs_dsm" visibility="private" type="_w2nI8FgIEeSTYp88fJMr7g" association="_w9FkYVgIEeSTYp88fJMr7g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8E3xVgIEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w8Fe0VgIEeSTYp88fJMr7g" value="{ new KeyNote('A', 1), new KeyNote('B', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('C', 1), new KeyNote('D', 1), new KeyNote('E', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('F', 1), new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8egaVgIEeSTYp88fJMr7g" name="KeySignature" specification="_w2o-IFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8egalgIEeSTYp88fJMr7g" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8ega1gIEeSTYp88fJMr7g" type="_w2mh4FgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>// Get rid of spurious &quot;maj&quot; at the end, if it's there&#xD;
		if (key.endsWith(&quot;maj&quot;)) {&#xD;
			key = key.replace(&quot;maj&quot;, &quot;&quot;);&#xD;
		}&#xD;
&#xD;
		// Special case keys with 6 sharps&#xD;
		if ((key == &quot;F#&quot;) || (key == &quot;D#m&quot;)) {&#xD;
			for (KeyNote n : fs_dsm) {&#xD;
				keymap.put(n.letter, n.accidental);&#xD;
			}&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		char keynote = key.charAt(0);&#xD;
		int cur = -1;&#xD;
&#xD;
		for (int i = 0; i &lt; notes.length; i++) {&#xD;
			if (notes[i].letter == keynote) {&#xD;
				cur = i;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (cur == -1) {&#xD;
			System.out.println(&quot;Invalid key: &quot; + key);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		int[] steps = _major;&#xD;
&#xD;
		int idx = 1;&#xD;
		while (idx &lt; key.length()) {&#xD;
			switch (key.charAt(idx)) {&#xD;
			case '#':&#xD;
				cur += 1;&#xD;
				break;&#xD;
&#xD;
			case 'b':&#xD;
				cur -= 1;&#xD;
				break;&#xD;
&#xD;
			case 'm':&#xD;
				steps = _minor;&#xD;
				break;&#xD;
&#xD;
			default:&#xD;
				System.out.println(&quot;Invalid key: &quot; + key);&#xD;
				return;&#xD;
			}&#xD;
			idx++;&#xD;
		}&#xD;
&#xD;
		if (cur == -1) {&#xD;
			cur = notes.length - 1;&#xD;
		}&#xD;
&#xD;
		for (int i : steps) {&#xD;
			cur += i;&#xD;
			if (cur >= notes.length) {&#xD;
				cur -= notes.length;&#xD;
			}&#xD;
			KeyNote n = notes[cur];&#xD;
			insert(n);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8egbFgIEeSTYp88fJMr7g" name="convertflat" specification="_w2plMFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8egbVgIEeSTYp88fJMr7g" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8egblgIEeSTYp88fJMr7g" type="_w2nI8FgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>char next = (char) (n + 1);&#xD;
		if (next == 'H') {&#xD;
			next = 'A';&#xD;
		}&#xD;
		return new KeyNote(next, -1);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8fHcFgIEeSTYp88fJMr7g" name="insert" specification="_w6T9MVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8fHcVgIEeSTYp88fJMr7g" name="n" type="_w2nI8FgIEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>if (!keymap.containsKey(n.letter)) {&#xD;
			keymap.put(n.letter, n.accidental);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		if (n.accidental == 1) {&#xD;
			// Move sharp up to next flat&#xD;
			insert(convertflat(n.letter));&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		if ((n.accidental == 0) || (n.accidental == -1)) {&#xD;
			// Conflict, move higher note up to next flat&#xD;
			int a = keymap.get(n.letter);&#xD;
			a = Math.min(a, n.accidental);&#xD;
			insert(convertflat(n.letter));&#xD;
			keymap.put(n.letter, a);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		// Shouldn't get here&#xD;
		System.out.println(&quot;Should not reach here.&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8fHclgIEeSTYp88fJMr7g" name="map" specification="_w7VQ4VgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8fHc1gIEeSTYp88fJMr7g" name="note" type="_w7Up0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8fHdFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (keymap.containsKey(note)) {&#xD;
			return (int) keymap.get(note);&#xD;
		} else {&#xD;
			return 0;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8fHdVgIEeSTYp88fJMr7g" name="adjust" specification="_w6T9M1gIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8fHdlgIEeSTYp88fJMr7g" name="n" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8fHd1gIEeSTYp88fJMr7g" type="_w1rU0FgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>if (n.getAccidental() != 0 &amp;&amp; !n.getIsNatural()) {&#xD;
			return n; // Accidentals set and is not natural&#xD;
		} else if (n.getIsNatural()) {&#xD;
			return n; // override key signature&#xD;
		} else {&#xD;
			// normal key signature mapping applies&#xD;
			int accidental = map(n.getName());&#xD;
			if (accidental == 0) {&#xD;
				return n; // nothing to change&#xD;
			}&#xD;
			return new Note(n.getName(), n.getOctave(), accidental,&#xD;
					n.getDuration(), false); // must be false isNatural&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8fHeFgIEeSTYp88fJMr7g" name="printmap" specification="_w2qMQFgIEeSTYp88fJMr7g">
            <language>java</language>
            <body>System.out.println(keymap);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w2o-IFgIEeSTYp88fJMr7g" name="KeySignature" method="_w8egaVgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w2o-IlgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w2o-I1gIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8nqUFgIEeSTYp88fJMr7g">
              <body>Generate a &quot;Key&quot; object that enables easy access to the key signature.&#xD;
	 * &#xD;
	 * @param key        - String indicating key (i.e., &quot;C&quot; or &quot;D#m&quot;)</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2o-IVgIEeSTYp88fJMr7g" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2o-JFgIEeSTYp88fJMr7g" type="_w2mh4FgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w2plMFgIEeSTYp88fJMr7g" name="convertflat" visibility="private" method="_w8egbFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8nqUVgIEeSTYp88fJMr7g">
              <body>Helper method to convert a note to its equivalent flat version.&#xD;
	 * &#xD;
	 * @param n  - note letter&#xD;
	 * @return   - equivalent flat version of note n</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2plMVgIEeSTYp88fJMr7g" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6T9MFgIEeSTYp88fJMr7g" type="_w2nI8FgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w2qMQFgIEeSTYp88fJMr7g" name="printmap" method="_w8fHeFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8nqVVgIEeSTYp88fJMr7g">
              <body>Print the mapping for this key signature</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_w6T9MVgIEeSTYp88fJMr7g" name="insert" visibility="private" method="_w8fHcFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8nqUlgIEeSTYp88fJMr7g">
              <body>Helper method to insert the given note into the keymap.&#xD;
	 * &#xD;
	 * @param n  - note to add to the map</body>
            </ownedComment>
            <ownedParameter xmi:id="_w6T9MlgIEeSTYp88fJMr7g" name="n" type="_w2nI8FgIEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w6T9M1gIEeSTYp88fJMr7g" name="adjust" method="_w8fHdVgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8nqVFgIEeSTYp88fJMr7g">
              <body>Takes a note and returns the properly transposed note in this key signature&#xD;
	 *&#xD;
	 * @param n - note to be adjusted&#xD;
	 * @return A new, adjusted Note</body>
            </ownedComment>
            <ownedParameter xmi:id="_w6UkQFgIEeSTYp88fJMr7g" name="n" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w6UkQVgIEeSTYp88fJMr7g" type="_w1rU0FgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w7VQ4VgIEeSTYp88fJMr7g" name="map" visibility="private" method="_w8fHclgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8nqU1gIEeSTYp88fJMr7g">
              <body>Takes a note (with no accidentals) and returns the accidental for this&#xD;
	 * key signature.&#xD;
	 * &#xD;
	 * @param  note - in [A, B, C, D, E, F, G]&#xD;
	 * @return accidental for the note in this key signature [-1, 0, 1]</body>
            </ownedComment>
            <ownedParameter xmi:id="_w7V38FgIEeSTYp88fJMr7g" name="note" type="_w7Up0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w7V38VgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Class" xmi:id="_w2nI8FgIEeSTYp88fJMr7g" name="KeyNote" visibility="private">
            <ownedComment xmi:id="_w8nDTlgIEeSTYp88fJMr7g">
              <body>Utility class to keep track of the position of notes</body>
            </ownedComment>
            <ownedAttribute xmi:id="_w8DClVgIEeSTYp88fJMr7g" name="letter">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_w8DpoVgIEeSTYp88fJMr7g" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8egY1gIEeSTYp88fJMr7g" name="KeyNote" specification="_w2nwAFgIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w8egZFgIEeSTYp88fJMr7g" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w8egZVgIEeSTYp88fJMr7g" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w8egZlgIEeSTYp88fJMr7g" type="_w2nI8FgIEeSTYp88fJMr7g" direction="return"/>
              <language>java</language>
              <body>this.letter = letter;&#xD;
			this.accidental = accidental;&#xD;
		</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8egZ1gIEeSTYp88fJMr7g" name="toString" specification="_w2oXE1gIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w8egaFgIEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;&quot; + letter + accidental;&#xD;
		</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_w2nwAFgIEeSTYp88fJMr7g" name="KeyNote" visibility="package" method="_w8egY1gIEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_w2oXEFgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_w2oXEVgIEeSTYp88fJMr7g" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_w8nDT1gIEeSTYp88fJMr7g">
                <body>Constructor for the class&#xD;
		 * @param letter  The letter of the note&#xD;
		 * @param accidental  Whether or not the note is accidental:  -1 = flat, 0 = natural, +1 = sharp</body>
              </ownedComment>
              <ownedParameter xmi:id="_w2nwAVgIEeSTYp88fJMr7g" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w2nwAlgIEeSTYp88fJMr7g" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w2oXElgIEeSTYp88fJMr7g" type="_w2nI8FgIEeSTYp88fJMr7g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_w2oXE1gIEeSTYp88fJMr7g" name="toString" method="_w8egZ1gIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w2oXFFgIEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w9E9UVgIEeSTYp88fJMr7g" name="" memberEnd="_w9E9UlgIEeSTYp88fJMr7g _w8B0clgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w9E9UlgIEeSTYp88fJMr7g" name="" type="_w2jekFgIEeSTYp88fJMr7g" association="_w9E9UVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w9E9VFgIEeSTYp88fJMr7g" name="" memberEnd="_w9E9VVgIEeSTYp88fJMr7g _w8EQtFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w9E9VVgIEeSTYp88fJMr7g" name="" type="_w2mh4FgIEeSTYp88fJMr7g" association="_w9E9VFgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w9FkYVgIEeSTYp88fJMr7g" name="" memberEnd="_w9FkYlgIEeSTYp88fJMr7g _w8E3xFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w9FkYlgIEeSTYp88fJMr7g" name="" type="_w2mh4FgIEeSTYp88fJMr7g" association="_w9FkYVgIEeSTYp88fJMr7g"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_wzaD8FgIEeSTYp88fJMr7g" name="player">
        <packagedElement xmi:type="uml:Interface" xmi:id="_w17zgFgIEeSTYp88fJMr7g" name="ISequencePlayerStatus">
          <ownedComment xmi:id="_w8knCFgIEeSTYp88fJMr7g">
            <body>Command that is used to notify a user that a track has stopped playing.&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w18akVgIEeSTYp88fJMr7g" name="NULL" isLeaf="true" isStatic="true" type="_w17zgFgIEeSTYp88fJMr7g" isReadOnly="true" association="_w8vmIFgIEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w19BoFgIEeSTYp88fJMr7g" value="new ISequencePlayerStatus() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Prints &quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot; to console.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void finished() {&#xD;&#xA;&#x9;&#x9;&#x9;System.out&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_w18akFgIEeSTYp88fJMr7g" name="finished">
            <ownedComment xmi:id="_w8knCVgIEeSTYp88fJMr7g">
              <body>Called when a track stops playing.</body>
            </ownedComment>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w19osFgIEeSTYp88fJMr7g" name="SequencePlayer">
          <ownedComment xmi:id="_w8knClgIEeSTYp88fJMr7g">
            <body>Sequence Player to create and play MIDI music sequences.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w7x80lgIEeSTYp88fJMr7g" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7x801gIEeSTYp88fJMr7g" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7x81FgIEeSTYp88fJMr7g" name="_sequence" visibility="private" type="_w7IckFgIEeSTYp88fJMr7g" association="_w8_dxFgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7yj4VgIEeSTYp88fJMr7g" name="_track" visibility="private" type="_w7JDoFgIEeSTYp88fJMr7g" association="_w9AE0VgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w7yj41gIEeSTYp88fJMr7g" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7zyAFgIEeSTYp88fJMr7g" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w7zyAlgIEeSTYp88fJMr7g" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w70ZEVgIEeSTYp88fJMr7g" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w70ZE1gIEeSTYp88fJMr7g" name="_sequencer" visibility="private" type="_w7KRwFgIEeSTYp88fJMr7g" association="_w9AE1FgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w71AIFgIEeSTYp88fJMr7g" name="_synthesizer" visibility="private" type="_w6SvEVgIEeSTYp88fJMr7g" association="_w9Ar4VgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w71nMFgIEeSTYp88fJMr7g" name="_offsets" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w71nMVgIEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w71nM1gIEeSTYp88fJMr7g" value="{ // add these amounts to the base value&#xD;&#xA;&#x9;// A   B  C  D  E  F  G&#xD;&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8XysFgIEeSTYp88fJMr7g" name="SequencePlayer" specification="_w1-20FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8XysVgIEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8XyslgIEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8Xys1gIEeSTYp88fJMr7g" type="_w19osFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8XytFgIEeSTYp88fJMr7g" name="init" specification="_w2AE8FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8XytVgIEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8XytlgIEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8Xyt1gIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;&#xD;
		_instrument = instrument;&#xD;
		_bpm = 0;&#xD;
		_ticksPerDefaultNote = _ticksPerQuarterNote;&#xD;
&#xD;
		_sequencer = null;&#xD;
		_synthesizer = null;&#xD;
		_track = null;&#xD;
&#xD;
		try {&#xD;
			_sequencer = MidiSystem.getSequencer();&#xD;
			_synthesizer = MidiSystem.getSynthesizer();&#xD;
&#xD;
			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);&#xD;
			_track = _sequence.createTrack();&#xD;
&#xD;
			ShortMessage sm = new ShortMessage();&#xD;
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);&#xD;
			_track.add(new MidiEvent(sm, 0));&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out&#xD;
					.println(&quot;MIDI Unavailable, SequencePlayer not initialized.&quot;);&#xD;
			return false;&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI data.&quot;);&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8XyuFgIEeSTYp88fJMr7g" name="addNote" specification="_w6AbMFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8XyuVgIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8XyulgIEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8Xyu1gIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8XyvFgIEeSTYp88fJMr7g" name="addNote" specification="_w6BCQ1gIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8XyvVgIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8XyvlgIEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8Xyv1gIEeSTYp88fJMr7g" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8XywFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {&#xD;
			return -1;&#xD;
		}&#xD;
&#xD;
		int duration = (int) Math.round(note.getDuration()&#xD;
				* _ticksPerDefaultNote);&#xD;
		if ('Z' == note.getName()) {&#xD;
			// Rest - just return end tick count&#xD;
			return start + duration;&#xD;
		}&#xD;
&#xD;
		int key = 60; // start at middle C&#xD;
		key += note.getOctave() * 12;&#xD;
		key += _offsets[note.getName() - 'A'];&#xD;
		key += note.getAccidental();&#xD;
&#xD;
		ShortMessage on;&#xD;
		ShortMessage off;&#xD;
		try {&#xD;
			on = new ShortMessage();&#xD;
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);&#xD;
			off = new ShortMessage();&#xD;
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note&#xD;
					+ &quot;, &quot; + start + &quot;).&quot;);&#xD;
			// e.printStackTrace();&#xD;
			return start;&#xD;
		}&#xD;
&#xD;
		_track.add(new MidiEvent(on, start));&#xD;
		_track.add(new MidiEvent(off, start + duration));&#xD;
		return start + duration;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8YZwFgIEeSTYp88fJMr7g" name="play" specification="_w6BpUFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8YZwVgIEeSTYp88fJMr7g" name="statusCmd" type="_w17zgFgIEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_w8YZwlgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_w8YZw1gIEeSTYp88fJMr7g" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			_sequencer.open();&#xD;
			_synthesizer.open();&#xD;
&#xD;
			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());&#xD;
&#xD;
			// Specify the sequence to play, and the tempo to play it at&#xD;
			_sequencer.setSequence(_sequence);&#xD;
			_sequencer.setTempoInBPM(_bpm);&#xD;
&#xD;
			// Let us know when it is done playing&#xD;
			_sequencer.addMetaEventListener(new MetaEventListener() {&#xD;
				public void meta(MetaMessage m) {&#xD;
					// A message of this type is automatically sent&#xD;
					// when we reach the end of the track&#xD;
					if (m.getType() == END_OF_TRACK) {&#xD;
						System.out.println(&quot;Finished Playing&quot;);&#xD;
						stop();&#xD;
						statusCmd.finished();&#xD;
					}&#xD;
				}&#xD;
			});&#xD;
&#xD;
			// And start playing now.&#xD;
			_sequencer.start();&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Unable to play sequence.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8YZxFgIEeSTYp88fJMr7g" name="stop" specification="_w2AsAFgIEeSTYp88fJMr7g">
            <language>java</language>
            <body>_sequencer.close();&#xD;
		_synthesizer.close();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8YZxVgIEeSTYp88fJMr7g" name="getTicksPerDefaultNote" specification="_w2BTEFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8YZxlgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8YZx1gIEeSTYp88fJMr7g" name="setTicksPerDefaultNote" specification="_w2BTElgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8YZyFgIEeSTYp88fJMr7g" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8YZyVgIEeSTYp88fJMr7g" name="getTempo" specification="_w2B6IFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8YZylgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8YZy1gIEeSTYp88fJMr7g" name="setTempo" specification="_w2B6IlgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8YZzFgIEeSTYp88fJMr7g" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8ZA0FgIEeSTYp88fJMr7g" name="getTicksPerQuarterNote" specification="_w2B6JFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8ZA0VgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w1-20FgIEeSTYp88fJMr7g" name="SequencePlayer" method="_w8XysFgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w1_d4FgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w1_d4VgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8knC1gIEeSTYp88fJMr7g">
              <body>Create a new SequencePlayer to create and play music.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_w1-20VgIEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w1-20lgIEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w1_d4lgIEeSTYp88fJMr7g" type="_w19osFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w2AE8FgIEeSTYp88fJMr7g" name="init" method="_w8XytFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8knDFgIEeSTYp88fJMr7g">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument&#xD;
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to &#xD;
	 * initialize the player upon instantiation and can be called again to reinitialize the &#xD;
	 * SequencePlayer.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument&#xD;
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2AE8VgIEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2AE8lgIEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2AE81gIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2AsAFgIEeSTYp88fJMr7g" name="stop" method="_w8YZxFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8lOE1gIEeSTYp88fJMr7g">
              <body>Stop playing music and close resources.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_w2BTEFgIEeSTYp88fJMr7g" name="getTicksPerDefaultNote" method="_w8YZxVgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8lOFFgIEeSTYp88fJMr7g">
              <body>Accessor to get the current ticks per default note&#xD;
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2BTEVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2BTElgIEeSTYp88fJMr7g" name="setTicksPerDefaultNote" method="_w8YZx1gIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8lOFVgIEeSTYp88fJMr7g">
              <body>Accessor to set the current ticks per default note&#xD;
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2BTE1gIEeSTYp88fJMr7g" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2B6IFgIEeSTYp88fJMr7g" name="getTempo" method="_w8YZyVgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8lOFlgIEeSTYp88fJMr7g">
              <body>Accessor for the current tempo&#xD;
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2B6IVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2B6IlgIEeSTYp88fJMr7g" name="setTempo" method="_w8YZy1gIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8lOF1gIEeSTYp88fJMr7g">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,&#xD;
	 * the last tempo set will be used for the whole sequence.&#xD;
	 * &#xD;
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2B6I1gIEeSTYp88fJMr7g" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2B6JFgIEeSTYp88fJMr7g" name="getTicksPerQuarterNote" method="_w8ZA0FgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8lOGFgIEeSTYp88fJMr7g">
              <body>Accessor for the current number of ticks per quarter note.&#xD;
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2ChMFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w6AbMFgIEeSTYp88fJMr7g" name="addNote" method="_w8XyuFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8lOEFgIEeSTYp88fJMr7g">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_w6BCQFgIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w6BCQVgIEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6BCQlgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w6BCQ1gIEeSTYp88fJMr7g" name="addNote" method="_w8XyvFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8lOEVgIEeSTYp88fJMr7g">
              <body>Add a note to the MIDI sequence.&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @param velocity - the volume (0-127)&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_w6BCRFgIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w6BCRVgIEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6BCRlgIEeSTYp88fJMr7g" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6BCR1gIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w6BpUFgIEeSTYp88fJMr7g" name="play" method="_w8YZwFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8lOElgIEeSTYp88fJMr7g">
              <body>Play the created Sequence.&#xD;
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w6BpUVgIEeSTYp88fJMr7g" name="statusCmd" type="_w17zgFgIEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_w6BpUlgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_w6BpU1gIEeSTYp88fJMr7g" key="final"/>
              </eAnnotations>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w2DvUFgIEeSTYp88fJMr7g" name="SequencePlayer2">
          <ownedComment xmi:id="_w8lOGVgIEeSTYp88fJMr7g">
            <body>Sequence Player to create and play MIDI music sequences.&#xD;
Differs from SequencePlayer because it has no play() method.   Instead, this class has &#xD;
a factory method that creates an SequencePlayer2.IPlayable object that can be individually &#xD;
and asynchronously started and stopped.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w72OQFgIEeSTYp88fJMr7g" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w72OQVgIEeSTYp88fJMr7g" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w72OQlgIEeSTYp88fJMr7g" name="_sequence" visibility="private" type="_w7IckFgIEeSTYp88fJMr7g" association="_w9Ar5FgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w721UVgIEeSTYp88fJMr7g" name="_track" visibility="private" type="_w7JDoFgIEeSTYp88fJMr7g" association="_w9BS8VgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w73cYVgIEeSTYp88fJMr7g" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w74DcVgIEeSTYp88fJMr7g" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w74qgFgIEeSTYp88fJMr7g" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w74qglgIEeSTYp88fJMr7g" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w75RkVgIEeSTYp88fJMr7g" name="_offsets" isLeaf="true" isStatic="true" isReadOnly="true">
            <eAnnotations xmi:id="_w75RklgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w75Rk1gIEeSTYp88fJMr7g" key="ConstantWithGetter"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w75RlFgIEeSTYp88fJMr7g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w75RllgIEeSTYp88fJMr7g" value="{ // add these amounts to the base value&#xD;&#xA;&#x9;// A   B  C  D  E  F  G&#xD;&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8ZA0lgIEeSTYp88fJMr7g" name="SequencePlayer2" specification="_w2GLkFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8ZA01gIEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8ZA1FgIEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8ZA1VgIEeSTYp88fJMr7g" type="_w2DvUFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8ZA1lgIEeSTYp88fJMr7g" name="init" specification="_w2GypFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8ZA11gIEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8ZA2FgIEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8ZA2VgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;&#xD;
		_instrument = instrument;&#xD;
		_bpm = 0;&#xD;
		_ticksPerDefaultNote = _ticksPerQuarterNote;&#xD;
&#xD;
		_track = null;&#xD;
&#xD;
		try {&#xD;
&#xD;
			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);&#xD;
			_track = _sequence.createTrack();&#xD;
&#xD;
			ShortMessage sm = new ShortMessage();&#xD;
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);&#xD;
			_track.add(new MidiEvent(sm, 0));&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI data.&quot;);&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8ZA2lgIEeSTYp88fJMr7g" name="addNote" specification="_w6DegFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8ZA21gIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8ZA3FgIEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8ZA3VgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Zn4FgIEeSTYp88fJMr7g" name="addNote" specification="_w6EFkVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8Zn4VgIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8Zn4lgIEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8Zn41gIEeSTYp88fJMr7g" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8Zn5FgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {&#xD;
			return -1;&#xD;
		}&#xD;
&#xD;
		int duration = (int) Math.round(note.getDuration()&#xD;
				* _ticksPerDefaultNote);&#xD;
		if ('Z' == note.getName()) {&#xD;
			// Rest - just return end tick count&#xD;
			return start + duration;&#xD;
		}&#xD;
&#xD;
		int key = 60; // start at middle C&#xD;
		key += note.getOctave() * 12;&#xD;
		key += _offsets[note.getName() - 'A'];&#xD;
		key += note.getAccidental();&#xD;
&#xD;
		ShortMessage on;&#xD;
		ShortMessage off;&#xD;
		try {&#xD;
			on = new ShortMessage();&#xD;
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);&#xD;
			off = new ShortMessage();&#xD;
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note&#xD;
					+ &quot;, &quot; + start + &quot;).&quot;);&#xD;
			// e.printStackTrace();&#xD;
			return start;&#xD;
		}&#xD;
&#xD;
		_track.add(new MidiEvent(on, start));&#xD;
		_track.add(new MidiEvent(off, start + duration));&#xD;
		return start + duration;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Zn5VgIEeSTYp88fJMr7g" name="makePlayable" specification="_w6EFllgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8Zn5lgIEeSTYp88fJMr7g" name="statusCmd" type="_w17zgFgIEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_w8Zn51gIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_w8Zn6FgIEeSTYp88fJMr7g" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_w8Zn6VgIEeSTYp88fJMr7g" type="_w2E9cFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
			final Sequencer _sequencer = MidiSystem.getSequencer(); // MIDI Sequencer object&#xD;
			final Synthesizer _synthesizer = MidiSystem.getSynthesizer(); // MIDI synthesizer object&#xD;
&#xD;
			final IPlayable playable = new IPlayable() {&#xD;
&#xD;
				@Override&#xD;
				public void start() {&#xD;
					_sequencer.start();&#xD;
				}&#xD;
&#xD;
				@Override&#xD;
				public void stop() {&#xD;
					_sequencer.close();&#xD;
					_synthesizer.close();&#xD;
				}&#xD;
			};&#xD;
&#xD;
			_sequencer.open();&#xD;
			_synthesizer.open();&#xD;
&#xD;
			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());&#xD;
&#xD;
			// Specify the sequence to play, and the tempo to play it at&#xD;
			_sequencer.setSequence(_sequence);&#xD;
			_sequencer.setTempoInBPM(_bpm);&#xD;
&#xD;
			// Let us know when it is done playing&#xD;
			_sequencer.addMetaEventListener(new MetaEventListener() {&#xD;
				public void meta(MetaMessage m) {&#xD;
					// A message of this type is automatically sent&#xD;
					// when we reach the end of the track&#xD;
					if (m.getType() == END_OF_TRACK) {&#xD;
						System.out&#xD;
								.println(&quot;SequencePlayer2.play(): End of Track&quot;);&#xD;
						playable.stop();&#xD;
						statusCmd.finished();&#xD;
					} else&#xD;
						System.out.println(&quot;Message type received: &quot;&#xD;
								+ m.getType());&#xD;
				}&#xD;
			});&#xD;
&#xD;
			return playable;&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Unable to play sequence.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		return IPlayable.NULL;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Zn6lgIEeSTYp88fJMr7g" name="getTicksPerDefaultNote" specification="_w2HZsFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8Zn61gIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Zn7FgIEeSTYp88fJMr7g" name="setTicksPerDefaultNote" specification="_w2IAwVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8Zn7VgIEeSTYp88fJMr7g" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8Zn7lgIEeSTYp88fJMr7g" name="getTempo" specification="_w2In0FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8Zn71gIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8aO8FgIEeSTYp88fJMr7g" name="setTempo" specification="_w2JO4VgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8aO8VgIEeSTYp88fJMr7g" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8aO8lgIEeSTYp88fJMr7g" name="getTicksPerQuarterNote" specification="_w2JO41gIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8aO81gIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w2GLkFgIEeSTYp88fJMr7g" name="SequencePlayer2" method="_w8ZA0lgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w2GyoVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w2GyolgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8lOHVgIEeSTYp88fJMr7g">
              <body>Create a new SequencePlayer to create and play music.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2GLkVgIEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2GyoFgIEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2Gyo1gIEeSTYp88fJMr7g" type="_w2DvUFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w2GypFgIEeSTYp88fJMr7g" name="init" method="_w8ZA1lgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8lOHlgIEeSTYp88fJMr7g">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument&#xD;
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to &#xD;
	 * initialize the player upon instantiation and can be called again to reinitialize the &#xD;
	 * SequencePlayer.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument&#xD;
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2GypVgIEeSTYp88fJMr7g" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2GyplgIEeSTYp88fJMr7g" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2Gyp1gIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2HZsFgIEeSTYp88fJMr7g" name="getTicksPerDefaultNote" method="_w8Zn6lgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8l1IlgIEeSTYp88fJMr7g">
              <body>Accessor to get the current ticks per default note&#xD;
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2IAwFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2IAwVgIEeSTYp88fJMr7g" name="setTicksPerDefaultNote" method="_w8Zn7FgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8l1I1gIEeSTYp88fJMr7g">
              <body>Accessor to set the current ticks per default note&#xD;
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2IAwlgIEeSTYp88fJMr7g" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2In0FgIEeSTYp88fJMr7g" name="getTempo" method="_w8Zn7lgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8l1JFgIEeSTYp88fJMr7g">
              <body>Accessor for the current tempo&#xD;
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2JO4FgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2JO4VgIEeSTYp88fJMr7g" name="setTempo" method="_w8aO8FgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8l1JVgIEeSTYp88fJMr7g">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,&#xD;
	 * the last tempo set will be used for the whole sequence.&#xD;
	 * &#xD;
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2JO4lgIEeSTYp88fJMr7g" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2JO41gIEeSTYp88fJMr7g" name="getTicksPerQuarterNote" method="_w8aO8lgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8l1JlgIEeSTYp88fJMr7g">
              <body>Accessor for the current number of ticks per quarter note.&#xD;
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2J18FgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w6DegFgIEeSTYp88fJMr7g" name="addNote" method="_w8ZA2lgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8lOH1gIEeSTYp88fJMr7g">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_w6DegVgIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w6DeglgIEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6EFkFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w6EFkVgIEeSTYp88fJMr7g" name="addNote" method="_w8Zn4FgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8l1IFgIEeSTYp88fJMr7g">
              <body>Add a note to the MIDI sequence.&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @param velocity - the volume (0-127)&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_w6EFklgIEeSTYp88fJMr7g" name="note" type="_w1rU0FgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w6EFk1gIEeSTYp88fJMr7g" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6EFlFgIEeSTYp88fJMr7g" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6EFlVgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w6EFllgIEeSTYp88fJMr7g" name="makePlayable" method="_w8Zn5VgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8l1IVgIEeSTYp88fJMr7g">
              <body>Factory method for an IPlayable object that can play the currently programmed music sequence.&#xD;
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.&#xD;
	 * @return An IPlayable object associated with the currently programmed music sequence.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w6EsoFgIEeSTYp88fJMr7g" name="statusCmd" type="_w17zgFgIEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_w6EsolgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_w6Eso1gIEeSTYp88fJMr7g" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_w6EsoVgIEeSTYp88fJMr7g" type="_w2E9cFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Interface" xmi:id="_w2E9cFgIEeSTYp88fJMr7g" name="IPlayable">
            <eAnnotations xmi:id="_w2E9cVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w2E9clgIEeSTYp88fJMr7g" key="static"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8lOGlgIEeSTYp88fJMr7g">
              <body>Interface  that represents a playable entity.&#xD;
	 * @author swong&#xD;
	 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_w2FkgVgIEeSTYp88fJMr7g" name="NULL" isLeaf="true" isStatic="true" type="_w2E9cFgIEeSTYp88fJMr7g" isReadOnly="true" association="_w8wNMVgIEeSTYp88fJMr7g">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_w2FkglgIEeSTYp88fJMr7g" value="new IPlayable() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void start() {&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void stop() {&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_w2E9c1gIEeSTYp88fJMr7g" name="start">
              <ownedComment xmi:id="_w8lOG1gIEeSTYp88fJMr7g">
                <body>Starts the sequencer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_w2FkgFgIEeSTYp88fJMr7g" name="stop">
              <ownedComment xmi:id="_w8lOHFgIEeSTYp88fJMr7g">
                <body>Stops the sequencer and synthesizer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w8vmIFgIEeSTYp88fJMr7g" name="" memberEnd="_w8vmIVgIEeSTYp88fJMr7g _w18akVgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w8vmIVgIEeSTYp88fJMr7g" name="" type="_w17zgFgIEeSTYp88fJMr7g" association="_w8vmIFgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w8wNMVgIEeSTYp88fJMr7g" name="" memberEnd="_w8wNMlgIEeSTYp88fJMr7g _w2FkgVgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w8wNMlgIEeSTYp88fJMr7g" name="" type="_w2E9cFgIEeSTYp88fJMr7g" association="_w8wNMVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w8_dxFgIEeSTYp88fJMr7g" name="" memberEnd="_w8_dxVgIEeSTYp88fJMr7g _w7x81FgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w8_dxVgIEeSTYp88fJMr7g" name="" type="_w19osFgIEeSTYp88fJMr7g" association="_w8_dxFgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w9AE0VgIEeSTYp88fJMr7g" name="" memberEnd="_w9AE0lgIEeSTYp88fJMr7g _w7yj4VgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w9AE0lgIEeSTYp88fJMr7g" name="" type="_w19osFgIEeSTYp88fJMr7g" association="_w9AE0VgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w9AE1FgIEeSTYp88fJMr7g" name="" memberEnd="_w9AE1VgIEeSTYp88fJMr7g _w70ZE1gIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w9AE1VgIEeSTYp88fJMr7g" name="" type="_w19osFgIEeSTYp88fJMr7g" association="_w9AE1FgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w9Ar4VgIEeSTYp88fJMr7g" name="" memberEnd="_w9Ar4lgIEeSTYp88fJMr7g _w71AIFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w9Ar4lgIEeSTYp88fJMr7g" name="" type="_w19osFgIEeSTYp88fJMr7g" association="_w9Ar4VgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w9Ar5FgIEeSTYp88fJMr7g" name="" memberEnd="_w9Ar5VgIEeSTYp88fJMr7g _w72OQlgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w9Ar5VgIEeSTYp88fJMr7g" name="" type="_w2DvUFgIEeSTYp88fJMr7g" association="_w9Ar5FgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w9BS8VgIEeSTYp88fJMr7g" name="" memberEnd="_w9BS8lgIEeSTYp88fJMr7g _w721UVgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w9BS8lgIEeSTYp88fJMr7g" name="" type="_w2DvUFgIEeSTYp88fJMr7g" association="_w9BS8VgIEeSTYp88fJMr7g"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_wzcgMVgIEeSTYp88fJMr7g" name="token">
        <packagedElement xmi:type="uml:Package" xmi:id="_wzcgMlgIEeSTYp88fJMr7g" name="tokenizer">
          <packagedElement xmi:type="uml:Class" xmi:id="_w2WDMFgIEeSTYp88fJMr7g" name="ABCTokenizer">
            <ownedComment xmi:id="_w8mcN1gIEeSTYp88fJMr7g">
              <body>Tokenizer for the abc music language. getNextToken() returns next Token in&#xD;
stream. Does not recognize all possible language constructs and symbols&#xD;
(returned as &quot;?&quot; token).  Tokens are the atomic psemantic pieces of a language,&#xD;
such as Note, repeat start, measure, chord, etc.   The token ids (names) returned are: &lt;br/>&#xD;
 &lt;br/>&#xD;
 EOF - end of file&lt;br/>&#xD;
 &quot;|:&quot; - repeat start&lt;br/>&#xD;
 &quot;:|&quot; - repeat end&lt;br/>&#xD;
 &quot;|1&quot; - first repeat start&lt;br/>&#xD;
 &quot;[1&quot; - alternative first repeat start&lt;br/>&#xD;
 &quot;|2&quot; - second repeat start&lt;br/>&#xD;
 &quot;[2&quot; - alternative second repeat start&lt;br/>&#xD;
 &quot;[|&quot; - thick-thin double bar line&lt;br/>&#xD;
 &quot;|]&quot; - thin-thick double bar line&lt;br/>&#xD;
 &quot;:|2&quot; - alternative second repeat start&lt;br/>&#xD;
 &quot;||&quot; - double measure bar&lt;br/>&#xD;
 &quot;::&quot; - short hand for repeat end-start &quot;:||:&quot;&lt;br/>&#xD;
 &quot;|&quot; - Measure bar&lt;br/>&#xD;
 &quot;[&quot;) - Chord start&lt;br/>&#xD;
 &quot;]&quot; - Chord end&lt;br/>&#xD;
 &quot;-&quot; - tie&lt;br/>&#xD;
 &quot;>&quot; - the previous note  is dotted, the next note halved&lt;br/> &#xD;
 &quot;&lt;&quot; - the previous note is halved, the next dotted&lt;br/>&#xD;
 &quot;{&quot; - Grace begin&lt;br/>&#xD;
 &quot;}&quot; - Grace end&lt;br/>&#xD;
 &quot;%&quot; - Comment&lt;br/>&#xD;
 &quot;[Header ID]&quot; - where [Header ID] is a single letter from {ABCDEFGHIKLMNOPQRSTWXZ} &lt;br/> &#xD;
 &quot;Note&quot; - a single note whose lexeme contains the name, accidentals, octave and duration&lt;br/>&#xD;
 &quot;Tuplet&quot; - the lexeme is the number of subsequent Notes comprise this tuplet. &lt;br/>&#xD;
 &quot;Quote&quot; - lexeme is the quoted text &lt;br/>&#xD;
 &quot;?&quot; - unknown language construct. &lt;br/>&#xD;
  &lt;br/>&#xD;
References: &lt;br/>&#xD;
&lt;a href =&#xD;
&quot;http://download.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html&quot;&#xD;
>java.util.regex.Pattern for regex guide&lt;/a>&lt;br/>&#xD;
&lt;a href=&quot;http://asciitable.com/&quot;>ASCII table for codes&lt;/a>&lt;br/>&#xD;
&lt;a href=&quot;http://abcnotation.com/abc2mtex/abc.txt&quot;>abc music standard 1.6&lt;/a></body>
            </ownedComment>
            <generalization xmi:id="_w6KzRFgIEeSTYp88fJMr7g" general="_w2dX8FgIEeSTYp88fJMr7g"/>
            <ownedAttribute xmi:id="_w78U4FgIEeSTYp88fJMr7g" name="keywords1" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_w78U41gIEeSTYp88fJMr7g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_w78U4VgIEeSTYp88fJMr7g" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_w7878FgIEeSTYp88fJMr7g" name="keywords2" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_w78781gIEeSTYp88fJMr7g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7878VgIEeSTYp88fJMr7g" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_w7879FgIEeSTYp88fJMr7g" name="keywordsVector" visibility="private" type="_w7SNkFgIEeSTYp88fJMr7g" association="_w9ChEFgIEeSTYp88fJMr7g">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_w79jAVgIEeSTYp88fJMr7g" value="new Vector&lt;Map&lt;String, String>>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_w7-KEVgIEeSTYp88fJMr7g" name="tokFac" visibility="private" type="_w2QjoFgIEeSTYp88fJMr7g" association="_w9ChE1gIEeSTYp88fJMr7g">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7-KElgIEeSTYp88fJMr7g" value="TokenFactory.Singleton"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_w7-KFFgIEeSTYp88fJMr7g" name="stack" visibility="private" type="_w6x3QFgIEeSTYp88fJMr7g" association="_w9DIIVgIEeSTYp88fJMr7g">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7-xIVgIEeSTYp88fJMr7g" value="new Stack&lt;Token>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_w7_YMVgIEeSTYp88fJMr7g" name="ACCIDENTALS" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7_YMlgIEeSTYp88fJMr7g" value="&quot;_=^&quot;"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_w6KMMVgIEeSTYp88fJMr7g" client="_w2WDMFgIEeSTYp88fJMr7g" supplier="_w2a7s1gIEeSTYp88fJMr7g" contract="_w2a7s1gIEeSTYp88fJMr7g"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8cEJlgIEeSTYp88fJMr7g" name="ABCTokenizer" specification="_w2XRUFgIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w8cEJ1gIEeSTYp88fJMr7g" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w8cEKFgIEeSTYp88fJMr7g" type="_w2WDMFgIEeSTYp88fJMr7g" direction="return"/>
              <language>java</language>
              <body>super(inputFileName);&#xD;
&#xD;
		// note: &quot;\\7C&quot; => &quot;|&quot;, &quot;\\x5B&quot; => &quot;[&quot;, &quot;\\x5D&quot; => &quot;]&quot;&#xD;
		// &quot;\\x7B&quot; => &quot;{&quot;,  &quot;\\x7D&quot; => &quot;}&quot;&#xD;
&#xD;
		// load the regex->keyword mapping&#xD;
		keywords1.put(&quot;\\x7C:&quot;, &quot;|:&quot;); // repeat start&#xD;
		keywords1.put(&quot;:\\x7C&quot;, &quot;:|&quot;); // repeat end&#xD;
		keywords1.put(&quot;\\x7C1&quot;, &quot;|1&quot;); // first repeat start&#xD;
		keywords1.put(&quot;\\x5B1&quot;, &quot;[1&quot;); // alternative first repeat start&#xD;
		keywords1.put(&quot;\\x7C2&quot;, &quot;|2&quot;); // second repeat start&#xD;
		keywords1.put(&quot;\\x5B2&quot;, &quot;[2&quot;); // alternative second repeat start&#xD;
		keywords1.put(&quot;\\x5B\\7C&quot;, &quot;[|&quot;); // thick-thin double bar line&#xD;
		keywords1.put(&quot;\\7C\\x5D&quot;, &quot;|]&quot;); // thin-thick double bar line&#xD;
		keywords1.put(&quot;:\\x7C2&quot;, &quot;:|2&quot;); // alternative second repeat start&#xD;
		keywords1.put(&quot;\\x7C\\x7C&quot;, &quot;||&quot;); // double measure bar&#xD;
		keywords1.put(&quot;::&quot;, &quot;::&quot;); // short hand for repeat end-start &quot;:||:&quot;&#xD;
&#xD;
		// Should these be separated out into a different map because order of&#xD;
		// search is important?&#xD;
		keywords2.put(&quot;\\x7C&quot;, &quot;|&quot;); // Measure bar&#xD;
		keywords2.put(&quot;\\x5B&quot;, &quot;[&quot;); // Chord start&#xD;
		keywords2.put(&quot;\\x5D&quot;, &quot;]&quot;); // Chord end&#xD;
		keywords2.put(&quot;-&quot;, &quot;-&quot;); // tie&#xD;
		keywords2.put(&quot;>&quot;, &quot;>&quot;); // the previous note  is dotted, the next note halved &#xD;
		keywords2.put(&quot;&lt;&quot;, &quot;&lt;&quot;); // the previous note is halved, the next dotted&#xD;
		keywords2.put(&quot;\\x7B&quot;, &quot;{&quot;); // Grace begin&#xD;
		keywords2.put(&quot;\\x7D&quot;, &quot;}&quot;); // Grace end		&#xD;
&#xD;
		keywordsVector.add(keywords1);&#xD;
		keywordsVector.add(keywords2);&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8cEKVgIEeSTYp88fJMr7g" name="getNextToken" specification="_w2X4YFgIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w8cEKlgIEeSTYp88fJMr7g" type="_w2RKslgIEeSTYp88fJMr7g" direction="return"/>
              <language>java</language>
              <body>if (stack.empty())&#xD;
			return makeNextToken();&#xD;
		else&#xD;
			return stack.pop();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8cEK1gIEeSTYp88fJMr7g" name="putBack" specification="_w6KzQVgIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w8cELFgIEeSTYp88fJMr7g" name="t" type="_w2RKslgIEeSTYp88fJMr7g"/>
              <language>java</language>
              <body>stack.push(t);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8cELVgIEeSTYp88fJMr7g" name="makeNextToken" specification="_w2X4YVgIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w8cELlgIEeSTYp88fJMr7g" type="_w2RKslgIEeSTYp88fJMr7g" direction="return"/>
              <language>java</language>
              <body>String sTok = this.getNextStringToken();&#xD;
		if (null == sTok)&#xD;
			return tokFac.makeToken(&quot;EOF&quot;, &quot;EOF&quot;); // EOF returns as null&#xD;
		if (sTok.equals(&quot;\n&quot;))&#xD;
			return makeNextToken(); // discard bare LF's.&#xD;
&#xD;
		// search for first keywords, pushing extra tokens back into tokenizer's&#xD;
		// stack.&#xD;
		for (Map&lt;String, String> keywords : keywordsVector) {&#xD;
			for (String kw : keywords.keySet()) {&#xD;
				if (keywords.get(kw).equals(sTok))&#xD;
					return tokFac.makeToken(sTok, sTok);&#xD;
				String[] split = sTok.split(kw, -1);&#xD;
				if (split.length > 1) {&#xD;
&#xD;
					for (int i = split.length - 1; i > 0; i--) {&#xD;
						if (!split[i].equals(&quot;&quot;)) {&#xD;
							this.putStringBack(split[i]);&#xD;
						}&#xD;
						this.putStringBack(keywords.get(kw));&#xD;
					}&#xD;
					if (!split[0].equals(&quot;&quot;)) {&#xD;
						this.putStringBack(split[0]);&#xD;
					}&#xD;
					return makeNextToken();&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Find header tokens, which are the whole line.&#xD;
		int idx = sTok.indexOf(&quot;:&quot;);&#xD;
		if (1 == idx) {&#xD;
			String header = sTok;&#xD;
			String next = super.getNextStringToken();&#xD;
			while (!next.equals(&quot;\n&quot;)) {&#xD;
				header += &quot; &quot; + next;&#xD;
				next = this.getNextStringToken();&#xD;
			}&#xD;
			return tokFac&#xD;
					.makeToken(header.substring(0, 1), header.substring(2));&#xD;
		}&#xD;
&#xD;
		// Find comment, which is the rest of the line.&#xD;
		idx = sTok.indexOf(&quot;%&quot;);&#xD;
		if (-1 != idx) {&#xD;
			// Comment in line somewhere&#xD;
			if (0 == idx) { // comment is at beginning of line&#xD;
				String comment = sTok;&#xD;
				String next = super.getNextStringToken();&#xD;
				while (!next.equals(&quot;\n&quot;)) { // get the rest of the line&#xD;
					comment += next;&#xD;
					// get the next string token &#xD;
					next = this.getNextStringToken();&#xD;
				}&#xD;
				return tokFac.makeToken(&quot;%&quot;, comment.substring(1));&#xD;
			} else { // comment is in middle of the line&#xD;
				// push the entire comment, incl. the comment char, back into&#xD;
				// the tokenizer b/c it can't be dealt with yet.&#xD;
				this.putStringBack(sTok.substring(idx));&#xD;
				// push the tokens before the comment back into the tokenizer&#xD;
				// so that they can be then processed when pulled back out.&#xD;
				this.putStringBack(sTok.substring(0, idx));&#xD;
				return makeNextToken(); // Process whatever is in the tokenizer&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Find tuplet&#xD;
		if ('(' == sTok.charAt(0)) {&#xD;
			// Tuplet found&#xD;
			int n = Integer.parseInt(sTok.substring(1, 2)); // get tuplet size&#xD;
			this.putStringBack(sTok.substring(2)); // push rest back into tokenizer&#xD;
			return tokFac.makeToken(&quot;Tuplet&quot;, &quot;&quot; + n);&#xD;
		}&#xD;
&#xD;
		if (Character.isLetter(sTok.charAt(0))&#xD;
				|| ACCIDENTALS.contains(sTok.subSequence(0, 1))) {&#xD;
			// Start of Note string found.&#xD;
			return tokFac.makeToken(&quot;Note&quot;, parseNote(sTok));&#xD;
		}&#xD;
&#xD;
		if ('\&quot;' == sTok.charAt(0)) {&#xD;
			// Quoted string found&#xD;
			return tokFac.makeToken(&quot;Quote&quot;, parseQuote(&quot;&quot;, sTok.substring(1)));&#xD;
		}&#xD;
&#xD;
		if (sTok.equals(&quot;\\&quot;)) {&#xD;
			// abc line break detected.  Ignore.&#xD;
			return makeNextToken();&#xD;
		}&#xD;
&#xD;
		// Unknown token&#xD;
		return tokFac.makeToken(&quot;?&quot;, sTok);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8crMFgIEeSTYp88fJMr7g" name="parseNote" specification="_w2YfcFgIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w8crMVgIEeSTYp88fJMr7g" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w8crMlgIEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>int i = 1;&#xD;
		// look for pre-note name characters&#xD;
		if (!Character.isLetter(sTok.charAt(0))) {&#xD;
			for (; i &lt; sTok.length(); i++) {&#xD;
				if (sTok.charAt(i) != sTok.charAt(0)) {&#xD;
					i++; // move to next char&#xD;
					break; // This assumes that this char is a letter which&#xD;
							// follows the accidentals&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		for (; i &lt; sTok.length(); i++) {&#xD;
			// look for non-post-note name characters.&#xD;
			if (!(Character.isDigit(sTok.charAt(i)) || &quot;,/'&quot;.contains(sTok&#xD;
					.subSequence(i, i + 1)))) {&#xD;
				putStringBack(sTok.substring(i)); // put the rest back in the&#xD;
													// tokenizer.&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		// i = end of note string&#xD;
		return sTok.substring(0, i);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8crM1gIEeSTYp88fJMr7g" name="parseQuote" specification="_w2Yfc1gIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w8crNFgIEeSTYp88fJMr7g" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w8crNVgIEeSTYp88fJMr7g" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w8crNlgIEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = 0; i &lt; sTok.length(); i++) {&#xD;
			if ('\&quot;' == sTok.charAt(i)) {&#xD;
				String rest = sTok.substring(i + 1);&#xD;
				if (!rest.equals(&quot;&quot;)) {&#xD;
					this.putStringBack(rest);&#xD;
				}&#xD;
				return acc;&#xD;
			} else {&#xD;
				acc += sTok.charAt(i);&#xD;
			}&#xD;
		}&#xD;
		acc += &quot; &quot;;&#xD;
		return parseQuote(acc, this.getNextStringToken());&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_w2XRUFgIEeSTYp88fJMr7g" name="ABCTokenizer" method="_w8cEJlgIEeSTYp88fJMr7g" raisedException="_w6MocVgIEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_w2XRUlgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_w2XRU1gIEeSTYp88fJMr7g" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_w8mcOFgIEeSTYp88fJMr7g">
                <body>Constructor for the class&#xD;
	 * @param inputFileName  File to tokenize&#xD;
	 * @throws FileNotFoundException  When input file could not be loaded.</body>
              </ownedComment>
              <ownedParameter xmi:id="_w2XRUVgIEeSTYp88fJMr7g" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w2XRVFgIEeSTYp88fJMr7g" type="_w2WDMFgIEeSTYp88fJMr7g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_w2X4YFgIEeSTYp88fJMr7g" name="getNextToken" method="_w8cEKVgIEeSTYp88fJMr7g">
              <ownedComment xmi:id="_w8mcOVgIEeSTYp88fJMr7g">
                <body>Return the next token, either from the stream or the last token if it was&#xD;
	 * pushed back</body>
              </ownedComment>
              <ownedParameter xmi:id="_w6KzQFgIEeSTYp88fJMr7g" type="_w2RKslgIEeSTYp88fJMr7g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_w2X4YVgIEeSTYp88fJMr7g" name="makeNextToken" visibility="private" method="_w8cELVgIEeSTYp88fJMr7g">
              <ownedComment xmi:id="_w8mcO1gIEeSTYp88fJMr7g">
                <body>Parse the strings down from the getNextStringToken further, separating&#xD;
	 * out the abc keywords into tokens.&#xD;
	 * @return The next Token in the stream</body>
              </ownedComment>
              <ownedParameter xmi:id="_w6KzQ1gIEeSTYp88fJMr7g" type="_w2RKslgIEeSTYp88fJMr7g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_w2YfcFgIEeSTYp88fJMr7g" name="parseNote" visibility="private" method="_w8crMFgIEeSTYp88fJMr7g">
              <ownedComment xmi:id="_w8mcPFgIEeSTYp88fJMr7g">
                <body>Returns the first note string in the given string.&#xD;
	 * &#xD;
	 * @param sTok  The string to parse&#xD;
	 * @return A String that is the first note in the given string</body>
              </ownedComment>
              <ownedParameter xmi:id="_w2YfcVgIEeSTYp88fJMr7g" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w2YfclgIEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_w2Yfc1gIEeSTYp88fJMr7g" name="parseQuote" visibility="private" method="_w8crM1gIEeSTYp88fJMr7g">
              <ownedComment xmi:id="_w8mcPVgIEeSTYp88fJMr7g">
                <body>Returns the rest of a string, incl. spaces until the next double quote&#xD;
	 * @param acc  Accumulated result string&#xD;
	 * @param sTok the current string token&#xD;
	 * @return the full quoted string</body>
              </ownedComment>
              <ownedParameter xmi:id="_w2YfdFgIEeSTYp88fJMr7g" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w2YfdVgIEeSTYp88fJMr7g" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w2ZGgFgIEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_w6KzQVgIEeSTYp88fJMr7g" name="putBack" method="_w8cEK1gIEeSTYp88fJMr7g">
              <ownedComment xmi:id="_w8mcOlgIEeSTYp88fJMr7g">
                <body>*	 Push token back into the stream&#xD;
	 * @param t the Token you need to put back in the stream.</body>
              </ownedComment>
              <ownedParameter xmi:id="_w6KzQlgIEeSTYp88fJMr7g" name="t" type="_w2RKslgIEeSTYp88fJMr7g"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_w2aUoFgIEeSTYp88fJMr7g" name="IStringTokenizer">
            <ownedComment xmi:id="_w8mcPlgIEeSTYp88fJMr7g">
              <body>Tokenizer that only returns string tokens.  This is a specialization of ITokenizer for strings.&#xD;
&#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedOperation xmi:id="_w2aUoVgIEeSTYp88fJMr7g" name="getNextStringToken" isAbstract="true">
              <ownedComment xmi:id="_w8mcP1gIEeSTYp88fJMr7g">
                <body>Return the next token.&#xD;
	 * @return The next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_w2a7sFgIEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_w2a7sVgIEeSTYp88fJMr7g" name="putStringBack" isAbstract="true">
              <ownedComment xmi:id="_w8nDQFgIEeSTYp88fJMr7g">
                <body>Put the previously consumed token back into the token stream. Can only&#xD;
	 * put back one token.&#xD;
	 * @param t the token to push back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_w2a7slgIEeSTYp88fJMr7g" name="t">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_w2a7s1gIEeSTYp88fJMr7g" name="ITokenizer" isAbstract="true">
            <ownedComment xmi:id="_w8nDQVgIEeSTYp88fJMr7g">
              <body>Extract and return an appropriate Token from some given source.</body>
            </ownedComment>
            <ownedOperation xmi:id="_w2biwVgIEeSTYp88fJMr7g" name="getNextToken" isAbstract="true">
              <ownedComment xmi:id="_w8nDQlgIEeSTYp88fJMr7g">
                <body>Return the next token.&#xD;
	 * @return the next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_w6MBYFgIEeSTYp88fJMr7g" type="_w2RKslgIEeSTYp88fJMr7g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_w6MBYVgIEeSTYp88fJMr7g" name="putBack" isAbstract="true">
              <ownedComment xmi:id="_w8nDQ1gIEeSTYp88fJMr7g">
                <body>Put the previously consumed token back into the token stream. &#xD;
	 * @param t the token to put back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_w6MBYlgIEeSTYp88fJMr7g" name="t" type="_w2RKslgIEeSTYp88fJMr7g"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_w2dX8FgIEeSTYp88fJMr7g" name="StringTokenizer">
            <ownedComment xmi:id="_w8nDRFgIEeSTYp88fJMr7g">
              <body>Special tokenizer that converts a stream of various types of tokens from  StreamTokenizer and converts them into a stream of strings. &#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_w7__QFgIEeSTYp88fJMr7g" name="stack" visibility="private" type="_w6x3QFgIEeSTYp88fJMr7g" association="_w9DvMVgIEeSTYp88fJMr7g">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_w7__QlgIEeSTYp88fJMr7g" value="new Stack&lt;String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_w8AmUVgIEeSTYp88fJMr7g" name="_st" visibility="protected" type="_w6Odo1gIEeSTYp88fJMr7g" association="_w9EWQFgIEeSTYp88fJMr7g"/>
            <ownedAttribute xmi:id="_w8BNYFgIEeSTYp88fJMr7g" name="_fileReader" visibility="protected" type="_w6OdoVgIEeSTYp88fJMr7g" association="_w9EWQ1gIEeSTYp88fJMr7g"/>
            <interfaceRealization xmi:id="_w6PEsVgIEeSTYp88fJMr7g" client="_w2dX8FgIEeSTYp88fJMr7g" supplier="_w2aUoFgIEeSTYp88fJMr7g" contract="_w2aUoFgIEeSTYp88fJMr7g"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8crN1gIEeSTYp88fJMr7g" name="StringTokenizer" specification="_w2d_AFgIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w8crOFgIEeSTYp88fJMr7g" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w8crOVgIEeSTYp88fJMr7g" type="_w2dX8FgIEeSTYp88fJMr7g" direction="return"/>
              <language>java</language>
              <body>// Create an input text file object:&#xD;
&#xD;
		//_st = new StreamTokenizer(new BufferedReader(url.openStream()));&#xD;
		//_fileReader = new FileReader(inputFileName);&#xD;
		try {&#xD;
			InputStream is = this.getClass().getResource(inputFileName)&#xD;
					.openStream();&#xD;
&#xD;
			_fileReader = new BufferedReader(new InputStreamReader(is));&#xD;
&#xD;
			//_fileReader = new FileReader(file);&#xD;
		} catch (Exception e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			System.err.println(&quot;StringTokenizer error opening file: &quot; + e);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		// Create a Streamtokenizer to parse the input text file:&#xD;
		_st = new StreamTokenizer(_fileReader);&#xD;
&#xD;
		_st.eolIsSignificant(true);&#xD;
		_st.wordChars(33, 125);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8dSQFgIEeSTYp88fJMr7g" name="getNextStringToken" specification="_w2emEFgIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w8dSQVgIEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (stack.empty())&#xD;
			return makeNextStringToken();&#xD;
		else&#xD;
			return stack.pop();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8dSQlgIEeSTYp88fJMr7g" name="putStringBack" specification="_w2fNIFgIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w8dSQ1gIEeSTYp88fJMr7g" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>stack.push(str);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8dSRFgIEeSTYp88fJMr7g" name="makeNextStringToken" specification="_w2f0MlgIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w8dSRVgIEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>try {&#xD;
			int t = _st.nextToken();&#xD;
			if (StreamTokenizer.TT_EOL == t)&#xD;
				return &quot;\n&quot;;&#xD;
			if (StreamTokenizer.TT_EOF != t) {&#xD;
				switch (_st.ttype) {&#xD;
&#xD;
				case StreamTokenizer.TT_WORD: {&#xD;
					return _st.sval;&#xD;
				}&#xD;
&#xD;
				case StreamTokenizer.TT_NUMBER: {&#xD;
					// check if number is an integer&#xD;
					if (Math.floor(_st.nval) == _st.nval) {&#xD;
						return &quot;&quot; + (int) _st.nval;&#xD;
					} else {&#xD;
						return &quot;&quot; + _st.nval;&#xD;
					}&#xD;
				}&#xD;
&#xD;
				default:&#xD;
					throw new IllegalArgumentException(&#xD;
							&quot;Tokenizer1: Illegal token type = &quot; + _st.ttype);&#xD;
				}&#xD;
			} else {&#xD;
				_fileReader.close();&#xD;
				System.err.println(&quot;EOF Token&quot;);&#xD;
				return null;&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			System.out.println(&quot;StringTokenizer.makeNextToken(): Exception = &quot;&#xD;
					+ e.getMessage());&#xD;
			return null;&#xD;
		}&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_w2d_AFgIEeSTYp88fJMr7g" name="StringTokenizer" method="_w8crN1gIEeSTYp88fJMr7g" raisedException="_w6MocVgIEeSTYp88fJMr7g">
              <eAnnotations xmi:id="_w2d_AlgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_w2d_A1gIEeSTYp88fJMr7g" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_w8nDRVgIEeSTYp88fJMr7g">
                <body>Initialize _st to read from a input Reader file with the given input file&#xD;
	 * name.&#xD;
	 * &#xD;
	 * @param inputFileName&#xD;
	 *            the name of the input text file&#xD;
	 * @throws FileNotFoundException When the input file could not be opened</body>
              </ownedComment>
              <ownedParameter xmi:id="_w2d_AVgIEeSTYp88fJMr7g" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_w2d_BFgIEeSTYp88fJMr7g" type="_w2dX8FgIEeSTYp88fJMr7g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_w2emEFgIEeSTYp88fJMr7g" name="getNextStringToken" method="_w8dSQFgIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w2emEVgIEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_w2fNIFgIEeSTYp88fJMr7g" name="putStringBack" method="_w8dSQlgIEeSTYp88fJMr7g">
              <ownedParameter xmi:id="_w2fNIVgIEeSTYp88fJMr7g" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_w2f0MlgIEeSTYp88fJMr7g" name="makeNextStringToken" visibility="private" method="_w8dSRFgIEeSTYp88fJMr7g">
              <ownedComment xmi:id="_w8nDRlgIEeSTYp88fJMr7g">
                <body>Returns the next string in the stream.  &#xD;
	 * Returns LF (&quot;\n&quot;) at end of line.  &#xD;
	 * Returns null for EOF or error&#xD;
	 * &#xD;
	 * @return A string token or null if EOF</body>
              </ownedComment>
              <ownedParameter xmi:id="_w2f0M1gIEeSTYp88fJMr7g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_w9ChEFgIEeSTYp88fJMr7g" name="" memberEnd="_w9ChEVgIEeSTYp88fJMr7g _w7879FgIEeSTYp88fJMr7g">
            <ownedEnd xmi:id="_w9ChEVgIEeSTYp88fJMr7g" name="" type="_w2WDMFgIEeSTYp88fJMr7g" association="_w9ChEFgIEeSTYp88fJMr7g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_w9ChE1gIEeSTYp88fJMr7g" name="" memberEnd="_w9ChFFgIEeSTYp88fJMr7g _w7-KEVgIEeSTYp88fJMr7g">
            <ownedEnd xmi:id="_w9ChFFgIEeSTYp88fJMr7g" name="" type="_w2WDMFgIEeSTYp88fJMr7g" association="_w9ChE1gIEeSTYp88fJMr7g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_w9DIIVgIEeSTYp88fJMr7g" name="" memberEnd="_w9DIIlgIEeSTYp88fJMr7g _w7-KFFgIEeSTYp88fJMr7g">
            <ownedEnd xmi:id="_w9DIIlgIEeSTYp88fJMr7g" name="" type="_w2WDMFgIEeSTYp88fJMr7g" association="_w9DIIVgIEeSTYp88fJMr7g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_w9DvMVgIEeSTYp88fJMr7g" name="" memberEnd="_w9DvMlgIEeSTYp88fJMr7g _w7__QFgIEeSTYp88fJMr7g">
            <ownedEnd xmi:id="_w9DvMlgIEeSTYp88fJMr7g" name="" type="_w2dX8FgIEeSTYp88fJMr7g" association="_w9DvMVgIEeSTYp88fJMr7g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_w9EWQFgIEeSTYp88fJMr7g" name="" memberEnd="_w9EWQVgIEeSTYp88fJMr7g _w8AmUVgIEeSTYp88fJMr7g">
            <ownedEnd xmi:id="_w9EWQVgIEeSTYp88fJMr7g" name="" type="_w2dX8FgIEeSTYp88fJMr7g" association="_w9EWQFgIEeSTYp88fJMr7g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_w9EWQ1gIEeSTYp88fJMr7g" name="" memberEnd="_w9EWRFgIEeSTYp88fJMr7g _w8BNYFgIEeSTYp88fJMr7g">
            <ownedEnd xmi:id="_w9EWRFgIEeSTYp88fJMr7g" name="" type="_w2dX8FgIEeSTYp88fJMr7g" association="_w9EWQ1gIEeSTYp88fJMr7g"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w2LrIFgIEeSTYp88fJMr7g" name="ATokVisitor" isAbstract="true">
          <ownedComment xmi:id="_w8l1J1gIEeSTYp88fJMr7g">
            <body>A visitor to an Token that implements ITokVisitor using a dictionary of commands.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w754oFgIEeSTYp88fJMr7g" name="defaultCmd" visibility="private" type="_w2PVgFgIEeSTYp88fJMr7g" association="_w9BS9FgIEeSTYp88fJMr7g"/>
          <ownedAttribute xmi:id="_w76fsFgIEeSTYp88fJMr7g" name="cmds" visibility="private" type="_w2PVgFgIEeSTYp88fJMr7g" association="_w9B6AVgIEeSTYp88fJMr7g">
            <qualifier xmi:id="_w76fs1gIEeSTYp88fJMr7g">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w76fsVgIEeSTYp88fJMr7g" value="new Hashtable&lt;String, ITokVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_w6F6wFgIEeSTYp88fJMr7g" client="_w2LrIFgIEeSTYp88fJMr7g" supplier="_w2OHYFgIEeSTYp88fJMr7g" contract="_w2OHYFgIEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8aO9FgIEeSTYp88fJMr7g" name="ATokVisitor" specification="_w2MSMFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8aO9VgIEeSTYp88fJMr7g" type="_w2LrIFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>defaultCmd = new ITokVisitorCmd() {&#xD;
			public Object apply(String idx, Token host, Object... inps) {&#xD;
				throw new IllegalArgumentException(&#xD;
						&quot;ATokVisitor: Unknown token encountered: &quot; + idx);&#xD;
			}&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8aO9lgIEeSTYp88fJMr7g" name="ATokVisitor" specification="_w6Gh0FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8aO91gIEeSTYp88fJMr7g" name="defaultCmd" type="_w2PVgFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8aO-FgIEeSTYp88fJMr7g" type="_w2LrIFgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8aO-VgIEeSTYp88fJMr7g" name="caseAt" specification="_w7MG8FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8aO-lgIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8aO-1gIEeSTYp88fJMr7g" name="host" type="_w2RKslgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8aO_FgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8aO_VgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8aO_lgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {&#xD;
			return cmds.get(id).apply(id, host, params);&#xD;
		} else {&#xD;
			return defaultCmd.apply(id, host, params);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8a2AFgIEeSTYp88fJMr7g" name="addCmd" specification="_w6HI4FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8a2AVgIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8a2AlgIEeSTYp88fJMr7g" name="cmd" type="_w2PVgFgIEeSTYp88fJMr7g"/>
            <language>java</language>
            <body>cmds.put(id, cmd);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w2MSMFgIEeSTYp88fJMr7g" name="ATokVisitor" method="_w8aO9FgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w2MSMVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w2MSMlgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8l1KFgIEeSTYp88fJMr7g">
              <body>Constructor that sets the default cmd to one that throws and IllegalArgumentException&quot; for any unknown tokens.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2MSM1gIEeSTYp88fJMr7g" type="_w2LrIFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w6Gh0FgIEeSTYp88fJMr7g" name="ATokVisitor" method="_w8aO9lgIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w6Gh0lgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w6Gh01gIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8l1KVgIEeSTYp88fJMr7g">
              <body>Constructor that sets the default cmd to the given command.&#xD;
	 * @param defaultCmd the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w6Gh0VgIEeSTYp88fJMr7g" name="defaultCmd" type="_w2PVgFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w6Gh1FgIEeSTYp88fJMr7g" type="_w2LrIFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w6HI4FgIEeSTYp88fJMr7g" name="addCmd" method="_w8a2AFgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8l1KlgIEeSTYp88fJMr7g">
              <body>Add a new cmd or replace an existing cmd associated with the given host id.&#xD;
	 * @param id the id of the host to associate with this visitor.&#xD;
	 * @param cmd The command to associate with the given key value.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w6HI4VgIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6HI4lgIEeSTYp88fJMr7g" name="cmd" type="_w2PVgFgIEeSTYp88fJMr7g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w7MG8FgIEeSTYp88fJMr7g" name="caseAt" method="_w8aO-VgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w7MG8VgIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w7MG8lgIEeSTYp88fJMr7g" name="host" type="_w2RKslgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w7MuAFgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w7MuA1gIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w7MuAVgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_w2OHYFgIEeSTYp88fJMr7g" name="ITokVisitor">
          <ownedComment xmi:id="_w8l1K1gIEeSTYp88fJMr7g">
            <body>Interface for a token visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_w7N8IFgIEeSTYp88fJMr7g" name="caseAt">
            <ownedParameter xmi:id="_w7N8IVgIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w7N8IlgIEeSTYp88fJMr7g" name="host" type="_w2RKslgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w7N8I1gIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w7OjMVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w7N8JFgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_w2PVgFgIEeSTYp88fJMr7g" name="ITokVisitorCmd">
          <ownedComment xmi:id="_w8l1LFgIEeSTYp88fJMr7g">
            <body>A command for use in ATokVisitors</body>
          </ownedComment>
          <ownedOperation xmi:id="_w7PKQFgIEeSTYp88fJMr7g" name="apply">
            <ownedParameter xmi:id="_w7PKQVgIEeSTYp88fJMr7g" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w7PKQlgIEeSTYp88fJMr7g" name="host" type="_w2RKslgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w7PKQ1gIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w7PxUVgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w7PKRFgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_w2QjoFgIEeSTYp88fJMr7g" name="ITokenFactory">
          <ownedComment xmi:id="_w8mcMFgIEeSTYp88fJMr7g">
            <body>Abstract factory to produce tokens</body>
          </ownedComment>
          <ownedOperation xmi:id="_w2QjoVgIEeSTYp88fJMr7g" name="makeToken">
            <ownedParameter xmi:id="_w2RKsFgIEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2RKsVgIEeSTYp88fJMr7g" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6IXAFgIEeSTYp88fJMr7g" type="_w2RKslgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w2RKslgIEeSTYp88fJMr7g" name="Token">
          <ownedComment xmi:id="_w8mcMVgIEeSTYp88fJMr7g">
            <body>Represents a token in the language.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w77GwFgIEeSTYp88fJMr7g" name="_name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_w77GwlgIEeSTYp88fJMr7g" name="_lexeme" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8a2A1gIEeSTYp88fJMr7g" name="Token" specification="_w2RxwFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8a2BFgIEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8a2BVgIEeSTYp88fJMr7g" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8a2BlgIEeSTYp88fJMr7g" type="_w2RKslgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>_name = name;&#xD;
		_lexeme = lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8bdEFgIEeSTYp88fJMr7g" name="execute" specification="_w7QYYFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8bdEVgIEeSTYp88fJMr7g" name="algo" type="_w2OHYFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w8bdElgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8bdE1gIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8bdFFgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_name, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8bdFVgIEeSTYp88fJMr7g" name="getName" specification="_w2SY1FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8bdFlgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _name;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8bdF1gIEeSTYp88fJMr7g" name="getLexeme" specification="_w2S_4VgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8bdGFgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8bdGVgIEeSTYp88fJMr7g" name="toString" specification="_w2Tm8FgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8bdGlgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;[&quot; + _name + &quot;] &quot; + _lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w2RxwFgIEeSTYp88fJMr7g" name="Token" method="_w8a2A1gIEeSTYp88fJMr7g">
            <eAnnotations xmi:id="_w2SY0VgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w2SY0lgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_w8mcMlgIEeSTYp88fJMr7g">
              <body>Token constructor.&#xD;
	 *&#xD;
	 * @param name The name associated with this token.  This is the id value when it executes its visitors.&#xD;
	 * @param lexeme _lexeme this token is representing.</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2RxwVgIEeSTYp88fJMr7g" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2SY0FgIEeSTYp88fJMr7g" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2SY01gIEeSTYp88fJMr7g" type="_w2RKslgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w2SY1FgIEeSTYp88fJMr7g" name="getName" method="_w8bdFVgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8mcM1gIEeSTYp88fJMr7g">
              <body>Accessor for the name of this token&#xD;
	 * @return The name of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2S_4FgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2S_4VgIEeSTYp88fJMr7g" name="getLexeme" method="_w8bdF1gIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8mcNFgIEeSTYp88fJMr7g">
              <body>Accessor for the lexeme of this token&#xD;
	 * @return The lexeme of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2S_4lgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w2Tm8FgIEeSTYp88fJMr7g" name="toString" method="_w8bdGVgIEeSTYp88fJMr7g">
            <ownedComment xmi:id="_w8mcNVgIEeSTYp88fJMr7g">
              <body>Return a string representation of the token: &quot;[name] lexeme&quot;&#xD;
	 *&#xD;
	 * @return string representation</body>
            </ownedComment>
            <ownedParameter xmi:id="_w2Tm8VgIEeSTYp88fJMr7g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_w7QYYFgIEeSTYp88fJMr7g" name="execute" method="_w8bdEFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w7QYYVgIEeSTYp88fJMr7g" name="algo" type="_w2OHYFgIEeSTYp88fJMr7g"/>
            <ownedParameter xmi:id="_w7QYYlgIEeSTYp88fJMr7g" name="params" type="_w6zFYVgIEeSTYp88fJMr7g">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w7Q_clgIEeSTYp88fJMr7g" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w7Q_cFgIEeSTYp88fJMr7g" type="_w6zFYVgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w2UOAFgIEeSTYp88fJMr7g" name="TokenFactory">
          <ownedComment xmi:id="_w8mcNlgIEeSTYp88fJMr7g">
            <body>Concrete factory to create tokens</body>
          </ownedComment>
          <ownedAttribute xmi:id="_w77t0VgIEeSTYp88fJMr7g" name="Singleton" isLeaf="true" isStatic="true" type="_w2UOAFgIEeSTYp88fJMr7g" isReadOnly="true" association="_w9B6BFgIEeSTYp88fJMr7g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_w77t0lgIEeSTYp88fJMr7g" value="new TokenFactory()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_w6JlIFgIEeSTYp88fJMr7g" client="_w2UOAFgIEeSTYp88fJMr7g" supplier="_w2QjoFgIEeSTYp88fJMr7g" contract="_w2QjoFgIEeSTYp88fJMr7g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_w8cEIFgIEeSTYp88fJMr7g" name="makeToken" specification="_w2VcIVgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w8cEIVgIEeSTYp88fJMr7g" name="name">
              <eAnnotations xmi:id="_w8cEIlgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_w8cEI1gIEeSTYp88fJMr7g" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8cEJFgIEeSTYp88fJMr7g" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w8cEJVgIEeSTYp88fJMr7g" type="_w2RKslgIEeSTYp88fJMr7g" direction="return"/>
            <language>java</language>
            <body>return new Token(name, lexeme);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_w2U1EFgIEeSTYp88fJMr7g" name="TokenFactory" visibility="private">
            <eAnnotations xmi:id="_w2U1EVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_w2U1ElgIEeSTYp88fJMr7g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_w2VcIFgIEeSTYp88fJMr7g" type="_w2UOAFgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_w2VcIVgIEeSTYp88fJMr7g" name="makeToken" method="_w8cEIFgIEeSTYp88fJMr7g">
            <ownedParameter xmi:id="_w2VcIlgIEeSTYp88fJMr7g" name="name">
              <eAnnotations xmi:id="_w2VcJFgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_w2VcJVgIEeSTYp88fJMr7g" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w2VcI1gIEeSTYp88fJMr7g" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_w6KMMFgIEeSTYp88fJMr7g" type="_w2RKslgIEeSTYp88fJMr7g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w9BS9FgIEeSTYp88fJMr7g" name="" memberEnd="_w9BS9VgIEeSTYp88fJMr7g _w754oFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w9BS9VgIEeSTYp88fJMr7g" name="" type="_w2LrIFgIEeSTYp88fJMr7g" association="_w9BS9FgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w9B6AVgIEeSTYp88fJMr7g" name="" memberEnd="_w9B6AlgIEeSTYp88fJMr7g _w76fsFgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w9B6AlgIEeSTYp88fJMr7g" name="" type="_w2LrIFgIEeSTYp88fJMr7g" association="_w9B6AVgIEeSTYp88fJMr7g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_w9B6BFgIEeSTYp88fJMr7g" name="" memberEnd="_w9B6BVgIEeSTYp88fJMr7g _w77t0VgIEeSTYp88fJMr7g">
          <ownedEnd xmi:id="_w9B6BVgIEeSTYp88fJMr7g" name="" type="_w2UOAFgIEeSTYp88fJMr7g" association="_w9B6BFgIEeSTYp88fJMr7g"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_wz6aQFgIEeSTYp88fJMr7g" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_wz6aQVgIEeSTYp88fJMr7g" name="sound">
        <packagedElement xmi:type="uml:Package" xmi:id="_wz6aQlgIEeSTYp88fJMr7g" name="midi">
          <packagedElement xmi:type="uml:Class" xmi:id="_w6QS0FgIEeSTYp88fJMr7g" name="Instrument"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_w6Rg8VgIEeSTYp88fJMr7g" name="MidiSystem"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_w6SIAVgIEeSTYp88fJMr7g" name="MidiUnavailableException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_w6SvEVgIEeSTYp88fJMr7g" name="Synthesizer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_w7IckFgIEeSTYp88fJMr7g" name="Sequence"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_w7JDoFgIEeSTYp88fJMr7g" name="Track"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_w7KRwFgIEeSTYp88fJMr7g" name="Sequencer"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_w0b-sFgIEeSTYp88fJMr7g" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_w0b-sVgIEeSTYp88fJMr7g" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_w6XAgVgIEeSTYp88fJMr7g" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_w6m4I1gIEeSTYp88fJMr7g" name="TitledBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6VyYVgIEeSTYp88fJMr7g" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6WZcVgIEeSTYp88fJMr7g" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6XAg1gIEeSTYp88fJMr7g" name="JSplitPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6XnkVgIEeSTYp88fJMr7g" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6kb4VgIEeSTYp88fJMr7g" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6lC8VgIEeSTYp88fJMr7g" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6mRElgIEeSTYp88fJMr7g" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_w6m4IVgIEeSTYp88fJMr7g" name="JTextArea"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_wL7NMFgIEeSTYp88fJMr7g">
      <eAnnotations xmi:id="_wL7NMVgIEeSTYp88fJMr7g" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_wL70QFgIEeSTYp88fJMr7g" base_Package="_v2JKcFgIEeSTYp88fJMr7g">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w1YZ4lgIEeSTYp88fJMr7g" base_Element="_w1Xy0FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w1bdMlgIEeSTYp88fJMr7g" base_Element="_w1bdMFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w1cEQFgIEeSTYp88fJMr7g" base_Element="_w1bdMFgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w1cEQVgIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w1l1QFgIEeSTYp88fJMr7g" base_Element="_w1lOMFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w1xbcFgIEeSTYp88fJMr7g" base_Element="_w1w0YFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w1zQo1gIEeSTYp88fJMr7g" base_Element="_w1zQoFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w11F0VgIEeSTYp88fJMr7g" base_Element="_w10ewVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w11F0lgIEeSTYp88fJMr7g" base_Element="_w10ewVgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w11F01gIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w2U1E1gIEeSTYp88fJMr7g" base_Element="_w2U1EFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w2biwFgIEeSTYp88fJMr7g" base_Element="_w2a7s1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:StyledElement xmi:id="_w2biwlgIEeSTYp88fJMr7g" base_Element="_w2biwVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w2emElgIEeSTYp88fJMr7g" base_Element="_w2emEFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w2emE1gIEeSTYp88fJMr7g" base_Element="_w2emEFgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w2emFFgIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w2fNIlgIEeSTYp88fJMr7g" base_Element="_w2fNIFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w2f0MFgIEeSTYp88fJMr7g" base_Element="_w2fNIFgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w2f0MVgIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w2kFolgIEeSTYp88fJMr7g" base_Element="_w2jekVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w2l60VgIEeSTYp88fJMr7g" base_Element="_w2lTw1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w5jvQFgIEeSTYp88fJMr7g" base_Element="_w5jIMFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w5rEAFgIEeSTYp88fJMr7g" base_Element="_w5qc8FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w5rEAlgIEeSTYp88fJMr7g" base_Element="_w5rEAVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w5vVclgIEeSTYp88fJMr7g" base_Element="_w5tgQFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w5v8gFgIEeSTYp88fJMr7g" base_Element="_w5tgQVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w5yYw1gIEeSTYp88fJMr7g" base_Element="_w5xxsFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w5y_0FgIEeSTYp88fJMr7g" base_Element="_w5yYwFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w55thFgIEeSTYp88fJMr7g" base_Element="_w55tgFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w56UkFgIEeSTYp88fJMr7g" base_Element="_w55tgVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w567o1gIEeSTYp88fJMr7g" base_Element="_w56UklgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w567plgIEeSTYp88fJMr7g" base_Element="_w567oFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w57islgIEeSTYp88fJMr7g" base_Element="_w57isFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w57itFgIEeSTYp88fJMr7g" base_Element="_w57isVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w5_NE1gIEeSTYp88fJMr7g" base_Element="_w5-mAVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w5_NFlgIEeSTYp88fJMr7g" dimensions="1" base_Element="_w5_NEFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:StyledElement xmi:id="_w6MBY1gIEeSTYp88fJMr7g" base_Element="_w6MBYVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6MocFgIEeSTYp88fJMr7g" base_Element="_w6MBZFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6NPgFgIEeSTYp88fJMr7g" base_Element="_w6MocVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6NPglgIEeSTYp88fJMr7g" base_Element="_w6NPgVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6N2kVgIEeSTYp88fJMr7g" base_Element="_w6N2kFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6OdoFgIEeSTYp88fJMr7g" base_Element="_w6N2klgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6OdolgIEeSTYp88fJMr7g" base_Element="_w6OdoVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6PEsFgIEeSTYp88fJMr7g" base_Element="_w6Odo1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6Rg8FgIEeSTYp88fJMr7g" base_Element="_w6QS0FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6SIAFgIEeSTYp88fJMr7g" base_Element="_w6Rg8VgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6SvEFgIEeSTYp88fJMr7g" base_Element="_w6SIAVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6SvElgIEeSTYp88fJMr7g" base_Element="_w6SvEVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6VyYFgIEeSTYp88fJMr7g" base_Element="_w6VLUFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6WZcFgIEeSTYp88fJMr7g" base_Element="_w6VyYVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6XAgFgIEeSTYp88fJMr7g" base_Element="_w6WZcVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6XAglgIEeSTYp88fJMr7g" base_Element="_w6XAgVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6XnkFgIEeSTYp88fJMr7g" base_Element="_w6XAg1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6kb4FgIEeSTYp88fJMr7g" base_Element="_w6XnkVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6lC8FgIEeSTYp88fJMr7g" base_Element="_w6kb4VgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6lqAFgIEeSTYp88fJMr7g" base_Element="_w6lC8VgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6lqAlgIEeSTYp88fJMr7g" base_Element="_w6lqAVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6mREVgIEeSTYp88fJMr7g" base_Element="_w6mREFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6m4IFgIEeSTYp88fJMr7g" base_Element="_w6mRElgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6m4IlgIEeSTYp88fJMr7g" base_Element="_w6m4IVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6nfMFgIEeSTYp88fJMr7g" base_Element="_w6m4I1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6yeUFgIEeSTYp88fJMr7g" base_Element="_w6x3QFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w6zscFgIEeSTYp88fJMr7g" base_Element="_w6zFYVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w60TgFgIEeSTYp88fJMr7g" base_Element="_w6zscVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w60TglgIEeSTYp88fJMr7g" base_Element="_w6zsdFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w606lFgIEeSTYp88fJMr7g" base_Element="_w606kFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w606llgIEeSTYp88fJMr7g" base_Element="_w606klgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w61hoFgIEeSTYp88fJMr7g" base_Element="_w606kFgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w61hoVgIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w62IsVgIEeSTYp88fJMr7g" base_Element="_w61holgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w62Is1gIEeSTYp88fJMr7g" base_Element="_w61hpFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w62ItFgIEeSTYp88fJMr7g" base_Element="_w61holgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w62ItVgIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w62vxFgIEeSTYp88fJMr7g" base_Element="_w62vwFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w63W0VgIEeSTYp88fJMr7g" base_Element="_w62vwlgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w63W0lgIEeSTYp88fJMr7g" base_Element="_w62vwFgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w63W01gIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w64k8VgIEeSTYp88fJMr7g" base_Element="_w6394FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w64k81gIEeSTYp88fJMr7g" dimensions="1" base_Element="_w6394lgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w64k9FgIEeSTYp88fJMr7g" base_Element="_w6394FgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w65MAFgIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w66aIFgIEeSTYp88fJMr7g" base_Element="_w65zEFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w66aIlgIEeSTYp88fJMr7g" base_Element="_w65zElgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w67oQVgIEeSTYp88fJMr7g" base_Element="_w67BMFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w68PUFgIEeSTYp88fJMr7g" base_Element="_w67BM1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w682ZFgIEeSTYp88fJMr7g" base_Element="_w68PUVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w69dcFgIEeSTYp88fJMr7g" base_Element="_w682YlgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w6-EhFgIEeSTYp88fJMr7g" base_Element="_w6-EgFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w6-rkFgIEeSTYp88fJMr7g" base_Element="_w6-EglgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w6-rkVgIEeSTYp88fJMr7g" base_Element="_w6-EgFgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w6-rklgIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w6_5sFgIEeSTYp88fJMr7g" base_Element="_w6_SoFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w6_5slgIEeSTYp88fJMr7g" base_Element="_w6_SolgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w6_5s1gIEeSTYp88fJMr7g" base_Element="_w6_SoFgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w6_5tFgIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7Bu4lgIEeSTYp88fJMr7g" base_Element="_w7BH0FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w7CV8FgIEeSTYp88fJMr7g" base_Element="_w7Bu4FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w7CV8VgIEeSTYp88fJMr7g" base_Element="_w7BH0FgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w7CV8lgIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7ELIVgIEeSTYp88fJMr7g" base_Element="_w7DkEFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w7ELI1gIEeSTYp88fJMr7g" base_Element="_w7DkElgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w7EyMFgIEeSTYp88fJMr7g" base_Element="_w7DkEFgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w7EyMVgIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7GAUFgIEeSTYp88fJMr7g" base_Element="_w7FZQFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w7GAUlgIEeSTYp88fJMr7g" base_Element="_w7FZQlgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w7GnYFgIEeSTYp88fJMr7g" base_Element="_w7FZQFgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w7GnYVgIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7HOdFgIEeSTYp88fJMr7g" base_Element="_w7HOcFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w7H1gFgIEeSTYp88fJMr7g" base_Element="_w7HOclgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w7H1gVgIEeSTYp88fJMr7g" base_Element="_w7HOcFgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w7H1glgIEeSTYp88fJMr7g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_w7IckVgIEeSTYp88fJMr7g" base_Element="_w7IckFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w7JqsFgIEeSTYp88fJMr7g" base_Element="_w7JDoFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w7KRwVgIEeSTYp88fJMr7g" base_Element="_w7KRwFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7MuAlgIEeSTYp88fJMr7g" base_Element="_w7MG8FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w7MuBFgIEeSTYp88fJMr7g" base_Element="_w7MuAFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7OjMFgIEeSTYp88fJMr7g" base_Element="_w7N8IFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w7OjMlgIEeSTYp88fJMr7g" base_Element="_w7N8I1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7PxUFgIEeSTYp88fJMr7g" base_Element="_w7PKQFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w7PxUlgIEeSTYp88fJMr7g" base_Element="_w7PKQ1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7Q_cVgIEeSTYp88fJMr7g" base_Element="_w7QYYFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w7Q_c1gIEeSTYp88fJMr7g" base_Element="_w7QYYlgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w7SNkVgIEeSTYp88fJMr7g" base_Element="_w7SNkFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w7VQ4FgIEeSTYp88fJMr7g" base_Element="_w7Up0FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7dMsVgIEeSTYp88fJMr7g" base_Element="_w7dMsFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7dzwVgIEeSTYp88fJMr7g" base_Element="_w7dzwFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7ea0VgIEeSTYp88fJMr7g" base_Element="_w7ea0FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Annotations xmi:id="_w7ea0lgIEeSTYp88fJMr7g" base_Element="_w7ea0FgIEeSTYp88fJMr7g">
    <annotations xmi:id="_w7fB4FgIEeSTYp88fJMr7g" name="SuppressWarnings">
      <annotationParameters xmi:id="_w7fB4VgIEeSTYp88fJMr7g" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_w8hjuVgIEeSTYp88fJMr7g" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7fB41gIEeSTYp88fJMr7g" base_Element="_w7fB4lgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7fo8VgIEeSTYp88fJMr7g" base_Element="_w7fo8FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7gQAlgIEeSTYp88fJMr7g" base_Element="_w7gQAFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7g3EVgIEeSTYp88fJMr7g" base_Element="_w7g3EFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7g3E1gIEeSTYp88fJMr7g" base_Element="_w7g3ElgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7heIlgIEeSTYp88fJMr7g" base_Element="_w7heIFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7iFMVgIEeSTYp88fJMr7g" base_Element="_w7heI1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7jTUFgIEeSTYp88fJMr7g" base_Element="_w7isQFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7jTU1gIEeSTYp88fJMr7g" base_Element="_w7jTUVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Generics xmi:id="_w7j6YVgIEeSTYp88fJMr7g" genericsValue="DecoratorSeqList" base_Element="_w7j6YFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7khcFgIEeSTYp88fJMr7g" base_Element="_w7j6YFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Generics xmi:id="_w7lIgFgIEeSTYp88fJMr7g" genericsValue="DecoratorSeqList" base_Element="_w7khcVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7lIglgIEeSTYp88fJMr7g" base_Element="_w7khcVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7lvkVgIEeSTYp88fJMr7g" base_Element="_w7lIg1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7mWoFgIEeSTYp88fJMr7g" base_Element="_w7lvklgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7mWo1gIEeSTYp88fJMr7g" base_Element="_w7mWoVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7m9sVgIEeSTYp88fJMr7g" base_Element="_w7mWpFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7m9tFgIEeSTYp88fJMr7g" base_Element="_w7m9slgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7nkwlgIEeSTYp88fJMr7g" base_Element="_w7nkwFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7oL0FgIEeSTYp88fJMr7g" base_Element="_w7nkw1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7oy4FgIEeSTYp88fJMr7g" base_Element="_w7oL0VgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7oy41gIEeSTYp88fJMr7g" base_Element="_w7oy4VgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7qBAVgIEeSTYp88fJMr7g" base_Element="_w7pZ81gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7qoEFgIEeSTYp88fJMr7g" base_Element="_w7qBAlgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7qoElgIEeSTYp88fJMr7g" base_Element="_w7qoEVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7rPIFgIEeSTYp88fJMr7g" base_Element="_w7qoE1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7sdQFgIEeSTYp88fJMr7g" base_Element="_w7r2NFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7tEUVgIEeSTYp88fJMr7g" base_Element="_w7tEUFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7trYFgIEeSTYp88fJMr7g" base_Element="_w7tEUlgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7vgklgIEeSTYp88fJMr7g" base_Element="_w7vgkFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w7wHolgIEeSTYp88fJMr7g" dimensions="1" base_Element="_w7wHoFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7wHo1gIEeSTYp88fJMr7g" base_Element="_w7wHoFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w7wuslgIEeSTYp88fJMr7g" dimensions="1" base_Element="_w7wusFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7wutFgIEeSTYp88fJMr7g" base_Element="_w7wusFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7xVwlgIEeSTYp88fJMr7g" base_Element="_w7xVwFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7yj4FgIEeSTYp88fJMr7g" base_Element="_w7x81FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7yj4lgIEeSTYp88fJMr7g" base_Element="_w7yj4VgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7zK8FgIEeSTYp88fJMr7g" base_Element="_w7yj41gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7zyAVgIEeSTYp88fJMr7g" base_Element="_w7zyAFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w70ZEFgIEeSTYp88fJMr7g" base_Element="_w7zyAlgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w70ZElgIEeSTYp88fJMr7g" base_Element="_w70ZEVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w70ZFFgIEeSTYp88fJMr7g" base_Element="_w70ZE1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w71AIVgIEeSTYp88fJMr7g" base_Element="_w71AIFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w71nMlgIEeSTYp88fJMr7g" base_Element="_w71nMFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w721UFgIEeSTYp88fJMr7g" base_Element="_w72OQlgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w73cYFgIEeSTYp88fJMr7g" base_Element="_w721UVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w74DcFgIEeSTYp88fJMr7g" base_Element="_w73cYVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w74DclgIEeSTYp88fJMr7g" base_Element="_w74DcVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w74qgVgIEeSTYp88fJMr7g" base_Element="_w74qgFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w75RkFgIEeSTYp88fJMr7g" base_Element="_w74qglgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w75RlVgIEeSTYp88fJMr7g" base_Element="_w75RkVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w754oVgIEeSTYp88fJMr7g" base_Element="_w754oFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w76fslgIEeSTYp88fJMr7g" base_Element="_w76fsFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w77GwVgIEeSTYp88fJMr7g" base_Element="_w77GwFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w77t0FgIEeSTYp88fJMr7g" base_Element="_w77GwlgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w78U4lgIEeSTYp88fJMr7g" base_Element="_w78U4FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7878lgIEeSTYp88fJMr7g" base_Element="_w7878FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Generics xmi:id="_w79jAFgIEeSTYp88fJMr7g" genericsValue="Map&lt;String, String>" base_Element="_w7879FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7-KEFgIEeSTYp88fJMr7g" base_Element="_w7879FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7-KE1gIEeSTYp88fJMr7g" base_Element="_w7-KEVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Generics xmi:id="_w7-xIFgIEeSTYp88fJMr7g" genericsValue="Token" base_Element="_w7-KFFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w7_YMFgIEeSTYp88fJMr7g" base_Element="_w7-KFFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Generics xmi:id="_w7__QVgIEeSTYp88fJMr7g" genericsValue="String" base_Element="_w7__QFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8AmUFgIEeSTYp88fJMr7g" base_Element="_w7__QFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8AmUlgIEeSTYp88fJMr7g" base_Element="_w8AmUVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8BNYVgIEeSTYp88fJMr7g" base_Element="_w8BNYFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w8Cbg1gIEeSTYp88fJMr7g" base_Element="_w8CbgVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w8DCk1gIEeSTYp88fJMr7g" base_Element="_w8DCkVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8DpoFgIEeSTYp88fJMr7g" base_Element="_w8DClVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8DpolgIEeSTYp88fJMr7g" base_Element="_w8DpoVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8EQslgIEeSTYp88fJMr7g" base_Element="_w8EQsFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w8E3wVgIEeSTYp88fJMr7g" base_Element="_w8EQtFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8E3w1gIEeSTYp88fJMr7g" base_Element="_w8EQtFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Array xmi:id="_w8Fe0FgIEeSTYp88fJMr7g" base_Element="_w8E3xFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8Fe0lgIEeSTYp88fJMr7g" base_Element="_w8E3xFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8GF41gIEeSTYp88fJMr7g" base_Element="_w8GF4lgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8Gs8FgIEeSTYp88fJMr7g" base_Element="_w8GF5FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8Gs81gIEeSTYp88fJMr7g" base_Element="_w8Gs8VgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8HUAVgIEeSTYp88fJMr7g" base_Element="_w8Gs9FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8H7EFgIEeSTYp88fJMr7g" base_Element="_w8HUAlgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8H7E1gIEeSTYp88fJMr7g" base_Element="_w8H7EVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8IiIlgIEeSTYp88fJMr7g" base_Element="_w8IiIFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8JJMFgIEeSTYp88fJMr7g" base_Element="_w8IiI1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8JJM1gIEeSTYp88fJMr7g" base_Element="_w8JJMVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8JwQFgIEeSTYp88fJMr7g" base_Element="_w8JJNFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8JwQ1gIEeSTYp88fJMr7g" base_Element="_w8JwQVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8KXUFgIEeSTYp88fJMr7g" base_Element="_w8JwRFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_w8KXU1gIEeSTYp88fJMr7g" base_Element="_w8KXUVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w8wNMFgIEeSTYp88fJMr7g" base_Element="_w8vmIFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w8w0QFgIEeSTYp88fJMr7g" base_Element="_w8wNMVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w8xbUFgIEeSTYp88fJMr7g" base_Element="_w8w0QVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w8yCYFgIEeSTYp88fJMr7g" base_Element="_w8xbUVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w8yCY1gIEeSTYp88fJMr7g" base_Element="_w8yCYVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w8ypcFgIEeSTYp88fJMr7g" base_Element="_w8yCZFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w8zQgFgIEeSTYp88fJMr7g" base_Element="_w8ypcVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w80eoFgIEeSTYp88fJMr7g" base_Element="_w8zQgVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w81FsFgIEeSTYp88fJMr7g" base_Element="_w80eoVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w81swFgIEeSTYp88fJMr7g" base_Element="_w81FsVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w81sw1gIEeSTYp88fJMr7g" base_Element="_w81swVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w82T0lgIEeSTYp88fJMr7g" base_Element="_w82T0FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w8264FgIEeSTYp88fJMr7g" base_Element="_w82T01gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w83h8FgIEeSTYp88fJMr7g" base_Element="_w8264VgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w84JAFgIEeSTYp88fJMr7g" base_Element="_w83h8VgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w84wEFgIEeSTYp88fJMr7g" base_Element="_w84JAVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w85XIFgIEeSTYp88fJMr7g" base_Element="_w84wEVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w85-MFgIEeSTYp88fJMr7g" base_Element="_w85XIVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w86lQFgIEeSTYp88fJMr7g" base_Element="_w85-MVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w87MUFgIEeSTYp88fJMr7g" base_Element="_w86lQVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w87zYFgIEeSTYp88fJMr7g" base_Element="_w87MUVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w88acFgIEeSTYp88fJMr7g" base_Element="_w87zYVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w89BgFgIEeSTYp88fJMr7g" base_Element="_w88acVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w89okFgIEeSTYp88fJMr7g" base_Element="_w89BgVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w8-PoFgIEeSTYp88fJMr7g" base_Element="_w89okVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w8_dwFgIEeSTYp88fJMr7g" base_Element="_w8-2sFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w8_dw1gIEeSTYp88fJMr7g" base_Element="_w8_dwVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9AE0FgIEeSTYp88fJMr7g" base_Element="_w8_dxFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9AE01gIEeSTYp88fJMr7g" base_Element="_w9AE0VgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9Ar4FgIEeSTYp88fJMr7g" base_Element="_w9AE1FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9Ar41gIEeSTYp88fJMr7g" base_Element="_w9Ar4VgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9BS8FgIEeSTYp88fJMr7g" base_Element="_w9Ar5FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9BS81gIEeSTYp88fJMr7g" base_Element="_w9BS8VgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9B6AFgIEeSTYp88fJMr7g" base_Element="_w9BS9FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9B6A1gIEeSTYp88fJMr7g" base_Element="_w9B6AVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9B6BlgIEeSTYp88fJMr7g" base_Element="_w9B6BFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9ChElgIEeSTYp88fJMr7g" base_Element="_w9ChEFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9DIIFgIEeSTYp88fJMr7g" base_Element="_w9ChE1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9DvMFgIEeSTYp88fJMr7g" base_Element="_w9DIIVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9DvM1gIEeSTYp88fJMr7g" base_Element="_w9DvMVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9EWQlgIEeSTYp88fJMr7g" base_Element="_w9EWQFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9E9UFgIEeSTYp88fJMr7g" base_Element="_w9EWQ1gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9E9U1gIEeSTYp88fJMr7g" base_Element="_w9E9UVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9FkYFgIEeSTYp88fJMr7g" base_Element="_w9E9VFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9FkY1gIEeSTYp88fJMr7g" base_Element="_w9FkYVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9GLcFgIEeSTYp88fJMr7g" base_Element="_w9FkZFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9GLc1gIEeSTYp88fJMr7g" base_Element="_w9GLcVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9GygFgIEeSTYp88fJMr7g" base_Element="_w9GLdFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9Gyg1gIEeSTYp88fJMr7g" base_Element="_w9GygVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9HZkFgIEeSTYp88fJMr7g" base_Element="_w9GyhFgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9IAoFgIEeSTYp88fJMr7g" base_Element="_w9HZkVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9InsFgIEeSTYp88fJMr7g" base_Element="_w9IAoVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9JOwFgIEeSTYp88fJMr7g" base_Element="_w9InsVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9JOw1gIEeSTYp88fJMr7g" base_Element="_w9JOwVgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9J10lgIEeSTYp88fJMr7g" base_Element="_w9J10FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9Kc4lgIEeSTYp88fJMr7g" base_Element="_w9Kc4FgIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9LD8FgIEeSTYp88fJMr7g" base_Element="_w9Kc41gIEeSTYp88fJMr7g"/>
  <UMLLabProfile:Reference xmi:id="_w9LrAFgIEeSTYp88fJMr7g" base_Element="_w9LD8VgIEeSTYp88fJMr7g"/>
</xmi:XMI>
