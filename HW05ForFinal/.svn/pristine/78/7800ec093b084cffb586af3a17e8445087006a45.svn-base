package model.paint;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.AffineTransform;

import model.ball.Ball;

/**
 * Paint strategy for Shape objects
 * @author lss4, yh20, jfe2
 *
 */
public class ShapePaintStrategy extends APaintStrategy {
	/**
	 * The shape that this strategy will paint.
	 */
	private Shape _shape;
	
	/**
	 * Constructor taking a shape object
	 * @param shape
	 */
	public ShapePaintStrategy(Shape shape){
		super(new AffineTransform());
		_shape = shape;
	}
	
	/**
	 * Constructor taking an affine transform and a paint object
	 * @param at
	 * @param shape
	 */
	public ShapePaintStrategy(AffineTransform at, Shape shape){
		super(at);
		_shape = shape;
	}
	
	/**
	 *  Uses the existing affine transform to create the shape image at the 
	 *  desired size, rotation and location.
	 */
	@Override
	public void paintXfrm(Graphics g, Ball host, AffineTransform at){ 
	    ((Graphics2D) g).fill(at.createTransformedShape(_shape));
	}

}
